<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>Rails gem - Rails Webook</title>
    <link>http://ruby-rails.hatenadiary.com/category/Rails%20gem</link>
    <description>自社のECを開発している会社で働いています。Rails情報やサービスを成長させる方法を書いていきます</description>
    <lastBuildDate>Fri, 18 Dec 2015 02:44:31 +0900</lastBuildDate>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <generator>Hatena::Blog</generator>
    
      
      
        <item>
          <title>Railsでacts-as-taggable-onを使ってタグ管理を行う</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150225/1424858414</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224135234.jpg&quot; alt=&quot;f:id:nipe880324:20150224135234j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224135234j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;i&gt;&lt;a href=&quot;https://www.flickr.com/photos/cambodia4kidsorg/&quot;&gt;Flickr: cambodia4kidsorg&amp;#39;s Photostream&lt;/a&gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/mbleigh/acts-as-taggable-on&quot; target=&quot;_blank&quot;&gt;acts-as-taggable-on&lt;/a&gt;はタグの追加、削除、関連するオブジェクトの取得、タグクラウドなどのタグを管理するためのgemです。&lt;/p&gt;&lt;p&gt;今回は、Railsで&lt;code&gt;acts-as-taggable-on&lt;/code&gt;でタグ管理を行う方法について説明します。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby  2.2.0&lt;/li&gt;
&lt;li&gt;Rails 4.2.0&lt;/li&gt;
&lt;li&gt;acts-as-taggable-on 3.4.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#acts-as-taggable-on-install&quot;&gt;acts-as-taggable-onのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#acts-as-taggable-on-basic_usage&quot;&gt;acts-as-taggable-onの基本的な使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#acts-as-taggable-on-user_manage&quot;&gt;acts-as-taggable-onを使ってユーザー管理にタグ機能を実装してみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#acts-as-taggable-on-bootstrap_tags_input&quot;&gt;Bootstrap Tags Inputを使ってユーザーのタグ入力を簡易にする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#acts-as-taggable-on-related_users&quot;&gt;同じタグを保持しているユーザーを表示する&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;acts-as-taggable-on-install&quot;&gt;1. acts-as-taggable-onのインストール&lt;/h3&gt;Gemfileに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;acts-as-taggable-on&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;~&amp;gt; 3.4&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
バンドルを実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bunlde
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;acts-as-taggable-on&lt;/code&gt;で必要なテーブルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;bin/rake acts_as_taggable_on_engine&lt;span class=&quot;synConstant&quot;&gt;:install:migrations&lt;/span&gt;
bin/rake db&lt;span class=&quot;synConstant&quot;&gt;:migrate&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;acts-as-taggable-on-basic_usage&quot;&gt;2. acts-as-taggable-onの基本的な使い方&lt;/h3&gt;モデルファイルに&lt;code&gt;acts_as_taggable_on&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  acts_as_taggable_on &lt;span class=&quot;synConstant&quot;&gt;:labels&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# post.label_list が追加される&lt;/span&gt;
  acts_as_taggable            &lt;span class=&quot;synComment&quot;&gt;# acts_as_taggable_on :tags のエイリアス&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
上記のように設定することで、以下の２つのメソッドを利用することができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;post.label_list
post.tag_list
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次のようにして、タグの追加、取得、設定、削除ができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# タグの追加&lt;/span&gt;
post.tag_list.add(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;programming&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)  &lt;span class=&quot;synComment&quot;&gt;# &amp;quot;Programming&amp;quot;タグを追加する&lt;/span&gt;
post.tag_list.add(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;tips&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;hardware&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# 複数のタグを追加する&lt;/span&gt;
post.save

post.label_list &lt;span class=&quot;synComment&quot;&gt;# tag_listだけでなく、別のタグリストのlabel_listにもアクセス可能です&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# タグの取得&lt;/span&gt;
post.tag_list &lt;span class=&quot;synComment&quot;&gt;#=&amp;gt; [&amp;quot;programming&amp;quot;, &amp;quot;tips&amp;quot;, &amp;quot;hardware&amp;quot;]&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# タグの設定（上書きされる）&lt;/span&gt;
post.tag_list = [&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;programming&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;tips&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;] &lt;span class=&quot;synComment&quot;&gt;# &amp;quot;a,b&amp;quot;といったカンマ区切りの文字列でも入力可能&lt;/span&gt;
post.tag_list &lt;span class=&quot;synComment&quot;&gt;#=&amp;gt; [&amp;quot;programming&amp;quot;, &amp;quot;tips&amp;quot;]&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# タグの削除&lt;/span&gt;
post.tag_list.remove(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;programming&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# &amp;quot;programming&amp;quot;タグを削除する&lt;/span&gt;
post.tag_list.clear                 &lt;span class=&quot;synComment&quot;&gt;# すべてのタグを削除する&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
「最も使われて&lt;b&gt;いる&lt;/b&gt;タグ」と「最も使われて&lt;b&gt;いない&lt;/b&gt;タグ」を取得できます。&lt;br /&gt;
デフォルトで20件取得します。引数で件数を指定することで取得するを変更できます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# 最も使われているタグを配列で取得&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;ActsAsTaggableOn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Tag&lt;/span&gt;.most_used
&lt;span class=&quot;synType&quot;&gt;ActsAsTaggableOn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Tag&lt;/span&gt;.most_used(&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;)

&lt;span class=&quot;synComment&quot;&gt;# 最も使われていないタグを配列で取得&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;ActsAsTaggableOn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Tag&lt;/span&gt;.least_used
&lt;span class=&quot;synType&quot;&gt;ActsAsTaggableOn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Tag&lt;/span&gt;.least_used(&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;tagged_with&lt;/code&gt;メソッドで、特定のタグでPostを検索するができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# programmingのタグがつけられているPostを取得する&lt;/span&gt;
posts = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.tagged_with(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;programming&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)

&lt;span class=&quot;synComment&quot;&gt;# programmingとjavascriptタグがつけれれているPostを取得する&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# :match_all (AND条件), :any (OR条件), :exclued (NOT条件)が使える&lt;/span&gt;
posts = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.tagged_with([&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;programming&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;javascript&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;], &lt;span class=&quot;synConstant&quot;&gt;match_all&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;find_related_skills&lt;/code&gt;メソッドで、同じタグを持ったPostを検索することができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.find_related_skill &lt;span class=&quot;synComment&quot;&gt;#=&amp;gt; [&amp;lt;Post ...&amp;gt;, &amp;lt;Post ...&amp;gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;acts-as-taggable-on-user_manage&quot;&gt;3. acts-as-taggable-onを使ってユーザー管理にタグ機能を実装してみる&lt;/h3&gt;ここからは、&lt;code&gt;acts-as-taggable-on&lt;/code&gt;を使って、次のようにRailsでユーザー管理にタグ機能を追加するようにしてみます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224140517.jpg&quot; alt=&quot;f:id:nipe880324:20150224140517j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224140517j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;まず、ユーザーをScaffoldで作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bin/rails g scaffold User name
bin/rake db:migrate
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、Userモデルに&lt;code&gt;skills&lt;/code&gt;と&lt;code&gt;interests&lt;/code&gt;といった２つのタグリストを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  acts_as_ordered_taggable_on &lt;span class=&quot;synConstant&quot;&gt;:skills&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:interests&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に画面からそれぞれのタグリストをテキストフィールドでカンマ区切りで入力できるようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/users/_form.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(@user)&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; do |f| %&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;名前&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :skill_list, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;スキル・特技（カンマ区切り）&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; text_field_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;user[skill_list]&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, @user.skill_list.join(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;) %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :interest_list, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;興味・関心（カンマ区切り）&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; text_field_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;user[interest_list]&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, @user.interest_list.join(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;) %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;actions&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
UsersコントローラーのStrongParametersでこれらのパラメーターを受け取れるようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/users_controller.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;user_params&lt;/span&gt;
  params.require(&lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:skill_list&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:interest_list&lt;/span&gt;)
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、入力したタグを画面に表示できるようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/users/index.html.erb --&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;名前&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;スキル・特技&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;興味・関心&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @users.each do |user| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; user.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;users/tag_list&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, tag_list: user.skill_list %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;users/tag_list&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, tag_list: user.interest_list %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, user %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_user_path(user) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, user, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Are you sure?&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...


&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/users_tag_list.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% tag_list.each do |tag| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;label label-primary&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、タグが入力/表示できることを確認します。&lt;br /&gt;
まず、入力画面でカンマ区切りで入力します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224140530.jpg&quot; alt=&quot;f:id:nipe880324:20150224140530j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224140530j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして保存して、一覧画面を表示すると入力したタグが表示されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224140540.jpg&quot; alt=&quot;f:id:nipe880324:20150224140540j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224140540j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;acts-as-taggable-on-bootstrap_tags_input&quot;&gt;4. Bootstrap Tags Inputを使ってユーザーのタグ入力を簡易にする&lt;/h3&gt;&lt;a href=&quot;http://timschlechter.github.io/bootstrap-tagsinput/examples/&quot; target=&quot;_blank&quot;&gt;Bootstrap Tags Input&lt;/a&gt;は、タグ管理のためのjQueryプラグインです。&lt;br /&gt;
これを導入することで、タグの入力を次のように簡易にできるようにします。&lt;br /&gt;
tood image 3&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://timschlechter.github.io/bootstrap-tagsinput/examples/&quot;&gt;http://timschlechter.github.io/bootstrap-tagsinput/examples/&lt;/a&gt; の「Download」からソースファイルを取得します。&lt;/p&gt;&lt;p&gt;そして、jsファイルとcssファイルをRailsにコピーします。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;cp ~/Downloads/bootstrap-tagsinput/bootstrap-tagsinput.min.js vendor/assets/javascripts/.
cp ~/Downloads/bootstrap-tagsinput/bootstrap-tagsinput.min.js.map vendor/assets/javascripts/.
cp ~/Downloads/bootstrap-tagsinput/bootstrap-tagsinput.css vendor/assets/stylesheets/.
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;application.js&lt;/code&gt;と&lt;code&gt;application.css&lt;/code&gt;に追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;// application.js
//= require bootstrap-tagsinput.min


// application.css
 *= require bootstrap-tagsinput&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;Tags Input&lt;/code&gt;を使うのは簡単で、input要素に&lt;code&gt;data-role=&quot;tagsinput&quot;&lt;/code&gt;を追加するだけです。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/users/_form.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(@user)&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; do |f| %&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :skill_list, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;スキル・特技&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; text_field_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;user[skill_list]&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, @user.skill_list.join(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;), &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;data-role&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &amp;quot;tagsinput&amp;quot; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :interest_list, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;興味・関心&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; text_field_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;user[interest_list]&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, @user.interest_list.join(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;), &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;data-role&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &amp;quot;tagsinput&amp;quot; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、入力を確認してみます。タグの入力しやすくなり、同じタグは入力できなくなっています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224140554.jpg&quot; alt=&quot;f:id:nipe880324:20150224140554j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224140554j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;カンマ区切りの文字列でサーバーに送られるので、問題なく登録ができます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224140605.jpg&quot; alt=&quot;f:id:nipe880324:20150224140605j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224140605j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;acts-as-taggable-on-related_users&quot;&gt;5. 同じタグを保持しているユーザーを表示する&lt;/h3&gt;次のように同じ「スキル・特技(skills_list)」や「興味・関心(interests_list)」を保持しているユーザーを表示できるようにしてみます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224140517.jpg&quot; alt=&quot;f:id:nipe880324:20150224140517j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224140517j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;まず、ユーザ詳細画面を修正します。&lt;code&gt;find_related_xxxx&lt;/code&gt;メソッドで関連しているユーザーを取得できます。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/users/show.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; notice&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @user.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;スキル・特技:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;users/tag_list&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, tag_list: @user.skill_list %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;users/related_users&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, users: @user.find_related_skills %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;興味・関心:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;users/tag_list&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, tag_list: @user.interest_list %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;users/related_users&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, users: @user.find_related_interests %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_user_path(@user) %&amp;gt;&lt;/span&gt; |
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, users_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
部分テンプレートを読んでいるので、作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/users/_related_users.html.erb --&amp;gt;&lt;/span&gt;
関連しているユーザー:
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; users.map&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; { |user| user.&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; }.join(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
画面を確認すると次のように表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150224/20150224140517.jpg&quot; alt=&quot;f:id:nipe880324:20150224140517j:plain:w480&quot; title=&quot;f:id:nipe880324:20150224140517j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;&lt;p&gt;他にもタグクラウドやタグでの検索などのトピックもあるので、詳細は&lt;a href=&quot;https://github.com/mbleigh/acts-as-taggable-on&quot;&gt;Acts As Taggable On - GitHub公式&lt;/a&gt;を参照してください。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mbleigh/acts-as-taggable-on&quot;&gt;mbleigh/acts-as-taggable-on &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://timschlechter.github.io/bootstrap-tagsinput/examples/&quot;&gt;Bootstrap Tags Input&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Wed, 25 Feb 2015 19:00:14 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450085036830</guid>
          
            <category>Rails中級</category>
          
            <category>Rails Model</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでCron設定をソース管理する!?wheneverを使ってCronを設定する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150224/1424776132</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150222/20150222115950.jpg&quot; alt=&quot;f:id:nipe880324:20150222115950j:plain&quot; title=&quot;f:id:nipe880324:20150222115950j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;i&gt;Photo by &lt;a href=&quot;https://www.flickr.com/photos/whoshotya/&quot;&gt;Flickr: nicadlr&amp;#39;s Photostream&lt;/a&gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Cron設定を行えるgemの&lt;a href=&quot;https://github.com/javan/whenever&quot; target=&quot;_blank&quot;&gt;whenever&lt;/a&gt;をRailsに導入する方法を説明します。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/javan/whenever&quot; target=&quot;_blank&quot;&gt;whenever&lt;/a&gt;はRubyコードでCronの設定を行えるgemです。&lt;br /&gt;
これを使うことで、アプリケーションコードとCron設定を一緒にでき、ソース管理ができるのでCron設定の管理が楽になります。&lt;br /&gt;
他には、Chefなどのプロビジョニングツールを使いcrontabを設定する方法もあります。&lt;/p&gt;&lt;p&gt;使い分けとしては、Railsアプリケーションに依存するCron設定は「&lt;a href=&quot;https://github.com/javan/whenever&quot; target=&quot;_blank&quot;&gt;whenever&lt;/a&gt;」、アプリケーションに依存しないCron設定（例：ログローテート）は「プロビジョニングツール」に分けて記載するのがいいと思います。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.2.0&lt;/li&gt;
&lt;li&gt;Ruby  2.2.0&lt;/li&gt;
&lt;li&gt;whenever 0.9.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#whenever-install&quot;&gt;wheneverのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#whenever-basic_usage&quot;&gt;wheneverの基本的な使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#whenever-schedule_rb_sample&quot;&gt;schedule.rbのサンプル&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;whenever-install&quot;&gt;wheneverのインストール&lt;/h3&gt;Gemfileに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;whenever&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:require&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
バンドルを実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bundle &lt;span class=&quot;synStatement&quot;&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;whenever&lt;/code&gt;でCronの設定を記載するファイル(&lt;code&gt;/config/schedule.rb&lt;/code&gt;)を作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bundle &lt;span class=&quot;synStatement&quot;&gt;exec&lt;/span&gt; wheneverize
  &lt;span class=&quot;synStatement&quot;&gt;[&lt;/span&gt;add&lt;span class=&quot;synStatement&quot;&gt;]&lt;/span&gt; writing &lt;span class=&quot;synSpecial&quot;&gt;`./config/schedule.rb&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  [done] wheneverized!&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;whenever-basic_usage&quot;&gt;wheneverの基本的な使い方&lt;/h3&gt;作成した&lt;code&gt;schedule.rb&lt;/code&gt;にCronの設定を記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/schedule.rb&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# コマンドの出力先を設定（デフォルトはなし）&lt;/span&gt;
set &lt;span class=&quot;synConstant&quot;&gt;:output&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;path&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/log/cron.log&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# コマンドを実行するシェルを設定する（デフォルトはbash -l -c &#39;:job&#39;）&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# set :job_template, &amp;quot;zsh &#39;:job&#39;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# RAILS_ENVを設定する（デフォルトはproduction）&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# set :environment, &amp;quot;development&amp;quot;&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# 毎日の午前1時30分に実行する&lt;/span&gt;
every &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;.day, &lt;span class=&quot;synConstant&quot;&gt;at&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;1:30 am&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  command &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/bin/some_great_command&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  runner &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;MyModel.some_method&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  rake &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;some:great:rake:task&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# 毎日曜日の昼の12時に実行する&lt;/span&gt;
every &lt;span class=&quot;synConstant&quot;&gt;:sunday&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;at&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;12pm&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  runner &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;AnotherModel.prune_old_records&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;記載は難しくなく、&lt;code&gt;every&lt;/code&gt;メソッドで時間を指定し、ブロック内で実行するコマンドを記載します。&lt;br /&gt;
実行するコマンドは、「コマンドを実行する&lt;code&gt;command&lt;/code&gt;」、「rails runnderを実行する&lt;code&gt;runnder&lt;/code&gt;」、「Rakeタスクを実行する&lt;code&gt;rake&lt;/code&gt;」があります。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、&lt;code&gt;whenever&lt;/code&gt;コマンドを実行して、&lt;code&gt;crontab&lt;/code&gt;の設定をします。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;// schedule.rb をcrontabの文法に変換する（crontabへの書き込みは行わない）
$ bundle &lt;span class=&quot;synStatement&quot;&gt;exec&lt;/span&gt; whenever
&lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; * * * /bin/bash &lt;span class=&quot;synSpecial&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/bin/some_great_command &amp;gt;&amp;gt; /Users/nipe/GoogleDrive/rails/rails_samples/cron_test/log/cron.log 2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; * * * /bin/bash &lt;span class=&quot;synSpecial&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;cd /Users/nipe/GoogleDrive/rails/rails_samples/cron_test &amp;amp;&amp;amp; bin/rails runner -e production &lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\&#39;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;MyModel.some_method&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\&#39;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; &amp;gt;&amp;gt; /Users/nipe/GoogleDrive/rails/rails_samples/cron_test/log/cron.log 2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; * * * /bin/bash &lt;span class=&quot;synSpecial&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;cd /Users/nipe/GoogleDrive/rails/rails_samples/cron_test &amp;amp;&amp;amp; RAILS_ENV=production bundle exec rake some:great:rake:task --silent &amp;gt;&amp;gt; /Users/nipe/GoogleDrive/rails/rails_samples/cron_test/log/cron.log 2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;12&lt;/span&gt; * * &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; /bin/bash &lt;span class=&quot;synSpecial&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;cd /Users/nipe/GoogleDrive/rails/rails_samples/cron_test &amp;amp;&amp;amp; bin/rails runner -e production &lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\&#39;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;AnotherModel.prune_old_records&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\&#39;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; &amp;gt;&amp;gt; /Users/nipe/GoogleDrive/rails/rails_samples/cron_test/log/cron.log 2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;## [message] Above is your schedule file converted to cron syntax; your crontab file was not updated.&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;## [message] Run `whenever --help&#39; for more options.&lt;/span&gt;


// crontabを更新する（既に書かれているcron設定は消えない）
$ bundle &lt;span class=&quot;synStatement&quot;&gt;exec&lt;/span&gt; whenever &lt;span class=&quot;synSpecial&quot;&gt;-i&lt;/span&gt;


// crontabを上書きする（既に書かれているcron設定は消える）
$ bundle &lt;span class=&quot;synStatement&quot;&gt;exec&lt;/span&gt; whenever &lt;span class=&quot;synSpecial&quot;&gt;-w&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;whenever-schedule_rb_sample&quot;&gt;schedule.rbのサンプル&lt;/h3&gt;&lt;code&gt;schedule.rb&lt;/code&gt;のcron設定の記載方法のサンプルです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;every &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;.hours &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  runner &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;MyModel.some_process&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  rake &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;my:rake:task&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  command &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/bin/my_great_command&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

every &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;.day, &lt;span class=&quot;synConstant&quot;&gt;:at&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;4:30 am&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  runner &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;MyModel.task_to_run_at_four_thirty_in_the_morning&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

every &lt;span class=&quot;synConstant&quot;&gt;:hour&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# 他にも :hour, :day, :month, :year, :rebootが使えます&lt;/span&gt;
  runner &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;SomeModel.ladeeda&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

every &lt;span class=&quot;synConstant&quot;&gt;:sunday&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:at&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;12pm&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# 他の曜日(:mondayなど）、:weekend、:weekdayが使えます&lt;/span&gt;
  runner &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Task.do_something_great&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

every &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;0 0 27-31 * *&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# 通常のcronの文法も使えます&lt;/span&gt;
  command &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;echo &#39;you can use raw cron syntax too&#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# Capistranoの:appロールのみで実行されます&lt;/span&gt;
every &lt;span class=&quot;synConstant&quot;&gt;:day&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:at&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;12:20am&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:roles&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;synConstant&quot;&gt;:app&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  rake &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app_server:task&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;他には、&lt;a href=&quot;https://github.com/javan/whenever#capistrano-v3-integration&quot;&gt;capistrano3と連携してcronの設定を行う&lt;/a&gt;方法などもあります。&lt;/p&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/javan/whenever&quot;&gt;javan/whenever &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Tue, 24 Feb 2015 20:08:52 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450084710387</guid>
          
            <category>Rails初級</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでInfinite Scrollとkaminariを使いスクロールによる動的にページロード機能を実装する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141115/1416021886</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;infinite scrollとは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/paulirish/infinite-scroll&quot; target=&quot;_blank&quot;&gt;infinite scroll&lt;/a&gt;とは、TwitterやFacebookのようにページの下までスクロールしたら、動的により下のコンテンツが表示されるようにするjQueryプラグインです。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108221903.png&quot; alt=&quot;f:id:nipe880324:20141108221903p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108221903p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認環境&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby 2.1.0&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;kaminari 0.16.1&lt;/li&gt;
&lt;li&gt;infinite scroll 2.0.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#infinite-scroll-create&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#infinite-scroll-install&quot;&gt;スクロールによる動的ページロードの実装&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;infinite-scroll-create&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new infinite_scrolling_kaminari_test
cd infinite_scrolling_kaminari_test&lt;/pre&gt;&lt;p&gt;次にInfinite Scrollの挙動を確認するために、ShopをScaffoldで作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold Shop name zipcode address tel&lt;/pre&gt;&lt;p&gt;データをseeds.rbに記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/seeds.rb&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;1000&lt;/span&gt;.times &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;i&lt;/span&gt;|
  &lt;span class=&quot;synType&quot;&gt;Shop&lt;/span&gt;.create!(
    &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;店名&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;i&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;zipcode&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;111-&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;sprintf(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;%04d&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, i)&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;address&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;住所&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;i&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;tel&lt;/span&gt;:     &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;00-1234-&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;sprintf(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;%04d&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, i)&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;
  )
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;マイグレーションを実行し、データを投入します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate
rake db:seed&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動してみましょう。&lt;br /&gt;
縦になが〜くデータが1000件表示されていると思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108210935.png&quot; alt=&quot;f:id:nipe880324:20141108210935p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108210935p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;infinite-scroll-install&quot;&gt;2. スクロールによる動的ページロードの実装&lt;/h3&gt;Gemfileに&lt;code&gt;kaminari&lt;/code&gt;を追加します&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;jquery-turbolinks&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# Turbolinksで遷移したときもjQuery.ready()を呼び出してくれる&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;kaminari&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;infinitescroll.jsをGitHubのmasterから取得します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;curl -k -o vendor/assets/javascripts/jquery.infinitescroll.js https://raw.githubusercontent.com/paulirish/infinite-scroll/master/jquery.infinitescroll.js&lt;/pre&gt;&lt;p&gt;application.jsに&lt;code&gt;jquery.infinitescroll&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# app/assets/javascripts/application.js

...
//= require jquery
//= require jquery.turbolinks
//= require jquery_ujs
//= require jquery.infinitescroll
//= require turbolinks
//= require_tree .&lt;/pre&gt;&lt;p&gt;コントローラーのindexアクションを次のように変え、ページ単位で取得するようにします。&lt;br /&gt;
params[:page]にはページ番号が入っているので、kaminariは自動的にオフセットを計算して値を取得してくれます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/shops_controller.rb&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@shops&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Shop&lt;/span&gt;.page(params[&lt;span class=&quot;synConstant&quot;&gt;:page&lt;/span&gt;])
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;ページネーションを一覧画面の一番下に追加します。&lt;br /&gt;
また、データを表示している箇所を部分テンプレートにするため、&lt;code&gt;render&lt;/code&gt;に書き換えます。&lt;br /&gt;
また、&lt;code&gt;id=&quot;shops&quot;&lt;/code&gt;と&lt;code&gt;class=&quot;page&quot;&lt;/code&gt;をjsで使うので忘れないでください。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/shops/index.html.erb

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Listing shops&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;shops&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 終了 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Zipcode&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Address&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Tel&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 開始 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @shops %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 終了 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;New Shop&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_shop_path %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!--一番下に追加 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; paginate&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @shops %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;部分テンプレートを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/shops/_shop.html.erb

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- class=&amp;quot;shop&amp;quot; は重要なので忘れないように --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;shop&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.zipcode&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.address&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.tel&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, shop %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_shop_path(shop) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, shop, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Are you sure?&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、JavaScriptリクエストのために、部分テンプレートをappendするビューを記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/shops/index.js.erb&lt;/span&gt;

&lt;span class=&quot;synError&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;#shops&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;).append(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;lt;tbody class=&#39;page&#39;&amp;gt;&amp;lt;%= escape_javascript(render(@posts)) %&amp;gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;);
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、最後にinitial scrollで動的にページをロードするJavaScriptを記載します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ -&amp;gt;
  $(&amp;#34;#shops .page&amp;#34;).infinitescroll
    loading: {
      img:     &amp;#34;http://www.mytreedb.com/uploads/mytreedb/loader/ajax_loader_blue_48.gif&amp;#34;
      msgText: &amp;#34;ロード中...&amp;#34;
    }
    navSelector: &amp;#34;nav.pagination&amp;#34; # selector for the paged navigation (it will be hidden)
    nextSelector: &amp;#34;nav.pagination a[rel=next]&amp;#34; # selector for the NEXT link (to page 2)
    itemSelector: &amp;#34;#shops tr.shop&amp;#34; # selector for all items you&amp;#39;ll retrieve&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
ではサーバーを起動して、一覧画面を下にスクロールしましょう。&lt;br /&gt;
すると、動的に画面が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108221903.png&quot; alt=&quot;f:id:nipe880324:20141108221903p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108221903p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mislav/will_paginate/wiki&quot;&gt;Home &amp;middot; mislav/will_paginate Wiki &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infinite-scroll.com/&quot;&gt;Infinite Scroll | jQuery plugin, Wordpress plugin, interaction design pattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Sat, 15 Nov 2014 12:24:46 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450072954966</guid>
          
            <category>Rails gem</category>
          
            <category>UI/UX</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsでwill_paginateを使ってページネーションを実現する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141114/1415967206</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;will_paginateとは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/mislav/will_paginate&quot; target=&quot;_blank&quot;&gt;will_pagenate&lt;/a&gt;とは、ページネーションを作成するGemです。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108212535.png&quot; alt=&quot;f:id:nipe880324:20141108212535p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108212535p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認環境&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby 2.1.0&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;will_paginate 3.0.7&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#will_paginate-create&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#will_paginate-install&quot;&gt;will_paginateのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#will_paginate-setting&quot;&gt;will_paginateの設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#will_paginate-i18n&quot;&gt;will_paginateのi18n&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;will_paginate-create&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new will_paginate_test
cd will_paginate_test&lt;/pre&gt;&lt;p&gt;次にwill_paginateによるページネーションの挙動を確認するために、ShopをScaffoldで作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold Shop name zipcode address tel&lt;/pre&gt;&lt;p&gt;データをseeds.rbに記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/seeds.rb&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;1000&lt;/span&gt;.times &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;i&lt;/span&gt;|
  &lt;span class=&quot;synType&quot;&gt;Shop&lt;/span&gt;.create!(
    &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;店名&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;i&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;zipcode&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;111-&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;sprintf(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;%04d&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, i)&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;address&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;住所&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;i&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;tel&lt;/span&gt;:     &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;00-1234-&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;sprintf(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;%04d&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, i)&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;
  )
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;マイグレーションを実行し、データを投入します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate
rake db:seed&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動してみましょう。&lt;br /&gt;
縦になが〜くデータが1000件表示されていると思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108210935.png&quot; alt=&quot;f:id:nipe880324:20141108210935p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108210935p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;will_paginate-install&quot;&gt;2. will_paginateのインストール&lt;/h3&gt;まずは、Gemfileに&lt;code&gt;kaminari&lt;/code&gt;を追加します&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;will_paginate&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;~&amp;gt; 3.0&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そしてBundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、一覧画面のテーブルの上側に現在いくつ表示しているかを表示します。&lt;br /&gt;
また、テーブルの一番下にページネーションのリンクを追加します。&lt;br /&gt;
will_paginateではヘルパーが用意されているので、それぞれ1行ずつ追加するだけなので簡単です。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/shops/index.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Listing shops&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; page_entries_info&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @shops %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Zipcode&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Address&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Tel&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @shops.each do |shop| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.zipcode&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.address&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; shop.tel&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, shop %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_shop_path(shop) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, shop, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Are you sure?&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;New Shop&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_shop_path %&amp;gt;&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; will_paginate&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @shops %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所終了 --&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、コントローラーのindexアクションを次のように変えます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/shops_controller.rb&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@shops&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Shop&lt;/span&gt;.page(params[&lt;span class=&quot;synConstant&quot;&gt;:page&lt;/span&gt;])
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、サーバーを再起動して一覧画面を確認してみましょう。&lt;br /&gt;
画面下部にページのリンクが追加され、１ページあたり30件表示されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108212553.png&quot; alt=&quot;f:id:nipe880324:20141108212553p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108212553p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;will_paginate-setting&quot;&gt;3. will_paginateの設定&lt;/h3&gt;次のようにモデル単位とアプリケーション単位での１ページあたりの項目表示数を設定できます。&lt;/p&gt;&lt;p&gt;モデル単位で設定&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Shop&lt;/span&gt;
  &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.per_page = &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;アプリケーション単位で設定&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;WillPaginate&lt;/span&gt;.per_page = &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;will_paginate-i18n&quot;&gt;will_paginateのi18n&lt;/h3&gt;i18nでは、次の項目が設定可能です。&lt;/p&gt;
&lt;pre class=&quot;code lang-yaml&quot; data-lang=&quot;yaml&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;will_paginate&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;previous_label&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;amp;#8592; Previous&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;next_label&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Next &amp;amp;#8594;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;page_gap&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;amp;hellip;&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;page_entries_info&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;single_page&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;No %{model} found&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Displaying 1 %{model}&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Displaying all %{count} %{model}&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;single_page_html&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;No %{model} found&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Displaying &amp;lt;b&amp;gt;1&amp;lt;/b&amp;gt; %{model}&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Displaying &amp;lt;b&amp;gt;all&amp;amp;nbsp;%{count}&amp;lt;/b&amp;gt; %{model}&amp;quot;&lt;/span&gt;

      &lt;span class=&quot;synIdentifier&quot;&gt;multi_page&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Displaying %{model} %{from} - %{to} of %{count} in total&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;multi_page_html&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Displaying %{model} &amp;lt;b&amp;gt;%{from}&amp;amp;nbsp;-&amp;amp;nbsp;%{to}&amp;lt;/b&amp;gt; of &amp;lt;b&amp;gt;%{count}&amp;lt;/b&amp;gt; in total&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
以上です。&lt;br /&gt;
もし、何か詰まったら、参考文献のページを確認してみてください。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mislav/will_paginate/wiki&quot;&gt;Home &amp;middot; mislav/will_paginate Wiki &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Fri, 14 Nov 2014 21:13:26 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450072950891</guid>
          
            <category>Rails gem</category>
          
            <category>UI/UX</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsで検索可能なセレクトボックスのselect2を使う方法</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141112/1415804076</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;select2とは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;http://ivaynberg.github.io/select2/#top&quot; target=&quot;_blank&quot;&gt;select2&lt;/a&gt;とは、セレクトボックスを検索可能なセレクトボックスにしてくれるjQueryプラグインです。&lt;br /&gt;
セレクトボックスの項目が多い場合、検索できないと選択が大変なのでとても便利です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108173340.png&quot; alt=&quot;f:id:nipe880324:20141108173340p:plain:w260&quot; title=&quot;f:id:nipe880324:20141108173340p:plain:w260&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:260px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;i&gt;※ Chosen という同じようなjQueryプラグインもあるのですが、Enterキーの処理がうまく動かなく日本語で検索しづらいのでこちらの方がオススメです。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認環境&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;select2-rails 3.5.9.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#select2-create&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#select2-install&quot;&gt;select2-railsのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#select2-install-with-bootstrap&quot;&gt;select2にtwitter-bootstrapをインストール&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;select2-create&quot;&gt;Railsプロジェクトの作成&lt;/h3&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new select2_test
cd select2_test&lt;/pre&gt;&lt;p&gt;次にselect2の挙動を確認するために、PersonをScaffoldで作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold Person name:string&lt;/pre&gt;&lt;p&gt;セレクトボックスで表示するためのデータをseeds.rbに記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/seeds.rb&lt;/span&gt;

&lt;span class=&quot;synType&quot;&gt;Person&lt;/span&gt;.create &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;鈴木太郎&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Person&lt;/span&gt;.create &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;鈴木一郎&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Person&lt;/span&gt;.create &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;田中太郎&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Person&lt;/span&gt;.create &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;田中一郎&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;マイグレーションを実行し、データを投入します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate
rake db:seed&lt;/pre&gt;&lt;p&gt;そして、ここでは便宜上、一覧画面にセレクトボックスを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/people/index.html.erb

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 一番下の行に追加 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; select_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :person, options_from_collection_for_select(@people, :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;), include_blank: true %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動し、セレクトボックスを確認してみます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108173202.png&quot; alt=&quot;f:id:nipe880324:20141108173202p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108173202p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;select2-install&quot;&gt;select2-railsのインストール&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;Gemfileに&lt;code&gt;select2-rails&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;jquery-turbolinks&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# Turbolinksで遷移したときもjQuery.ready()を呼び出してくれる&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;select2-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、assetsのapplication.jsにjQuery-turbolinksとselect2を追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# app/assets/javascripts/application.js

...
//
//= require jquery
//= require jquery.turbolinks
//= require jquery_ujs
//= require select2
//= require turbolinks
//= require_tree .&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
assetsのapplication.cssにもselect2を追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# app/assets/stylesheets/application.css

 ...
 *= require select2
 *= require_tree .
 *= require_self
 */&lt;/pre&gt;&lt;p&gt;そして、CofffeeScriptを追記します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# app/assets/javascripts/people.js.coffee

$ -&amp;gt;
  $(&amp;#34;.searchable&amp;#34;).select2({
      width:      200,  # 横幅
      allowClear: true  # x で選択したものを削除できる
      # 詳細は http://ivaynberg.github.io/select2/#documentation
    })
&lt;/pre&gt;&lt;p&gt;これで、select2を使いたいセレクトボックスのclass属性に&lt;code&gt;searchable&lt;/code&gt;を追加するだけでselect2が使えるようになります。&lt;br /&gt;
では、&lt;code&gt;searchable&lt;/code&gt;を追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/people/index.html.erb

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; select_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :person, options_from_collection_for_select(@people, :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;), include_blank: true, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;searchable&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
再度&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動し、セレクトボックスを確認してみます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108173220.png&quot; alt=&quot;f:id:nipe880324:20141108173220p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108173220p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;ちなみに、次のように&lt;code&gt;multiple: true&lt;/code&gt;を追加することで、複数選択にも対応しています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/people/index.html.erb

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; select_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :person, options_from_collection_for_select(@people, :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;), include_blank: true, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;multiple&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: true, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;searchable&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108173232.png&quot; alt=&quot;f:id:nipe880324:20141108173232p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108173232p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;もし、Twitter Bootstrapを使っている場合は、次の１行をapplication.cssに追加してください。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# app/assets/stylesheets/application.css

 ...
 *= require select2
 *= require select2-bootstrap
 *= require_tree .
 *= require_self
 */&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
以上です。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ivaynberg.github.io/select2/#top&quot;&gt;Select2 has moved!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/argerim/select2-rails&quot;&gt;argerim/select2-rails &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/saboyutaka/items/bcc0966313c6f7399a6e&quot;&gt;Rails - Turbolinks&amp;#x3092;&amp;#x30AA;&amp;#x30D5;&amp;#x3057;&amp;#x306A;&amp;#x3044;&amp;#x305F;&amp;#x3081;&amp;#x306B;&amp;#x3084;&amp;#x3063;&amp;#x305F;&amp;#x4E8B; - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Wed, 12 Nov 2014 23:54:36 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450072935634</guid>
          
            <category>Rails gem</category>
          
            <category>UI/UX</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsでbulletを使ってN+1問題を発見しDBアクセスのパフォーマンスを向上させる</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141109/1415522242</link>
          <description>&lt;p&gt;&lt;a href=&quot;https://github.com/flyerhzm/bullet&quot; target=&quot;_blnak&quot;&gt;bullet&lt;/a&gt;とは、N+1問題や使われていないEager Loadingを発見するためのツールです。&lt;br /&gt;
これらの問題があると無駄なSQLクエリが実行されるので、パフォーマンスを落としてしまいます。&lt;br /&gt;
気をつけていてもN+1問題は発生してしまう可能性があるので、bulletを導入して自動で発見できるようにしてみます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※ N+1問題やEager Loadingについてよくわからない方は、&lt;a href=&quot;/entry/20141108/1415418367&quot; target=&quot;_blank&quot;&gt;N+1問題 / Eager Loading とは&lt;/a&gt;を参照ください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;確認環境&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby   2.1.2&lt;/li&gt;
&lt;li&gt;Rails  4.1&lt;/li&gt;
&lt;li&gt;bullet 4.14.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-bullet-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-bullet-getting-started&quot;&gt;Bulletのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-bullet-whitelist&quot;&gt;Bulletのホワイトリストの設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-bullet-run-in-tests&quot;&gt;Bulletをテストで実行&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-bullet-create-rails&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new bullet_test
cd bullet_test&lt;/pre&gt;&lt;p&gt;次に&lt;code&gt;bullet&lt;/code&gt;の挙動を確認するために、N+1問題を発生させるために必要なソースを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold Post title:string content:text user_id:integer
rails g model User name:string&lt;/pre&gt;&lt;p&gt;Modelに関連を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:posts&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# app/models/post.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Postの一覧画面でUserモデルも表示するようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/posts/index.html.erb
    ...
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @posts.each do |post| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.content&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所開始 --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.user.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所完了 --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, post %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(post) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, post, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Are you sure?&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
    ...
&lt;/pre&gt;&lt;p&gt;seeds.rbに初期データを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/seeds.rb&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;.times &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;i&lt;/span&gt;|
  user = &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.create &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ユーザー名&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;i&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;
  user.posts.create &lt;span class=&quot;synConstant&quot;&gt;title&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;タイトル&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;i&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;本文&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;i&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;マイグレーションを実行し、データを投入します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate
rake db:seed&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動し、&lt;code&gt;http://localhost:3000/posts&lt;/code&gt;にアクセスしてみてください。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108134446.png&quot; alt=&quot;f:id:nipe880324:20141108134446p:plain:w480&quot; title=&quot;f:id:nipe880324:20141108134446p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;このときの、サーバーのログを確認すると次のようになっていて、Postの表示数（10回)+1回のSQlが実行されているので、&lt;b&gt;N+1問題&lt;/b&gt;が発生しています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Started&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0.1&lt;/span&gt; at &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;11&lt;/span&gt;-08 &lt;span class=&quot;synConstant&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;58&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;51&lt;/span&gt; +0900
&lt;span class=&quot;synType&quot;&gt;Processing&lt;/span&gt; by &lt;span class=&quot;synType&quot;&gt;PostsController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#index as HTML&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.3ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.3ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;6&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;7&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;8&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;9&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.1ms) &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; = ? &lt;span class=&quot;synType&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;]]
  &lt;span class=&quot;synType&quot;&gt;Rendered&lt;/span&gt; posts/index.html.erb within layouts/application (&lt;span class=&quot;synConstant&quot;&gt;56&lt;/span&gt;.1ms)
&lt;span class=&quot;synType&quot;&gt;Completed&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;OK&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; 107ms (&lt;span class=&quot;synConstant&quot;&gt;Views&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;101&lt;/span&gt;.4ms | &lt;span class=&quot;synConstant&quot;&gt;ActiveRecord&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;.2ms)
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-bullet-getting-started&quot;&gt;2. Bulletのインストール方法&lt;/h3&gt;では、N+1問題を自動的に発見するために&lt;code&gt;bullet&lt;/code&gt;をインストールしていきましょう。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にbulletを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;bullet&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;&lt;code&gt;bullet&lt;/code&gt;は明示的に設定を記載しないと何もしないので、設定を記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/environments/development.rb&lt;/span&gt;

&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.application.configure &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  ...

  config.after_initialize &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.enable  = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# bullet を有効にする&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# 以下はN+1問題を発見した時のユーザーへの通知方法&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.alert   = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# ブラウザのJavaScriptアラート&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.bullet_logger = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# Rails.root/log/bullet.log&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.console = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# ブラウザの console.log の出力先&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#Bullet.growl   = true   # Growl&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#Bullet.xmpp = { :account  =&amp;gt; &#39;bullets_account@jabber.org&#39;,&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#                :password =&amp;gt; &#39;bullets_password_for_jabber&#39;,&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#                :receiver =&amp;gt; &#39;your_account@jabber.org&#39;,&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#                :show_online_status =&amp;gt; true }&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.rails_logger = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# Railsのログ&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#Bullet.bugsnag      = true # 総合デバッガツールbugsnag&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#Bullet.airbrake     = true # Airbrake&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#Bullet.raise        = true # Exceptionを発生&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.add_footer   = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# 画面の下部に表示&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# include paths with any of these substrings in the stack trace,&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# even if they are not in your main app&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#Bullet.stacktrace_includes = [ &#39;your_gem&#39;, &#39;your_middleware&#39; ]&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、サーバーを再起動し、一覧画面にアクセスし、BulletがN+1問題を検出していることを確認しましょう。&lt;br /&gt;
まず、&lt;code&gt;Bullet.alert = true&lt;/code&gt;により次のようにJavaScriptのアラートが表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108134453.png&quot; alt=&quot;f:id:nipe880324:20141108134453p:plain:w320&quot; title=&quot;f:id:nipe880324:20141108134453p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;さらに、&lt;code&gt;Bullet.add_footer&lt;/code&gt;により画面左下部にも表示されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108134458.png&quot; alt=&quot;f:id:nipe880324:20141108134458p:plain:w480&quot; title=&quot;f:id:nipe880324:20141108134458p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff2600&quot;&gt;画面に表示する系統の問題点として、JSONなどの非同期処理の場合だとうまく表示されないので、&lt;code&gt;Bullet.raise = true&lt;/code&gt;などにしておくことをお勧めします。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;そして、&lt;code&gt;Bullet.rails_logger = true&lt;/code&gt;で&lt;code&gt;development.log&lt;/code&gt;にも表示されます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# log/development.log

N+1 Query detected
  Post =&amp;gt; [:user]
  Add to your finder: :include =&amp;gt; [:user]
N+1 Query method call stack
  /Users/nipe0324/rails_samples/bullet_test/app/views/posts/index.html.erb:18:in `block in _app_views_posts_index_html_erb__4222087890434289677_70113588353160&amp;#39;
  /Users/nipe0324/rails_samples/bullet_test/app/views/posts/index.html.erb:14:in `_app_views_posts_index_html_erb__4222087890434289677_70113588353160&amp;#39;&lt;/pre&gt;&lt;p&gt;最後に、&lt;code&gt;Bullet.bullet_logger = true&lt;/code&gt;で&lt;code&gt;bullet.log&lt;/code&gt;にも表示されます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# log/bullet.log

2014-11-08 13:20:47[WARN] user: nipe0324
http://localhost:3000/posts
N+1 Query detected
  Post =&amp;gt; [:user]
  Add to your finder: :include =&amp;gt; [:user]
N+1 Query method call stack
  /Users/nipe0324/rails_samples/bullet_test/app/views/posts/index.html.erb:18:in `block in _app_views_posts_index_html_erb__4222087890434289677_70113588353160&amp;#39;
  /Users/nipe0324/rails_samples/bullet_test/app/views/posts/index.html.erb:14:in `_app_views_posts_index_html_erb__4222087890434289677_70113588353160&amp;#39;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、N+1問題を解決しましょう。&lt;br /&gt;
次のように記載されているので、Post取得時に&lt;code&gt;includes(:user)&lt;/code&gt;を追記しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;N&lt;/span&gt;+&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Query&lt;/span&gt; detected
  &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;]
  &lt;span class=&quot;synType&quot;&gt;Add&lt;/span&gt; to your &lt;span class=&quot;synConstant&quot;&gt;finder&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:include&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;]
&lt;/pre&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/posts_controller.rb&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# GET /posts&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /posts.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@posts&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.all.includes(&lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;)
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;画面を再表示させるとJSのアラートも、画面下部にも何も表示さていないと思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141108/20141108134446.png&quot; alt=&quot;f:id:nipe880324:20141108134446p:plain:w480&quot; title=&quot;f:id:nipe880324:20141108134446p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-bullet-whitelist&quot;&gt;3. Bulletのホワイトリストの設定&lt;/h3&gt;次のようにホワイトを記載することで、N+1問題を無視させることも可能です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.add_whitelist &lt;span class=&quot;synConstant&quot;&gt;:type&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;:n_plus_one_query&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:class_name&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:association&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.add_whitelist &lt;span class=&quot;synConstant&quot;&gt;:type&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;:unused_eager_loading&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:class_name&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:association&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.add_whitelist &lt;span class=&quot;synConstant&quot;&gt;:type&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;:counter_cache&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:class_name&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:association&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;:cities&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-bullet-run-in-tests&quot;&gt;4. Bulletをテストで実行&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まず、bulletをtestでも使えるようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;bullet&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rspec-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次に、インストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
テスト環境でもbulletを有効化させます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/environments/test.rb&lt;/span&gt;

&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.application.configure &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  ...

  &lt;span class=&quot;synComment&quot;&gt;# bullet for detecting N+1&lt;/span&gt;
  config.after_initialize &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.enable = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.bullet_logger = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.raise  = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# N+1問題が発見された時にErrorを発生させる&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次に各テストにBulletのAPIを実行させます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# spec/rails_helper.rb&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.enable?
  config.before(&lt;span class=&quot;synConstant&quot;&gt;:each&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.start_request
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

  config.after(&lt;span class=&quot;synConstant&quot;&gt;:each&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.perform_out_of_channel_notifications &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.notification?
    &lt;span class=&quot;synType&quot;&gt;Bullet&lt;/span&gt;.end_request
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
以上です。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/flyerhzm/bullet&quot;&gt;flyerhzm/bullet &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Sun, 09 Nov 2014 17:37:22 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450072917496</guid>
          
            <category>Rails gem</category>
          
            <category>パフォーマンス</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率をあげる - rails-flogを使ってRailsのdevelopmentログのハッシュとSQLを見やすくする</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141031/1414688928</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;rails-flog とは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/pinzolo/rails-flog&quot; target=&quot;_blank&quot;&gt;rails-flog&lt;/a&gt;とは、Railsの開発環境のログ（development.log）のハッシュとSQLのログをとっても見やすくするgemです。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;rails-flog 導入前&lt;/h5&gt;
    &lt;p&gt;Railsのデフォルトでは、HashやSQLは次のように表示されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# 一覧の取得&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.2ms)  &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

...

&lt;span class=&quot;synComment&quot;&gt;# User作成時のParameters&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Processing&lt;/span&gt; by &lt;span class=&quot;synType&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#create as HTML&lt;/span&gt;
  &lt;span class=&quot;synConstant&quot;&gt;Parameters&lt;/span&gt;: {&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;✓&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;authenticity_token&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lVCNWWTI6D9tLoegdoodgJyv1brvoC2sS7WuQyFkT3w=&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;{&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test@test.com&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;}, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Create User&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;rails-flog 導入後&lt;/h5&gt;
    &lt;p&gt;rails-flogを使うとインデントがつけられ、階層構造がわかりやすく表示されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# 一覧の取得&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.2ms)
&lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;
  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; . *
&lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt;
  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

...
&lt;span class=&quot;synComment&quot;&gt;# User作成時のParameters&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Processing&lt;/span&gt; by &lt;span class=&quot;synType&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#create as HTML&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;Parameters&lt;/span&gt;:
{
                  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;✓&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;authenticity_token&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lVCNWWTI6D9tLoegdfafdasS7Wuefjlajdfa&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
                  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; {
        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
         &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
            &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test@test.com&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    },
                &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Create User&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;rails-flog 1.3.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;rails-flogのサポート環境&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby  1.9.3, 2.0.0, 2.1.0&lt;/li&gt;
&lt;li&gt;Rails 3.2.x, 4.0.x, 4.1.x&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#rails-flog-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-flog-getting-started&quot;&gt;rails-flogのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-flog-disable-templorary&quot;&gt;rails-flogの一時的な無効化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-flog-create-rails&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new rails-flog_test
cd rails-flog_test&lt;/pre&gt;&lt;p&gt;次にrails-flogの挙動を確認するために、UserをScaffoleで作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-flog-getting-started&quot;&gt;2. rails-flogのインストール方法&lt;/h3&gt;では、rails-flogをインストールします。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にGemを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rails-flog&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synPreProc&quot;&gt;require&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;flog&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;これで完了です。&lt;/p&gt;&lt;p&gt;では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動してログを見てみましょう。&lt;br /&gt;
SQLがインデントされて分かりやすく表示されています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# 一覧の取得&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.2ms)
&lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt;
  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; . *
&lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt;
  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

...
&lt;span class=&quot;synComment&quot;&gt;# User作成時のParameters&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Processing&lt;/span&gt; by &lt;span class=&quot;synType&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#create as HTML&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;Parameters&lt;/span&gt;:
{
                  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;✓&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;authenticity_token&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lVCNWWTI6D9tLoegdfafdasS7Wuefjlajdfa&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
                  &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; {
        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
         &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
            &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;test@test.com&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    },
                &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Create User&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
}
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-flog-disable-templorary&quot;&gt;3. rails-flogの一時的な無効化&lt;/h3&gt;Railsプロジェクトのルートの&lt;code&gt;tmp/&lt;/code&gt;配下にファイルを配置するとrails-flogのフォーマットを無効化できます。&lt;/p&gt;&lt;p&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;ファイル名&lt;/th&gt;
    &lt;th&gt;無効化する機能&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;no-flog-sql.txt&lt;/td&gt;
    &lt;td&gt;SQL&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;no-flog-params.txt&lt;/td&gt;
    &lt;td&gt;ハッシュ&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;no-flog.txt&lt;/td&gt;
    &lt;td&gt;両方&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pinzolo/rails-flog&quot;&gt;pinzolo/rails-flog &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Fri, 31 Oct 2014 02:08:48 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450070772901</guid>
          
            <category>開発を効率化する</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率を上げる - quiet_assetsを使って開発環境のログ(development.log)のログ内容を見やすくする</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141029/1414584929</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Quiet Assets とは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/evrone/quiet_assets&quot; target=&quot;_blank&quot;&gt;Quiet Assets&lt;/a&gt;とは、Railsの開発環境のログ（ development.log）のアセットパイプラインのログを表示させなくし、ログの内容をすっきり見やすくするためのGemです。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Quiet Assets 導入前&lt;/h5&gt;
    &lt;p&gt;Railsのデフォルトでは、&lt;code&gt;assets/...&lt;/code&gt;というログが出力され確認したいログが見づらいログ出力になっています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141027/20141027215905.png&quot; alt=&quot;f:id:nipe880324:20141027215905p:plain:w480&quot; title=&quot;f:id:nipe880324:20141027215905p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Quiet Assets 導入後&lt;/h5&gt;
    &lt;p&gt;動いているの？と間違えるほどすっきりしたログになります。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141027/20141027215907.png&quot; alt=&quot;f:id:nipe880324:20141027215907p:plain:w480&quot; title=&quot;f:id:nipe880324:20141027215907p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;quiet_assets 1.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Quiet Assetsの動作サポート&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 3.1 以上&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#quiet_assets-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#quiet_assets-getting-started&quot;&gt;Quite Assetsのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#quiet_assets-customize&quot;&gt;Quite Assetsのカスタマイズ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;quiet_assets-create-rails&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new quiet_assets_test
cd quiet_assets_test&lt;/pre&gt;&lt;p&gt;次にQuiet Assetsの挙動を確認するために、UserをScaffoleで作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;quiet_assets-getting-started&quot;&gt;2. Quiet Assetsのインストール方法&lt;/h3&gt;では、Quiet Assetsをインストールします。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にGemを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;quiet_assets&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;これで完了です。&lt;br /&gt;
では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動してログを見てみましょう。&lt;br /&gt;
&lt;code&gt;assets/...&lt;/code&gt;というログがなく、すっきりしたログになりましたね。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141027/20141027215907.png&quot; alt=&quot;f:id:nipe880324:20141027215907p:plain:w480&quot; title=&quot;f:id:nipe880324:20141027215907p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;quiet_assets-customize&quot;&gt;2. Quite Assetsのカスタマイズ&lt;/h3&gt;もし一時的に、&lt;code&gt;assets&lt;/code&gt;のログを出力したい場合は、&lt;code&gt;config/application.rb&lt;/code&gt;に下記を追記します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/application.rb file:&lt;/span&gt;

config.quiet_assets = &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
以上です。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/evrone/quiet_assets&quot;&gt;evrone/quiet_assets &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Wed, 29 Oct 2014 21:15:29 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450070731222</guid>
          
            <category>Rails gem</category>
          
            <category>開発を効率化する</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発を効率化させる - Awesome Printを使ってログ情報をハイライトさせて見やすくする</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141028/1414505988</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Awesome Print とは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/michaeldv/awesome_print&quot; target=&quot;_blank&quot;&gt;Awesome Print&lt;/a&gt;とは、Rubyオブジェクトに色やインデントをつけることにより、ログの情報を見やすくするライブラリです。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Awesome Print導入前&lt;/h5&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141026/20141026123505.png&quot; alt=&quot;f:id:nipe880324:20141026123505p:plain&quot; title=&quot;f:id:nipe880324:20141026123505p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Awesome Print導入後&lt;/h5&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141026/20141026123450.png&quot; alt=&quot;f:id:nipe880324:20141026123450p:plain&quot; title=&quot;f:id:nipe880324:20141026123450p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;awesome_print 1.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#awesome_print-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#awesome_print-getting-started&quot;&gt;Awesome Printのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;awesome_print-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/h3&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new awesome_print_test
cd awesome_print_test&lt;/pre&gt;&lt;p&gt;次にAwesome Printの挙動を確認するために、UserをScaffoleで作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;awesome_print-getting-started&quot;&gt;Awesome Printのインストール方法&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、Awesome Printをインストールします。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にAwesome PrintのGemを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;awesome_print&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;IRBの場合&lt;/h5&gt;
    &lt;p&gt;IRB(デフォルト)の場合は、Railsプロジェクトのルートディレクトリ配下に&lt;code&gt;.irbrc&lt;/code&gt;を作成し、下記を記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# .irbrc&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;awesome_print&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;AwesomePrint&lt;/span&gt;.irb!
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Pryの場合&lt;/h5&gt;
    &lt;p&gt;Pryを入れている場合は、Railsプロジェクトのルートディレクトリ配下に&lt;code&gt;.pryrc&lt;/code&gt;を作成し、下記を記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# .pryrc&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;awesome_print&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;AwesomePrint&lt;/span&gt;.pry!
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;rails c&lt;/code&gt;でconsoleを開いて、結果を確認してみましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141026/20141026123558.png&quot; alt=&quot;f:id:nipe880324:20141026123558p:plain&quot; title=&quot;f:id:nipe880324:20141026123558p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/michaeldv/awesome_print&quot;&gt;https://github.com/michaeldv/awesome_print&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Tue, 28 Oct 2014 23:19:48 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450070286801</guid>
          
            <category>Rails gem</category>
          
            <category>開発を効率化する</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率をあげる - Rails-ERDを使ってRailsでER図を簡単につくる</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141027/1414409495</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Rails-ERDとは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/voormedia/rails-erd&quot; target=&quot;_blank&quot;&gt;Rails-ERD&lt;/a&gt;とは、&lt;br /&gt;
ActiveRecordをもとにRailsプロジェクトのER図を作成してくれるツールです。&lt;br /&gt;
Railsプロジェクト(ActiveRecord)からER図を簡単に作れるので、Excelや他のツールでER図を作って、Railsに反映させていくという2重管理をしなくてよくなり、メンテナンスコストが下がるので開発効率があがると思います。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;Rails-ERDで作成されたER図の例（CMS）です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141025/20141025035233.png&quot; alt=&quot;f:id:nipe880324:20141025035233p:plain:w480&quot; title=&quot;f:id:nipe880324:20141025035233p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Railsの開発効率を上げたい方（特に、ER図をDryに管理したい方）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby  2.0&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;rails-erd 1.1.0&lt;/li&gt;
&lt;li&gt;Graphviz&lt;/li&gt;
&lt;li&gt;Mac OS X 10.10 Yoshimite&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#rails-erd-create-rails&quot;&gt;Railsプロジェクトを作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-erd-install&quot;&gt;Rails-ERDのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-erd-usage&quot;&gt;Rails-ERDの使い方&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-erd-create-rails&quot;&gt;1. Railsプロジェクトを作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new rails-erd_test
cd rails-erd_test&lt;/pre&gt;&lt;p&gt;次にRails-ERDでER図を作成するために、モデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rails g model Post title:string body:text user:references
rails g model Comment body:text user:references
rake db:migrate&lt;/pre&gt;&lt;p&gt;Userモデルに&lt;code&gt;has_many&lt;/code&gt;を追加します。&lt;br /&gt;
ちなみに、PostモデルとCommentモデルには、&lt;code&gt;user:references&lt;/code&gt;を指定したので&lt;code&gt;belongs_to&lt;/code&gt;が追加されています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:posts&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-erd-install&quot;&gt;2. Rails-ERDのインストール&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、さっそくRailsにRails-ERDをインストールしていきましょう。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にRails-ERDを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rails-erd&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# 上記でうまくいかない、かつ、OSX Mavericksを使っている場合はこちらを使ってください&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# gem &#39;rails-erd&#39;, github: &#39;paulwittmann/rails-erd&#39;, branch: &#39;mavericks&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;次に、&lt;a href=&quot;http://www.graphviz.org/&quot; target=&quot;_blank&quot;&gt;Graphviz&lt;/a&gt;というグラフを作成するツールをいれます。&lt;br /&gt;
&lt;a href=&quot;http://www.graphviz.org/Download..php&quot; target=&quot;_blank&quot;&gt;http://www.graphviz.org/Download..php&lt;/a&gt;からOSに応じてダウンロードし、インストールしてください。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-erd-usage&quot;&gt;3. Rails-ERDの使い方&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;rake erd&lt;/code&gt;コマンドでER図が作成されます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake erd
Loading application environment...
Loading code in search of Active Record models...
Generating Entity-Relationship Diagram for 3 models...
Done! Saved diagram to erd.pdf.&lt;/pre&gt;&lt;p&gt;ファイルは、&lt;cdoe&gt;erd.pdf&lt;/cdoe&gt;で作成されましたので、開いてみましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141025/20141025035156.png&quot; alt=&quot;f:id:nipe880324:20141025035156p:plain:w480&quot; title=&quot;f:id:nipe880324:20141025035156p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;次のようにオプションを指定すると、主キー、外部キーの表示、ファイル名、ファイルタイプを変更できます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake erd attributes=foreign_keys,primary_keys,content filename=rails-erd filetype=png&lt;/pre&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141025/20141025035210.png&quot; alt=&quot;f:id:nipe880324:20141025035210p:plain:w480&quot; title=&quot;f:id:nipe880324:20141025035210p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;オプションの詳細は&lt;a href=&quot;http://voormedia.github.io/rails-erd/customise.html&quot; target=&quot;_blank&quot;&gt;http://voormedia.github.io/rails-erd/customise.html&lt;/a&gt;を参照してください。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;br /&gt;
Rails-ERDを使うことで、Railsプロジェクト(ActiveRecord)からER図を簡単に作れるので是非使ってください。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/voormedia/rails-erd&quot;&gt;voormedia/rails-erd &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://voormedia.github.io/rails-erd&quot;&gt;Rails ERD &amp;ndash; Entity-Relationship Diagrams for Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パーフェクトRuby on Rails&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Mon, 27 Oct 2014 20:31:35 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450070177417</guid>
          
            <category>Rails gem</category>
          
            <category>開発を効率化する</category>
          
            <category>DB</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率をあげる - Springを使ってRailsのコンソールコマンドの実行を早くする</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141026/1414289421</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Springとは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/rails/spring&quot; target=&quot;_blank&quot;&gt;Spring&lt;/a&gt;とは、Rails4.1から標準で付属するようになった&lt;b&gt;アプリケーションプリローダー&lt;/b&gt;です。&lt;br /&gt;
Rails内では様々なライブラリのロードなどの前処理が行われるので、コマンドを実行するための待ち時間がかかってしまいます。&lt;br /&gt;
事前にバックグラウンドでライブラリをロードしておくことで、その待ち時間を短くするものが&lt;b&gt;アプリケーションプリローダー&lt;/b&gt;です。&lt;/p&gt;&lt;p&gt;MiniTestやRSpecを&lt;code&gt;rake&lt;/code&gt;コマンドで実行したり、サーバー起動やconsoleを&lt;code&gt;rails&lt;/code&gt;コマンドで実行すると思いますが、動き出すまで数秒かかると思います。&lt;br /&gt;
開発を通すとこういったコマンドは、何十回、何百回も実行することになるので、数秒でも早いにこしたことはありません。&lt;/p&gt;&lt;p&gt;他の有名なアプリケーションプリローダーには、&lt;a href=&quot;https://github.com/sporkrb/spork&quot; target=&quot;_blank&quot;&gt;Spork&lt;/a&gt;や&lt;a href=&quot;https://github.com/burke/zeus&quot; target=&quot;_blank&quot;&gt;Zeus&lt;/a&gt;といったものもあります。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Spring導入前&lt;/h4&gt;
    &lt;p&gt;Springを使わないでテストを実行してみます。&lt;br /&gt;
&lt;b&gt;realが5秒程度かかっています。&lt;/b&gt;&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ &lt;span class=&quot;synStatement&quot;&gt;time&lt;/span&gt; bin/rake &lt;span class=&quot;synStatement&quot;&gt;test&lt;/span&gt;
.......

&lt;span class=&quot;synConstant&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;synConstant&quot;&gt;13&lt;/span&gt; assertions, &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; failures, &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; errors, &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; skips

real  0m5.213s
user  0m0.825s
sys 0m0.379s
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Spring導入後&lt;/h4&gt;
    &lt;p&gt;今度はSpringを使ってテストを実行します。&lt;br /&gt;
&lt;b&gt;realの値が5秒から2秒になっています。&lt;/b&gt;&lt;br /&gt;
まだ、依存するライブラリが少ないですが、プロジェクトが大きくなるにつれてSpringの恩恵は増えてくると思います。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ &lt;span class=&quot;synStatement&quot;&gt;time&lt;/span&gt; bin/rake &lt;span class=&quot;synStatement&quot;&gt;test&lt;/span&gt;
.......

&lt;span class=&quot;synConstant&quot;&gt;7&lt;/span&gt; runs, &lt;span class=&quot;synConstant&quot;&gt;13&lt;/span&gt; assertions, &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; failures, &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; errors, &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; skips

real  0m1.980s
user  0m0.852s
sys 0m0.394s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Railsの開発効率を上げたい方（特に、rake, railsコマンドを良く使う方）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby  2.0&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;Spring 1.1.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Springの動作要件&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby  1.9.3, 2.0, 2.1&lt;/li&gt;
&lt;li&gt;Rails 3.2, 4.0, 4.1 (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Process.fork&lt;/code&gt;を使っているのでWindows, JRuby環境はだめ&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#spring-create-rails&quot;&gt;Railsプロジェクトを作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#spring-install&quot;&gt;Springをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#spring-usage&quot;&gt;Springの使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#spring-additional-commands&quot;&gt;Springのコマンドを追加(RSpec, Cucumperなど)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#spring-removal&quot;&gt;Springの削除&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;better-errors-create-rails&quot;&gt;1. Railsプロジェクトを作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new spring_test
cd spring_test&lt;/pre&gt;&lt;p&gt;次にSpringの挙動を確認するために、UserをScaffoldで作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;spring-install&quot;&gt;2. Springをインストール&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、さっそくRailsにSpringをインストールしていきましょう。&lt;/p&gt;&lt;p&gt;Rails 4.1ではデフォルトで入っているので、&lt;code&gt;Gemfile&lt;/code&gt;に記載されていることを確認します。&lt;br /&gt;
Rails 3.2や4.0の場合や、Springがコメントアウトされている場合は、次のように記載してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,        &lt;span class=&quot;synConstant&quot;&gt;group&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;そして、Railsプロジェクトのルートの&lt;code&gt;bin/spring&lt;/code&gt;という実行ファイルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle exec spring binstub --all&lt;/pre&gt;&lt;p&gt;これにより、&lt;code&gt;bin/rails&lt;/code&gt;や&lt;code&gt;bin/rake&lt;/code&gt;に次のようなコードも追加されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;begin&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;File&lt;/span&gt;.expand_path(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;../spring&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;__FILE__&lt;/span&gt;)
&lt;span class=&quot;synStatement&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;LoadError&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;spring-usage&quot;&gt;3. Springの使い方&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;Springがバックグラウンドで起動しているか確認します。&lt;br /&gt;
&lt;code&gt;Spring is not running.&lt;/code&gt;であることを確認します。止まっていない場合は、&lt;code&gt;bin/spring stop&lt;/code&gt;で停止できます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bin/spring status
Spring is not running.&lt;/pre&gt;&lt;p&gt;では、テストを実行してみましょう。&lt;br /&gt;
rakeやrailsコマンドの最初の実行時にはSpringが起動していないため実行は早くありません。&lt;br /&gt;
&lt;b&gt;realが5秒程度かかっています。&lt;/b&gt;&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ time bin/rake test
Run options: --seed 59255

# Running:

.......

Finished in 0.855353s, 8.1838 runs/s, 15.1984 assertions/s.

7 runs, 13 assertions, 0 failures, 0 errors, 0 skips

real  0m5.213s
user  0m0.825s
sys 0m0.379s&lt;/pre&gt;&lt;p&gt;また&lt;code&gt;bin/spring status&lt;/code&gt;を実行すると、Springが起動しています。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bin/spring status
Spring is running:

41751 spring server | spring_test | started 22 secs ago
41752 spring app    | spring_test | started 22 secs ago | test mode&lt;/pre&gt;&lt;p&gt;では、またテストを実行してみましょう。&lt;br /&gt;
&lt;b&gt;realの値が5秒から2秒になっています。&lt;/b&gt;&lt;br /&gt;
まだ、依存するライブラリが少ないですが、プロジェクトが大きくなるにつれてSpringの恩恵は増えてくると思います。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ time bin/rake test
Run options: --seed 32264

# Running:

.......

Finished in 0.172552s, 40.5675 runs/s, 75.3396 assertions/s.

7 runs, 13 assertions, 0 failures, 0 errors, 0 skips

real  0m1.980s
user  0m0.852s
sys 0m0.394s&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;spring-additional-commands&quot;&gt;4. Springのコマンドを追加(RSpec, Cucumperなど)&lt;/h3&gt;Springに&lt;code&gt;rspec&lt;/code&gt;、&lt;code&gt;cucumber&lt;/code&gt;などコマンドを追加できます。&lt;br /&gt;
方法は同じなので、RSpecコマンドを追加してみましょう。&lt;/p&gt;&lt;p&gt;まず、&lt;code&gt;Gemfile&lt;/code&gt;にGemを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spring-commands-rspec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;group&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、Bundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;Springを停止します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bin/spring stop&lt;/pre&gt;&lt;p&gt;&lt;code&gt;bin/rspec&lt;/code&gt;コマンドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;spring binstub --all
* bin/rake: spring already present
* bin/rspec: generated with spring
* bin/rails: spring already present&lt;/pre&gt;&lt;p&gt;今はRSpecが入っていないので実行できませんが、次のように実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bin/rspec&lt;/pre&gt;&lt;p&gt;他には、以下のようなSpringのGemがあります。&lt;br /&gt;
上記のGemfileの内容を書き換えるとそのコマンドを追加できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;spring-commands-rspec&lt;/li&gt;
&lt;li&gt;spring-commands-cucumber&lt;/li&gt;
&lt;li&gt;spring-commands-spinach&lt;/li&gt;
&lt;li&gt;spring-commands-testunit&lt;/li&gt;
&lt;li&gt;spring-commands-teaspoon&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;spring-removal&quot;&gt;5. Springの削除&lt;/h3&gt;Springをプロジェクトから削除する方法です。&lt;/p&gt;&lt;p&gt;&lt;code&gt;bin/&lt;/code&gt;からSpringの実行ファイルを削除します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bin/spring binstub --remove --all&lt;/pre&gt;&lt;p&gt;次に&lt;code&gt;Gemfile&lt;/code&gt;からSprignを削除します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# 下記2行を削除かコメントアウト&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# gem &#39;spring&#39;,        group: :development&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、Bundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以上です。&lt;br /&gt;
Springを使うことで、コマンド実行の待ち時間が減り開発効率も上がることでしょう。&lt;br /&gt;
そのほかにも、guardというファイルの変更を検知し、自動でRSpecやRuboCopの実行、ブラウザの更新を行ってくれるGemもあります。&lt;br /&gt;
今日ものある場合は下記からインストール方法や使い方がわかります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20141016/1413389293&quot; target=&quot;_blank&quot;&gt;guard-livereload - 自動でブラウザ更新&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20141021/1413819783&quot; target=&quot;_blank&quot;&gt;guard-rspec - 自動でRSpec実行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20141019/1413698128&quot; target=&quot;_blank&quot;&gt;guard-rubocop - 自動でRuboCop実行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/spring&quot;&gt;rails/spring &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パーフェクトRuby on Rails&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Sun, 26 Oct 2014 11:10:21 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450070159912</guid>
          
            <category>開発を効率化する</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率をあげる - Better_Errorsを使ってdevelopment環境のエラー画面をリッチにする</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141025/1414225490</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Better_Errorsとは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/charliesome/better_errors&quot; target=&quot;_blank&quot;&gt;Better_Errors&lt;/a&gt;とは、Railsを始めとするRackアプリのエラー画面をリッチにするGemです。&lt;/p&gt;&lt;p&gt;では、実際にBetter_Errorsの導入前後の画面を見てみましょう。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Better_Errors導入前&lt;/h5&gt;
    &lt;p&gt;よく見慣れたエラーですね。どこの箇所でExceptionが発生したかわかります。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141025/20141025005133.png&quot; alt=&quot;f:id:nipe880324:20141025005133p:plain:w480&quot; title=&quot;f:id:nipe880324:20141025005133p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Better_Errors導入後&lt;/h5&gt;
    &lt;p&gt;左側にスタックトレース、右上にソースコードと対話式console、右下にリクエストパラメーターや変数が表示されており、エラーの原因を理解するの簡単にできます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141025/20141025005146.png&quot; alt=&quot;f:id:nipe880324:20141025005146p:plain:w480&quot; title=&quot;f:id:nipe880324:20141025005146p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Railsの開発効率を上げたい方（特に、開発中にエラー画面がよく表示される方）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;better_errors     2.0.0&lt;/li&gt;
&lt;li&gt;binding_of_caller 0.7.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#better-errors-create-rails&quot;&gt;Railsプロジェクトを作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#better-errors-install&quot;&gt;Better_Errorsをインストール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;better-errors-create-rails&quot;&gt;1. Railsプロジェクトを作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new better_errors_test
cd better_errors_test&lt;/pre&gt;&lt;p&gt;次にBetter Errorsの挙動を確認するために、UserモデルとCommentモデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rails g model Comment body:string user:references
rake db:migrate&lt;/pre&gt;&lt;p&gt;Userモデルにアソシエーションを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;ちなみに、Commentモデルを作成したときに&lt;code&gt;user:references&lt;/code&gt;を追加したので既にアソシエーションがついています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/comment.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Comment&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;better-errors-install&quot;&gt;2. Better_Errorsをインストール&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、さっそくRailsにBetter_Errorsをインストールしていきましょう。&lt;/p&gt;&lt;p&gt;まずは、&lt;code&gt;Gemfile&lt;/code&gt;にBetter_Errorsを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;better_errors&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;     &lt;span class=&quot;synComment&quot;&gt;# 開発中のエラー画面をリッチにする&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;binding_of_caller&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# 開発中のエラー画面にさらに変数の値を表示する&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動し、存在しないUser IDを指定してエラーを発生させましょう。&lt;br /&gt;
&lt;code&gt;http://localhost:3000/users/1000&lt;/code&gt;にアクセスすると、エラーが発生しBetter_Errorsによりリッチなエラー画面が表示されます。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141025/20141025005146.png&quot; alt=&quot;f:id:nipe880324:20141025005146p:plain:w480&quot; title=&quot;f:id:nipe880324:20141025005146p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;左側にスタックトレース、右上にソースコードと対話式console、右下にリクエストパラメーターや変数が表示されています。&lt;br /&gt;
エラー画面としてはとても見やすいですね。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;br /&gt;
Better_Errorsを使うことで、開発中のエラー画面の情報が増えるので、開発効率も上がること間違いないでしょう。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charliesome/better_errors&quot;&gt;charliesome/better_errors &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パーフェクトRuby on Rails&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Sat, 25 Oct 2014 17:24:50 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450070125410</guid>
          
            <category>Rails gem</category>
          
            <category>開発を効率化する</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率をあげる - Hirbを使ってRailsでコンソールのModelの出力結果を表形式で分かりやすく表示する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141024/1414160189</link>
          <description>&lt;p&gt;&lt;code&gt;rails console&lt;/code&gt;でモデルの内容をきれいに表形式で表示できるようにする&lt;code&gt;hirb&lt;/code&gt;というgemのインストール方法を説明します。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Hirb導入前&lt;/h5&gt;
    &lt;p&gt;値が表示されているが、複数表示された時にデータが見づらい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)

irb(main):&lt;span class=&quot;synConstant&quot;&gt;001&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.all
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;.1ms)  &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synComment&quot;&gt;#&amp;lt;ActiveRecord::Relation [#&amp;lt;User id: 1, firstname: &amp;quot;太郎&amp;quot;, lastname: &amp;quot;鈴木&amp;quot;, email: &amp;quot;t.suzuki@test.com&amp;quot;, created_at: &amp;quot;2014-10-23 17:07:14&amp;quot;, updated_at: &amp;quot;2014-10-23 17:07:14&amp;quot;&amp;gt;, #&amp;lt;User id: 2, firstname: &amp;quot;花子&amp;quot;, lastname: &amp;quot;佐藤&amp;quot;, email: &amp;quot;h.satou@test.com&amp;quot;, created_at: &amp;quot;2014-10-23 17:07:57&amp;quot;, updated_at: &amp;quot;2014-10-23 17:07:57&amp;quot;&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Hirb導入後&lt;/h5&gt;
    &lt;p&gt;表形式で結果が表示されるため、各データがとても見やすい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)

irb(main):&lt;span class=&quot;synConstant&quot;&gt;001&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.all
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.4ms)  &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
+----+-----------+----------+-------------------+-------------------------+-------------------------+
| id | firstname | lastname | email             | created_at              | updated_at              |
+----+-----------+----------+-------------------+-------------------------+-------------------------+
| &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  | 太郎      | 鈴木     | t.suzuki&lt;span class=&quot;synIdentifier&quot;&gt;@test&lt;/span&gt;.com  | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;14&lt;/span&gt;    | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;14&lt;/span&gt;  |
| &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;  | 花子      | 佐藤     | h.satou&lt;span class=&quot;synIdentifier&quot;&gt;@test&lt;/span&gt;.com   | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt;    | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt;  |
+----+-----------+----------+-------------------+-------------------------+-------------------------+
&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt; rows &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; set
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Railsの開発効率を上げたい方（特に、consoleでModelの内容をよく確認する方）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;hirb  0.7.2&lt;/li&gt;
&lt;li&gt;hirb-unicode 0.0.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#hirb-create-rails&quot;&gt;Railsプロジェクトを作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hirb-install&quot;&gt;Hirbをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hirb-with-pry&quot;&gt;HirbをPryと一緒に使う&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;hirb-create-rails&quot;&gt;1. Railsプロジェクトを作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new hirb_test
cd hirb_test&lt;/pre&gt;&lt;p&gt;次にHirbの挙動を確認するために、UserモデルとCommentモデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rails g model Comment body:string user:references
rake db:migrate&lt;/pre&gt;&lt;p&gt;Userモデルにアソシエーションを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Commentモデルを作成したときに&lt;code&gt;user:references&lt;/code&gt;を追加したので既にアソシエーションがついています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/comment.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Comment&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Modelのデータを表示する必要があるため、データを2件ほど追加しておきます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails c
Loading development environment (Rails 4.1.5)
irb(main):001:0&amp;gt; User.create(firstname: &amp;#34;太郎&amp;#34;, lastname: &amp;#34;鈴木&amp;#34;, email: &amp;#34;t.suzuki@test.com&amp;#34;)
...
irb(main):002:0&amp;gt; User.create(firstname: &amp;#34;花子&amp;#34;, lastname: &amp;#34;佐藤&amp;#34;, email: &amp;#34;h.satou@test.com&amp;#34;)
...&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;hirb-install&quot;&gt;2. Hirbをインストール&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にHirbを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;hirb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;         &lt;span class=&quot;synComment&quot;&gt;# モデルの出力結果を表形式で表示するGem&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;hirb-unicode&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# 日本語などマルチバイト文字の出力時の出力結果のずれに対応&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;rails c&lt;/code&gt;でconsoleを開いて、Hirbの出力結果を確認しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)
[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] irb(main)&amp;gt;
&lt;/pre&gt;&lt;p&gt;ちなみに、Pryを入れていない場合は、Rubyに標準で付属しているirbが使われます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)
irb(main):&lt;span class=&quot;synConstant&quot;&gt;001&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.all  &lt;span class=&quot;synComment&quot;&gt;# Hirbの有効化前。表示が見にくい。&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;.1ms)  &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synComment&quot;&gt;#&amp;lt;ActiveRecord::Relation [#&amp;lt;User id: 1, firstname: &amp;quot;太郎&amp;quot;, lastname: &amp;quot;鈴木&amp;quot;, email: &amp;quot;t.suzuki@test.com&amp;quot;, created_at: &amp;quot;2014-10-23 17:07:14&amp;quot;, updated_at: &amp;quot;2014-10-23 17:07:14&amp;quot;&amp;gt;, #&amp;lt;User id: 2, firstname: &amp;quot;花子&amp;quot;, lastname: &amp;quot;佐藤&amp;quot;, email: &amp;quot;h.satou@test.com&amp;quot;, created_at: &amp;quot;2014-10-23 17:07:57&amp;quot;, updated_at: &amp;quot;2014-10-23 17:07:57&amp;quot;&amp;gt;]&amp;gt;&lt;/span&gt;

irb(main):&lt;span class=&quot;synConstant&quot;&gt;002&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt; &lt;span class=&quot;synType&quot;&gt;Hirb&lt;/span&gt;.enable  &lt;span class=&quot;synComment&quot;&gt;# Hirbの有効化&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;

irb(main):&lt;span class=&quot;synConstant&quot;&gt;003&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.all   &lt;span class=&quot;synComment&quot;&gt;# Hirbの有効化後。表示が見やすい。&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.4ms)  &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
+----+-----------+----------+-------------------+-------------------------+-------------------------+
| id | firstname | lastname | email             | created_at              | updated_at              |
+----+-----------+----------+-------------------+-------------------------+-------------------------+
| &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  | 太郎      | 鈴木     | t.suzuki&lt;span class=&quot;synIdentifier&quot;&gt;@test&lt;/span&gt;.com | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;14&lt;/span&gt;     | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;14&lt;/span&gt;  |
| &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;  | 花子      | 佐藤     | h.satou&lt;span class=&quot;synIdentifier&quot;&gt;@test&lt;/span&gt;.com  | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt;     | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt;  |
+----+-----------+----------+-------------------+-------------------------+-------------------------+
&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt; rows &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; set
&lt;/pre&gt;&lt;p&gt;このようにHirbを使うことでActiveRecordの出力結果が見やすくなります。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;hirb-with-pry&quot;&gt;3. HirbをPryと一緒に使う&lt;/h3&gt;以前紹介したパワフルなconsoleのPryと一緒にHirbを使うためには設定が必要です。&lt;/p&gt;&lt;p&gt;Pryのインストール方法や使い方に「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20141024/1414081224&quot; target=&quot;_blank&quot;&gt;Pryを使ってconsoleを拡張/デバッグを実施&lt;/a&gt;」を参照して下さい。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にPryを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;hirb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;         &lt;span class=&quot;synComment&quot;&gt;# モデルの出力結果を表形式で表示するGem&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;hirb-unicode&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# 日本語などマルチバイト文字の出力時の出力結果のずれに対応&lt;/span&gt;

  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pry-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# rails console(もしくは、rails c)でirbの代わりにpryを使われる&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pry-doc&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;    &lt;span class=&quot;synComment&quot;&gt;# methodを表示&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pry-byebug&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# デバッグを実施&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;Railsプロジェクトのルートディレクトリ(Gemfileと同じ場所)に&lt;code&gt;.pryrc&lt;/code&gt;を作成し、次の内容を記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# .pryrc&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;begin&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;hirb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;LoadError&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Missing goodies, bummer&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;defined?&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Hirb&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Slightly dirty hack to fully support in-session Hirb.disable/enable toggling&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;Hirb&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;View&lt;/span&gt;.instance_eval &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;enable_output_method&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@output_method&lt;/span&gt; = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@old_print&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Pry&lt;/span&gt;.config.print
      &lt;span class=&quot;synType&quot;&gt;Pry&lt;/span&gt;.config.print = &lt;span class=&quot;synStatement&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |*&lt;span class=&quot;synIdentifier&quot;&gt;args&lt;/span&gt;|
        &lt;span class=&quot;synType&quot;&gt;Hirb&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;View&lt;/span&gt;.view_or_page_output(args[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]) || &lt;span class=&quot;synIdentifier&quot;&gt;@old_print&lt;/span&gt;.call(*args)
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;disable_output_method&lt;/span&gt;
      &lt;span class=&quot;synType&quot;&gt;Pry&lt;/span&gt;.config.print = &lt;span class=&quot;synIdentifier&quot;&gt;@old_print&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@output_method&lt;/span&gt; = &lt;span class=&quot;synConstant&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synType&quot;&gt;Hirb&lt;/span&gt;.enable
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、Pryのconsole時にHirbが有効になっていることを確認しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)
[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(main)&amp;gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.all
  &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; Load (&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;.7ms)  &lt;span class=&quot;synType&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;.* &lt;span class=&quot;synType&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
+----+-----------+----------+-------------------+-------------------------+-------------------------+
| id | firstname | lastname | email             | created_at              | updated_at              |
+----+-----------+----------+-------------------+-------------------------+-------------------------+
| &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;  | 太郎      | 鈴木     | t.suzuki&lt;span class=&quot;synIdentifier&quot;&gt;@test&lt;/span&gt;.com | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;UTC&lt;/span&gt; | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;UTC&lt;/span&gt; |
| &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;  | 花子      | 佐藤     | h.satou&lt;span class=&quot;synIdentifier&quot;&gt;@test&lt;/span&gt;.com  | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;UTC&lt;/span&gt; | &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;UTC&lt;/span&gt; |
+----+-----------+----------+-------------------+-------------------------+-------------------------+
&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt; rows &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; set
[&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;] pry(main)&amp;gt;
&lt;/pre&gt;&lt;p&gt;Hirbのおかげで、PryでもModelの結果が表形式に整形されて表示されるようになりました。&lt;/p&gt;&lt;p&gt;以上です。&lt;br /&gt;
Hirbを使うことで、console上でのModelの結果がとても見やすくなるので、Railsでconsoleをたくさん使う方は是非入れてみることをお勧めします。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cldwalker/hirb&quot;&gt;cldwalker/hirb &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パーフェクトRuby on Rails&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Fri, 24 Oct 2014 23:16:29 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450069964670</guid>
          
            <category>Rails gem</category>
          
            <category>開発を効率化する</category>
          
        </item>
      
        <item>
          <title>Railsの開発効率をあげる - Pryを使ってRailsのコンソールをパワーアップ &amp; デバッグをする</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141024/1414081224</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Pryとは&lt;/h3&gt;
    &lt;p&gt;Rubyには、標準で付属されているirb(Interactive Ruby)というツールがあります。&lt;br /&gt;
consoleで、&lt;code&gt;irb&lt;/code&gt;と入力するとirbが実行されます。&lt;br /&gt;
そこで、対話的にRubyの式を入力・実行することができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ irb
irb(main):&lt;span class=&quot;synConstant&quot;&gt;001&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、Pryはirbの代替となるパワフルな対話ツールです。&lt;br /&gt;
なにがパワフルかというと次のようなことができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ドキュメントが見れる&lt;/li&gt;
&lt;li&gt;シンタックスハイライト&lt;/li&gt;
&lt;li&gt;デバッグができる（&lt;code&gt;binding.pry&lt;/code&gt;をソース二記載するとブレイクポイントになる）&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ pry
[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(main)&amp;gt; ls     &lt;span class=&quot;synComment&quot;&gt;# 現在のスコープの変数とメソッドを表示&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;methods&lt;/span&gt;: inspect  to_s
&lt;span class=&quot;synConstant&quot;&gt;locals&lt;/span&gt;: _  __  _dir_  _ex_  _file_  _in_  _out_  _pry_
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails      4.1&lt;/li&gt;
&lt;li&gt;pry-rails  0.3.2&lt;/li&gt;
&lt;li&gt;pry-doc    0.6.0&lt;/li&gt;
&lt;li&gt;pry-byebug 2.0&lt;/li&gt;
&lt;li&gt;pry-stack_explorer 0.4.9.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#pry-create-rails&quot;&gt;Railsプロジェクトを作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pry-install&quot;&gt;pryをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pry-pry&quot;&gt;pryコマンド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pry-pry-rails&quot;&gt;pry-railsコマンド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pry-pry-byebug&quot;&gt;pry-byebugでデバッグ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pry-pry-stack_explorer&quot;&gt;pry-stack_explorerでより深くデバッグ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;pry-create-rails&quot;&gt;1. Railsプロジェクトを作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まずはRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new pry_test
cd pry_test&lt;/pre&gt;&lt;p&gt;次にPryで捜査を確認するために、UserモデルとCommentモデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold User firstname:string lastname:string email:string
rails g model Comment body:string user:references
rake db:migrate&lt;/pre&gt;&lt;p&gt;Userモデルにアソシエーションを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Commentモデルを作成したときに&lt;code&gt;user:references&lt;/code&gt;を追加したので既にアソシエーションがついています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/comment.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Comment&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;pry-install&quot;&gt;2. pryをインストール&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;にPryを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pry-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# rails console(もしくは、rails c)でirbの代わりにpryを使われる&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pry-doc&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;    &lt;span class=&quot;synComment&quot;&gt;# methodを表示&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pry-byebug&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# デバッグを実施(Ruby 2.0以降で動作する)&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pry-stack_explorer&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# スタックをたどれる&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerでgemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;rails c&lt;/code&gt;でconsoleを開きましょう。&lt;br /&gt;
consoleに&lt;code&gt;pry(main)&lt;/code&gt;と表示されれば、Pryが使われている証拠です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)
[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(main)&amp;gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
ちなみに、Pryを入れていない場合は、Rubyに標準で付属しているirbが使われます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)
irb(main):&lt;span class=&quot;synConstant&quot;&gt;001&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;pry-pry&quot;&gt;3. pryコマンド&lt;/h3&gt;Railsのルートで、&lt;code&gt;rails c&lt;/code&gt;でPryを使うことができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;)
[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(main)&amp;gt; a = &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;
[&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;] pry(main)&amp;gt; watch a  &lt;span class=&quot;synComment&quot;&gt;# watch:変更されたら通知するように設定するコマンド&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Watching&lt;/span&gt; a
&lt;span class=&quot;synConstant&quot;&gt;watch&lt;/span&gt;: a =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;
[&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;] pry(main)&amp;gt; a = &lt;span class=&quot;synConstant&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;watch&lt;/span&gt;: a =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;20&lt;/span&gt;          &lt;span class=&quot;synComment&quot;&gt;# 変更されたので通知される&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Pryでは次のようなコマンドが使えますので、ざっと確認しておいて損はないと思います。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;ヘルプ
  help               コマンドの情報を表示

コンテキスト
  cd                 新しいコンテキスト（オブジェクトかスコープ）に移動
  find-method        現在のclass/module、ネームスペース内のメソッドを探す
  ls                 現在のスコープ内の変数やメソッドのリストを表示
  pry-backtrace      pryセッションのバックトレースを表示
  raise-up           現在のpryインスタンス外でExceptionを発生させる
  reset              Reset the repl to a clean state.
  watch              Expressionの値を確認し、変わったときにNotificationを表示する
  whereami           現在のコンテキスト周辺のコードを表示
  wtf?               直近のExceptionのバックトレースを表示

編集
  /^\s*!\s*$/        入力バッファをクリア
  amend-line         マルチラインモードでの入力ラインを修正
  edit               Invoke the default editor on a file.
  hist               コマンド入力の履歴を表示する
  play               Playback a string variable, method, line, or file as input.
  show-input         Show the contents of the input buffer for the current multi-line expression.

Introspection
  ri                 View ri documentation.
  show-doc           Show the documentation for a method or class.
  show-source        Show the source for a method or class.
  stat               View method information and set _file_ and _dir_ locals.

Gems
  gem-cd             Change working directory to specified gem&amp;#39;s directory.
  gem-install        Install a gem and refresh the gem cache.
  gem-list           List and search installed gems.
  gem-open           Opens the working directory of the gem in your editor.

Commands
  import-set         Import a pry command set.
  install-command    Install a disabled command.

Aliases
  !!!                Alias for `exit-program`
  !!@                Alias for `exit-all`
  $                  Alias for `show-source`
  ?                  Alias for `show-doc`
  @                  Alias for `whereami`
  breakpoint         Alias for `break`
  breaks             Alias for `breakpoints`
  c                  Alias for `continue`
  clipit             Alias for `gist --clip`
  f                  Alias for `finish`
  file-mode          Alias for `shell-mode`
  history            Alias for `hist`
  n                  Alias for `next`
  quit               Alias for `exit`
  quit-program       Alias for `exit-program`
  reload-method      Alias for `reload-code`
  s                  Alias for `step`
  show-method        Alias for `show-source`

Input and output
  .&amp;lt;shell command&amp;gt;   All text following a &amp;#39;.&amp;#39; is forwarded to the shell.
  cat                Show code from a file, pry&amp;#39;s input buffer, or the last exception.
  change-inspector   Change the current inspector proc.
  change-prompt      Change the current prompt.
  fix-indent         Correct the indentation for contents of the input buffer
  list-inspectors    List the inspector procs available for use.
  list-prompts       List the prompts available for use.
  save-file          Export to a file using content from the repl.
  shell-mode         Toggle shell mode. bring in pwd prompt and file completion.

Misc
  gist               Upload code, docs, history to https://gist.github.com/.
  pry-version        Show pry version.
  reload-code        Reload the source file that contains the specified code object.
  toggle-color       Toggle syntax highlighting.

Navigating pry
  !pry               Start a pry session on current self.
  disable-pry        Stops all future calls to pry and exits the current session.
  exit               Pop the previous binding.
  exit-all           End the current pry session.
  exit-program       End the current program.
  jump-to            Jump to a binding further up the stack.
  nesting            Show nesting information.
  switch-to          Start a new subsession on a binding in the current stack.

Prompts
  simple-prompt      Toggle the simple prompt.&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;pry-pry-rails&quot;&gt;4. pry-railsコマンド&lt;/h3&gt;pry-railsを入れることで、モデルやルートなどを確認することができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(main)&amp;gt; show-models   &lt;span class=&quot;synComment&quot;&gt;# すべてのモデルを表示する&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# 今回定義したCommentとUserモデルが表示さています&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Comment&lt;/span&gt;
  &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: integer
  &lt;span class=&quot;synConstant&quot;&gt;body&lt;/span&gt;: string
  &lt;span class=&quot;synConstant&quot;&gt;user_id&lt;/span&gt;: integer
  &lt;span class=&quot;synConstant&quot;&gt;created_at&lt;/span&gt;: datetime
  &lt;span class=&quot;synConstant&quot;&gt;updated_at&lt;/span&gt;: datetime
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: integer
  &lt;span class=&quot;synConstant&quot;&gt;firstname&lt;/span&gt;: string
  &lt;span class=&quot;synConstant&quot;&gt;lastname&lt;/span&gt;: string
  &lt;span class=&quot;synConstant&quot;&gt;email&lt;/span&gt;: string
  &lt;span class=&quot;synConstant&quot;&gt;created_at&lt;/span&gt;: datetime
  &lt;span class=&quot;synConstant&quot;&gt;updated_at&lt;/span&gt;: datetime
  has_many &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、pry-railsのコマンド一覧です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;
  recognize-path     どのルートにマッチする&lt;span class=&quot;synType&quot;&gt;URL&lt;/span&gt;か確認する
  show-middleware    すべてのミドルウェアを表示する
  show-model         引数で指定したモデルを表示する
  show-models        すべてのモデルを表示する
  show-routes        すべてのルートを表示する
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;pry-pry-byebug&quot;&gt;5. pry-byebugでデバッグ&lt;/h3&gt;pry-byebugを使うことにより、デバッグを実行することが可能です。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;ブレークポイントを設定&lt;/h4&gt;
    &lt;p&gt;binding.pryとソースに入力し、そこがブレークポイントになります。&lt;br /&gt;
そこの箇所でプログラムが中断されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/users_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# POST /users&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# POST /users.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.new(user_params)
    binding.pry &lt;span class=&quot;synComment&quot;&gt;# ブレークポイントを設定&lt;/span&gt;
    puts &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.save
        format.html { redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;notice&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;User was successfully created.&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }
        format.json { render &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:created&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;location&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; }
      &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
        format.html { render &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt; }
        format.json { render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.errors, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:unprocessable_entity&lt;/span&gt; }
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;プログラム実行&lt;/h4&gt;
    &lt;p&gt;&lt;code&gt;.&lt;/code&gt;をつけることでTerminalコマンドを実行することができるので、&lt;code&gt;.rails s&lt;/code&gt;とPry上で実行して、サーバーを起動しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;[&lt;span class=&quot;synConstant&quot;&gt;29&lt;/span&gt;] pry(main)&amp;gt; .rails s
=&amp;gt; &lt;span class=&quot;synType&quot;&gt;Booting&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;WEBrick&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt; application starting &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; development on http&lt;span class=&quot;synConstant&quot;&gt;:/&lt;/span&gt;/&lt;span class=&quot;synConstant&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0.0&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;3000&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synType&quot;&gt;Run&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rails server -h&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; more startup options
=&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;Notice&lt;/span&gt;: server is listening on all interfaces (&lt;span class=&quot;synConstant&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0.0&lt;/span&gt;). &lt;span class=&quot;synType&quot;&gt;Consider&lt;/span&gt; using &lt;span class=&quot;synConstant&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0.1&lt;/span&gt; (--binding option)
=&amp;gt; &lt;span class=&quot;synType&quot;&gt;Ctrl&lt;/span&gt;-&lt;span class=&quot;synType&quot;&gt;C&lt;/span&gt; to shutdown server
[&lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;01&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;01&lt;/span&gt;] &lt;span class=&quot;synType&quot;&gt;INFO&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WEBrick&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1.3&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
[&lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;01&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;01&lt;/span&gt;] &lt;span class=&quot;synType&quot;&gt;INFO&lt;/span&gt;  ruby &lt;span class=&quot;synConstant&quot;&gt;2.0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; (&lt;span class=&quot;synConstant&quot;&gt;2013&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;06&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;27&lt;/span&gt;) [x86_64-darwin13.&lt;span class=&quot;synConstant&quot;&gt;2.0&lt;/span&gt;]
[&lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;01&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;01&lt;/span&gt;] &lt;span class=&quot;synType&quot;&gt;INFO&lt;/span&gt;  &lt;span class=&quot;synType&quot;&gt;WEBrick&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;HTTPServer&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#start: pid=13779 port=3000&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、ユーザー新規画面を開きます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141024/20141024011854.png&quot; alt=&quot;f:id:nipe880324:20141024011854p:plain:w480&quot; title=&quot;f:id:nipe880324:20141024011854p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;ステップ実行&lt;/h4&gt;
    &lt;p&gt;「Create User」ボタンを押すとサーバーを起動させていたconsoleが次のようにブレークポイントを設定した箇所で止まっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Started&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0.1&lt;/span&gt; at &lt;span class=&quot;synConstant&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;synConstant&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;01&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;33&lt;/span&gt; +0900
&lt;span class=&quot;synType&quot;&gt;Processing&lt;/span&gt; by &lt;span class=&quot;synType&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#create as HTML&lt;/span&gt;
  &lt;span class=&quot;synConstant&quot;&gt;Parameters&lt;/span&gt;: {&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;✓&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;authenticity_token&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;7T1ISCnaEA5UqHK/FEn7E820I1ql6k5UdvaZQxTKC20=&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;{&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;太郎&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;鈴木&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;t.suzuki@test.com&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;}, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Create User&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;}

&lt;span class=&quot;synConstant&quot;&gt;From&lt;/span&gt;: /&lt;span class=&quot;synType&quot;&gt;Users&lt;/span&gt;/nipe0324/rails_samples/pry_test/app/controllers/users_controller.rb @ line &lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#create:&lt;/span&gt;

    &lt;span class=&quot;synConstant&quot;&gt;26&lt;/span&gt;: &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;27&lt;/span&gt;:   &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.new(user_params)
    &lt;span class=&quot;synConstant&quot;&gt;28&lt;/span&gt;:   binding.pry &lt;span class=&quot;synComment&quot;&gt;# ブレークポイントを設定&lt;/span&gt;
 =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;29&lt;/span&gt;:   puts &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt;:
    &lt;span class=&quot;synConstant&quot;&gt;31&lt;/span&gt;:   respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
    &lt;span class=&quot;synConstant&quot;&gt;32&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.save
    &lt;span class=&quot;synConstant&quot;&gt;33&lt;/span&gt;:       format.html { redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;notice&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;User was successfully created.&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;34&lt;/span&gt;:       format.json { render &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:created&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;location&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;35&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;36&lt;/span&gt;:       format.html { render &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;37&lt;/span&gt;:       format.json { render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.errors, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:unprocessable_entity&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;38&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;39&lt;/span&gt;:   &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;40&lt;/span&gt;: &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(&lt;span class=&quot;synComment&quot;&gt;#&amp;lt;UsersController&amp;gt;)&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;通常のRubyやPryコマンドが使えるので、変数の内容などを表示できます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(&lt;span class=&quot;synComment&quot;&gt;#&amp;lt;UsersController&amp;gt;)&amp;gt; p @user&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#&amp;lt;User id: nil, firstname: &amp;quot;太郎&amp;quot;, lastname: &amp;quot;鈴木&amp;quot;, email: &amp;quot;t.suzuki@test.com&amp;quot;, created_at: nil, updated_at: nil&amp;gt;&lt;/span&gt;
=&amp;gt; &lt;span class=&quot;synComment&quot;&gt;#&amp;lt;User id: nil, firstname: &amp;quot;太郎&amp;quot;, lastname: &amp;quot;鈴木&amp;quot;, email: &amp;quot;t.suzuki@test.com&amp;quot;, created_at: nil, updated_at: nil&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、次の行へステップ実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(&lt;span class=&quot;synComment&quot;&gt;#&amp;lt;UsersController&amp;gt;)&amp;gt; next  # 次の行へ実行&lt;/span&gt;
execute     &lt;span class=&quot;synComment&quot;&gt;# puts &amp;quot;execute&amp;quot; でexecuteが出力された&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;From&lt;/span&gt;: /&lt;span class=&quot;synType&quot;&gt;Users&lt;/span&gt;/nipe0324/&lt;span class=&quot;synType&quot;&gt;Google&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Drive&lt;/span&gt;/rails/rails_samples/pry_test/app/controllers/users_controller.rb @ line &lt;span class=&quot;synConstant&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#create:&lt;/span&gt;

    &lt;span class=&quot;synConstant&quot;&gt;26&lt;/span&gt;: &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;27&lt;/span&gt;:   &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.new(user_params)
    &lt;span class=&quot;synConstant&quot;&gt;28&lt;/span&gt;:   binding.pry &lt;span class=&quot;synComment&quot;&gt;# ブレークポイントを設定&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;29&lt;/span&gt;:   puts &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt;:
 =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;31&lt;/span&gt;:   respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
    &lt;span class=&quot;synConstant&quot;&gt;32&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.save
    &lt;span class=&quot;synConstant&quot;&gt;33&lt;/span&gt;:       format.html { redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;notice&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;User was successfully created.&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;34&lt;/span&gt;:       format.json { render &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:created&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;location&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;35&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;36&lt;/span&gt;:       format.html { render &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;37&lt;/span&gt;:       format.json { render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.errors, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:unprocessable_entity&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;38&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;39&lt;/span&gt;:   &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;40&lt;/span&gt;: &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(&lt;span class=&quot;synComment&quot;&gt;#&amp;lt;UsersController&amp;gt;)&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;といったようにデバッグができます。&lt;/p&gt;&lt;p&gt;pry-byebugで使えるコマンドは次のとおりです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Pry&lt;/span&gt;-byebug (v2.&lt;span class=&quot;synConstant&quot;&gt;0.0&lt;/span&gt;)
  &lt;span class=&quot;synStatement&quot;&gt;break&lt;/span&gt;              ブレークポイントをセットか編集する
  breakpoints        定義されたブレークポイントのリストを表示
  continue           プログラム実行をコンティニューする。そして、&lt;span class=&quot;synType&quot;&gt;Pry&lt;/span&gt;セッションを終了させる。
  finish             現在のスタックフレームが終わるまで実行する
  &lt;span class=&quot;synStatement&quot;&gt;next&lt;/span&gt;               現在のスタックフレーム内の次の列を実行する
  step               次の行かメソッドの内をステップ実行する
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;pry-pry-stack_explorer&quot;&gt;pry-stack_explorerでより深くデバッグ&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、また、画面からUserを作成しましょう。&lt;br /&gt;
すると、&lt;code&gt;binding.pry&lt;/code&gt;を記述したブレークポイントで止まります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Frame&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;number&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;synConstant&quot;&gt;76&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;From&lt;/span&gt;: /&lt;span class=&quot;synType&quot;&gt;Users&lt;/span&gt;/nipe0324/&lt;span class=&quot;synType&quot;&gt;Google&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Drive&lt;/span&gt;/rails/rails_samples/pry_test/app/controllers/users_controller.rb @ line &lt;span class=&quot;synConstant&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#create:&lt;/span&gt;

    &lt;span class=&quot;synConstant&quot;&gt;26&lt;/span&gt;: &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;27&lt;/span&gt;:   &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.new(user_params)
    &lt;span class=&quot;synConstant&quot;&gt;28&lt;/span&gt;:   binding.pry &lt;span class=&quot;synComment&quot;&gt;# ブレークポイントを設定&lt;/span&gt;
 =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;29&lt;/span&gt;:   puts &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt;: 
    &lt;span class=&quot;synConstant&quot;&gt;31&lt;/span&gt;:   respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
    &lt;span class=&quot;synConstant&quot;&gt;32&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.save
    &lt;span class=&quot;synConstant&quot;&gt;33&lt;/span&gt;:       format.html { redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;notice&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;User was successfully created.&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;34&lt;/span&gt;:       format.json { render &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:created&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;location&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;35&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;36&lt;/span&gt;:       format.html { render &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;37&lt;/span&gt;:       format.json { render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;.errors, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:unprocessable_entity&lt;/span&gt; }
    &lt;span class=&quot;synConstant&quot;&gt;38&lt;/span&gt;:     &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;39&lt;/span&gt;:   &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;40&lt;/span&gt;: &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次にpry上で&lt;code&gt;show-stack&lt;/code&gt;と打つとスタックトレースが表示されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] pry(&lt;span class=&quot;synComment&quot;&gt;#&amp;lt;UsersController&amp;gt;)&amp;gt; show-stack&lt;/span&gt;
when_started hook &lt;span class=&quot;synConstant&quot;&gt;failed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;NoMethodError&lt;/span&gt;: &lt;span class=&quot;synStatement&quot;&gt;private&lt;/span&gt; method &lt;span class=&quot;synSpecial&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;eval&#39; called for nil:NilClass&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;/Users/nipe0324/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/pry-stack_explorer-0.4.9.1/lib/pry-stack_explorer.rb:109:in &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;`&lt;/span&gt;bindings_equal?&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;(see _pry_.hooks.errors to debug)&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;Showing all accessible frames in stack (77 in total):&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;=&amp;gt; #0  create &amp;lt;UsersController#create()&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #1 [block]   block in run &amp;lt;PryByebug::Processor#run(initial=?, &amp;amp;_block)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #2 [method]  run &amp;lt;PryByebug::Processor#run(initial=?, &amp;amp;_block)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #3 [method]  resume_pry &amp;lt;PryByebug::Processor#resume_pry(context)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #4 [method]  at_line &amp;lt;PryByebug::Processor#at_line(context, _file, _line)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #5 [method]  at_line &amp;lt;Byebug::Context#at_line(file, line)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #6 [method]  create &amp;lt;UsersController#create()&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #7 [method]  send_action &amp;lt;ActionController::ImplicitRender#send_action(method, *args)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #8 [method]  process_action &amp;lt;AbstractController::Base#process_action(method_name, *args)&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   #9 [method]  process_action &amp;lt;ActionController::Rendering#process_action(*arg1)&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、&lt;code&gt;frame [スタック番号]&lt;/code&gt;を打つと、スタックを辿れ、そこでコマンドを実行することができます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;[2] pry(#&amp;lt;UsersController&amp;gt;)&amp;gt; frame 7

Frame number: 7/76
Frame type: method

From: /Users/nipe0324/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/actionpack-4.1.5/lib/action_controller/metal/implicit_render.rb @ line 4 ActionController::ImplicitRender#send_action:

    3: def send_action(method, *args)
 =&amp;gt; 4:   ret = super
    5:   default_render unless performed?
    6:   ret
    7: end&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
以上です。&lt;br /&gt;
Pryを使うことで、rails consoleを拡張できるだけでなく、有用な情報を簡単に表示できること、デバッグができることなど便利ですので、是非使いこなせるようになってみるといいかもしれません。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rweng/pry-rails&quot;&gt;rweng/pry-rails &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pry/pry-stack_explorer&quot;&gt;pry/pry-stack_explorer &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パーフェクトRuby on Rails&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Fri, 24 Oct 2014 01:20:24 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450069938973</guid>
          
            <category>Rails gem</category>
          
            <category>開発を効率化する</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsのCarrierWaveのカスタマイズ - ファイルの配置先、リサイズ、テストなど</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141022/1413907332</link>
          <description>&lt;p&gt;前回は&lt;a href=&quot;/entry/20141015/1413300088&quot; target=&quot;_blank&quot;&gt;CarrierWaveのインストール方法&lt;/a&gt;について説明しました。&lt;br /&gt;
今回は、ファイルの配置先、リサイズ、テストなどCarrirWaveをもっと使いこなしていくための方法を説明します。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#carrirwave-customize-filepath&quot;&gt;ファイルの配置先&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#carrirwave-customize-resize&quot;&gt;画像サイズの変更（リサイズ）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#carrirwave-customize-extension&quot;&gt;アップロードファイルの拡張子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#carrirwave-customize-filename&quot;&gt;アップロードされたファイルのファイル名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#carrirwave-customize-i18n&quot;&gt;i18n&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;carrirwave-customize-filepath&quot;&gt;ファイルの配置先&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まず、ファイルの配置先としては、大まかには次のどちらにするか選ぶ必要があります。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Railsが動いているサーバーに配置&lt;/li&gt;
&lt;li&gt;Amazon S3, Rackspace Cloud Files, Google Strage for Developersなどのクラウド上のストレージに配置&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;上記の1について説明します。&lt;br /&gt;
2については、公式ページを参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave#using-amazon-s3&quot; target=&quot;_blank&quot;&gt;Amazon S3を使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave#using-rackspace-cloud-files&quot; target=&quot;_blank&quot;&gt;Rackspace Cloud Filesを使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave#using-google-storage-for-developers&quot; target=&quot;_blank&quot;&gt;Google Strage for Developersを使う&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;アップロードしたファイルの配置場所を変更するために、&lt;code&gt;store_dir&lt;/code&gt;メソッドをオーバーライドしてください。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/uploaders/image_uploader.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;ImageUploader&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;CarrierWave&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Uploader&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  ...

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;store_dir&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# デフォルト値&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# &amp;quot;uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# Rails.root/public/mypath/ 配下にファイルが配置される&lt;/span&gt;
    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;mypath&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  ...
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;carrirwave-customize-resize&quot;&gt;画像サイズの変更（リサイズ）&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;サムネイル画像など同じファイルの異なったサイズのファイルを表示したい場合があると思います。&lt;br /&gt;
画像をリサイズするために&lt;code&gt;Imagemagick&lt;/code&gt;と&lt;code&gt;MiniMagick&lt;/code&gt;のインストールが必要です。&lt;/p&gt;&lt;p&gt;&lt;code&gt;MiniMagick&lt;/code&gt;の代わりに&lt;code&gt;RMagick&lt;/code&gt;を紹介しているサイトもありますが、&lt;code&gt;MiniMagick&lt;/code&gt;は公式に推奨されています。&lt;/p&gt;&lt;p&gt;OSXの場合、BrewコマンドでImageMagickを追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;brew install imagemagick&lt;/pre&gt;&lt;p&gt;次に、GemfileにMiniMagickを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;mini_magick&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerでインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;次にMiniMagickをincludeし、また、アップローダーにサイズを変換する指定をいれます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/uploaders/image_uploader.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;ImageUploader&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;CarrierWave&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Uploader&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;CarrierWave&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;MiniMagick&lt;/span&gt;
  ...

  &lt;span class=&quot;synComment&quot;&gt;# resize_to_fitはファイルのサイズを変更します&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# アップロードされたファイルを200〜200以下に変換する&lt;/span&gt;
  process &lt;span class=&quot;synConstant&quot;&gt;:resize_to_fit&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;synConstant&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;200&lt;/span&gt;]

  &lt;span class=&quot;synComment&quot;&gt;# 別のスケールを設定&lt;/span&gt;
  version &lt;span class=&quot;synConstant&quot;&gt;:thumb&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    process &lt;span class=&quot;synConstant&quot;&gt;:resize_to_fit&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;synConstant&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;50&lt;/span&gt;]
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

  ...
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、ファイルをアップロードし直してみましょう。&lt;br /&gt;
分かりづらいですが、ファイルサイズがリサイズされてサーバーに配置されています。&lt;br /&gt;
そのため、画面上で画像のサイズが少し小さくなっています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141022/20141022005200.png&quot; alt=&quot;f:id:nipe880324:20141022005200p:plain:w480&quot; title=&quot;f:id:nipe880324:20141022005200p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;carrirwave-customize-extension&quot;&gt;アップロードファイルの拡張子&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;PHPやスクリプトファイルなどをサーバー上にアップロードされると危険な場合があります。&lt;br /&gt;
そのために、CarrirWaveでは拡張子のホワイトリストを指定し、アップロード可能な拡張子を記載したリストを作成できます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/uploaders/image_uploader.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;ImageUploader&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;CarrierWave&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Uploader&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  ...

  &lt;span class=&quot;synComment&quot;&gt;# jpg, jpeg, gif, png のみ許可する&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;extension_white_list&lt;/span&gt;
    &lt;span class=&quot;synSpecial&quot;&gt;%w(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;jpg jpeg gif png&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  ...
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
もし、Modelでアップローダーをマウントしている場合（&lt;code&gt;mount_uploader :image, ImageUploader&lt;/code&gt;）、誤った拡張子がアップロードされた場合には、Validationエラーになります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/product.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  mount_uploader &lt;span class=&quot;synConstant&quot;&gt;:image&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;ImageUploader&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141022/20141022005304.png&quot; alt=&quot;f:id:nipe880324:20141022005304p:plain:w480&quot; title=&quot;f:id:nipe880324:20141022005304p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;carrirwave-customize-filename&quot;&gt;アップロードファイルのファイル名&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;デフォルトでは、CarrierWaveは、アップロードされたファイル名にアルファベット、数字などの簡易な文字しか許可していません。&lt;br /&gt;
もし、日本語などをサポートしたい場合は、&lt;code&gt;sanitize_regexp&lt;/code&gt;メソッドをオーハーライドし、全ての許可されていない文字列にマッチする正規表現を返す必要があります。&lt;/p&gt;&lt;p&gt;Ruby 2.0以上の場合、&lt;a href=&quot;https://github.com/k-takata/Onigmo&quot; target=&quot;_blank&quot;&gt;Onigumo&lt;/a&gt;を使って簡単に記載できます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;CarrierWave&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;SanitizedFile&lt;/span&gt;.sanitize_regexp = &lt;span class=&quot;synSpecial&quot;&gt;/[^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;[:word:&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;]\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;\-&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\+&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Ruby 1.8の場合、手動で特定の文字列にマッチする正規表現を記載する必要があります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;CarrierWave&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;SanitizedFile&lt;/span&gt;.sanitize_regexp = &lt;span class=&quot;synSpecial&quot;&gt;/[^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;a-zA-Zа-яА-ЯёЁ0-9&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;\-&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\+&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;]/&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;carrirwave-customize-i18n&quot;&gt;i18n&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;CarrierWAveのi18nファイルを作成しましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# carrierwave.ja.yml
errors:
  messages:
    carrierwave_processing_error: &amp;#34;Cannot resize image.&amp;#34;
    carrierwave_integrity_error: &amp;#34;Not an image.&amp;#34;
    carrierwave_download_error: &amp;#34;Couldn&amp;#39;t download image.&amp;#34;
    extension_white_list_error: &amp;#34;You are not allowed to upload %{extension} files, allowed types: %{allowed_types}&amp;#34;
    extension_black_list_error: &amp;#34;You are not allowed to upload %{extension} files, prohibited types: %{prohibited_types}&amp;#34;&lt;/pre&gt;&lt;p&gt;日本語のファイルは次の箇所にあります。&lt;br /&gt;
&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave/blob/master/lib/carrierwave/locale/ja.yml&quot; target=&quot;_blank&quot;&gt;GitHub - carrierwave/locale/ja.yml&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave&quot;&gt;https://github.com/carrierwaveuploader/carrierwave&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;以上です。&lt;br /&gt;
よく分からない箇所がある場合はコメントください。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Wed, 22 Oct 2014 01:02:12 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450069740014</guid>
          
            <category>Rails gem</category>
          
            <category>ファイルアップロード</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率を上げる - guard-rspec 自動でテスト(RSpec)を実行させる</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141021/1413819783</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141016/20141016010205.png&quot; alt=&quot;f:id:nipe880324:20141016010205p:plain:w320&quot; title=&quot;f:id:nipe880324:20141016010205p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Guardとは&lt;/h3&gt;
    &lt;p&gt;Guardとはファイルの変更を検知して、自動的にさまざまな処理を実行してくれる&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt;のGemです。&lt;br /&gt;
これ単体で使うよりも、他の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB&quot;&gt;ツール&lt;/a&gt;と連携し、自動的に処理を行うことにより開発効率を上げることができます。&lt;/p&gt;&lt;p&gt;メジャーどころとしては、次の３つだと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20141016/1413389293&quot;&gt;guard-livereload - Viewファイルの変更したときに自動的にブラウザをリロードする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;guard-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rspec&quot;&gt;rspec&lt;/a&gt; - specファイルを変更したときに自動的に&lt;code&gt;RSpec&lt;/code&gt;を実行する&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20141019/1413698128&quot;&gt;guard-rubocop - ファイルを修正したときに&lt;code&gt;RuboCop&lt;/code&gt;を実行する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;本記事では、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;へ&lt;code&gt;guard-rspec&lt;/code&gt;の導入方法を記載します。&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSpec&quot;&gt;RSpec&lt;/a&gt;を自動的に実行することで、ソースがいつ壊れたか簡単に検知できるようにします。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の開発効率を上げたい方&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;確認バージョン&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Mac OSX 10.9&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt;  2.0&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt; 4.1&lt;/li&gt;
&lt;li&gt;guard 2.6.1&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rspec&quot;&gt;rspec&lt;/a&gt;-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rails&quot;&gt;rails&lt;/a&gt; 3.0.2&lt;/li&gt;
&lt;li&gt;guard-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rspec&quot;&gt;rspec&lt;/a&gt; 4.2.10&lt;/li&gt;
&lt;li&gt;terminal-notifier-guard 1.5.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#guard-rspec-create-rails&quot;&gt;Railsプロジェクトの作成 + RSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#guard-rspec-getting-started&quot;&gt;guard-rspecの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#guard-rspec-options&quot;&gt;guard-rspecのオプション&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;guard-rspec-create-rails&quot;&gt;1. &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;プロジェクトの作成 + &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSpec&quot;&gt;RSpec&lt;/a&gt;&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まず、Guardを実行させるベースとなる&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;のプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new guard_test
cd guard_test&lt;/pre&gt;&lt;p&gt;次に、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSpec&quot;&gt;RSpec&lt;/a&gt;を&lt;code&gt;Gemfile&lt;/code&gt;に追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# Gemfile

group :development, :test do
  gem &amp;#39;rspec-rails&amp;#39;
end&lt;/pre&gt;&lt;p&gt;Bundlerで&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rspec&quot;&gt;rspec&lt;/a&gt;-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rails&quot;&gt;rails&lt;/a&gt;を入れます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;そして、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSpec&quot;&gt;RSpec&lt;/a&gt;の設定ファイルを追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g rspec:install
      create  .rspec
      create  spec
      create  spec/spec_helper.rb
      create  spec/rails_helper.rb&lt;/pre&gt;&lt;p&gt;Warningがたくさん表示されてしまうので、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rspec&quot;&gt;rspec&lt;/a&gt;コマンドのオプションを記載するファイルの&lt;code&gt;.rspec&lt;/code&gt;を次のように修正します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# .rspec

--color
--require spec_helper&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、簡単なProductのScaffoldを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold Product name:string price:integer discontinued:boolean&lt;/pre&gt;&lt;p&gt;マイグレートします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate&lt;/pre&gt;&lt;p&gt;では&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSpec&quot;&gt;RSpec&lt;/a&gt;を実行してみましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rspec

...
Finished in 0.27292 seconds (files took 2.15 seconds to load)
30 examples, 0 failures, 17 pending&lt;/pre&gt;&lt;p&gt;30件のテストの内、失敗は0件、17件は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DA%A5%F3%A5%C7%A5%A3%A5%F3%A5%B0&quot;&gt;ペンディング&lt;/a&gt;。つまり、13件が成功しました。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;guard-rspec-getting-started&quot;&gt;2. guard-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rspec&quot;&gt;rspec&lt;/a&gt;の導入&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、準備が整い舞いましたので、&lt;code&gt;guard-rspec&lt;/code&gt;を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;プロジェクトに導入していきます。&lt;/p&gt;&lt;p&gt;まずは、&lt;code&gt;Gemfile&lt;/code&gt;に&lt;code&gt;guard-rspec&lt;/code&gt;と&lt;code&gt;terminal-notifier-guard&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;guard-rspec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synPreProc&quot;&gt;require&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# guardでrspecを動かす&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;terminal-notifier&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;terminal-notifier-guard&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# デスクトップ通知を行う&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerを実行して、インストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;&lt;code&gt;Guardfile&lt;/code&gt;（Guardの設定を記載するファイル）に「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSpec&quot;&gt;RSpec&lt;/a&gt;用の設定」を追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;guard init rspec&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
作成された&lt;code&gt;Guardfile&lt;/code&gt;の中身を確認してみます。&lt;br /&gt;
&lt;code&gt;guard :rspec&lt;/code&gt;のブロック内に監視対象と実行するSpecファイルが記載されています。&lt;br /&gt;
具体的には、&lt;code&gt;watch&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;で「監視するファイル」を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%C0%B5%B5%AC%C9%BD%B8%BD&quot;&gt;正規表現&lt;/a&gt;で記載し、ブロック内で監視するファイルが変更されたときに「実行するファイル」を指定します。&lt;/p&gt;&lt;p&gt;以下の設定で、適切な単位でのテスト実行がされ、失敗時にはデスクトップに通知されるため修正はしません。&lt;br /&gt;
&lt;code&gt;guard-rspec&lt;/code&gt;のオプションについては、「&lt;a href=&quot;#guard-rspec-options&quot;&gt;guard-rspecのオプション&lt;/a&gt;」を参照して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Guardfile&lt;/span&gt;

guard &lt;span class=&quot;synConstant&quot;&gt;:rspec&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.+&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_spec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;lib/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+)\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)     { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/lib/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_spec.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }
  watch(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/spec_helper.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;)  { &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }

  &lt;span class=&quot;synComment&quot;&gt;# Rails example&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+)\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)                           { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_spec.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.*)(\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;haml&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;slim&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)$}&lt;/span&gt;)          { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_spec.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/controllers/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)  { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| [&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/routing/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_routing_spec.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;s/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_spec.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/acceptance/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_spec.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;] }
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/support/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+)\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)                  { &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }
  watch(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;config/routes.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;)                           { &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/routing&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }
  watch(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/controllers/application_controller.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;)  { &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/controllers&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }

  &lt;span class=&quot;synComment&quot;&gt;# Capybara features specs&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/views/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.*\.(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;haml&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;slim&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)$}&lt;/span&gt;)     { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/features/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_spec.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }

  &lt;span class=&quot;synComment&quot;&gt;# Turnip features and steps&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/acceptance/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+)\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{^&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/acceptance/steps/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_steps&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)   { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synType&quot;&gt;Dir&lt;/span&gt;[&lt;span class=&quot;synType&quot;&gt;File&lt;/span&gt;.join(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;**/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;.feature&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)][&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;] || &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec/acceptance&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;||&amp;lt;


では、&amp;lt;code&amp;gt;&lt;span class=&quot;synType&quot;&gt;Guard&lt;/span&gt;&amp;lt;/code&amp;gt;を実行します。
&amp;gt;||
bundle exec guard
&lt;/pre&gt;&lt;p&gt;&lt;i&gt;※&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;プロジェクトの配置パスに日本語が入っていると、「&lt;b&gt;E, [2014-10-16T00:43:38.055423 #28197] &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/ERROR&quot;&gt;ERROR&lt;/a&gt; -- : run() in thread failed: inspected result must be ASCII only or use the same encoding with default external:/Users/nipe0324/.rbenv/versions/2.0.0-p247/lib/&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/ruby&quot;&gt;ruby&lt;/a&gt;/gems/2.0.0/gems/listen-2.7.9/lib/listen/listener.rb:329:in `inspect&#39;&lt;/b&gt;」のようなエラーが発生するのでご注意ください。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;Pendingである&lt;code&gt;product_spec.rb&lt;/code&gt;にテストを追加してみましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rails_helper&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

&lt;span class=&quot;synType&quot;&gt;RSpec&lt;/span&gt;.describe &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:type&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;:model&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  describe &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;#name&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    it &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;空文字を許容しないこと&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
      product = &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt;.new(&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;discontinued&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)
      expect(product).to be_invalid
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;spceファイルを保存すると、guardが変更を検知し、特定のspecファイルを自動的に実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;15:50:03 - INFO - Running: ./spec/models/product_spec.rb:5
Run options: include {:locations=&amp;gt;{&amp;#34;./spec/models/product_spec.rb&amp;#34;=&amp;gt;[5]}}
F

Failures:

  1) Product#name 空文字を許容しないこと
     Failure/Error: expect(product).to be_invalid
       expected `#&amp;lt;Product id: nil, name: &amp;#34;&amp;#34;, price: 100, discontinued: false, created_at: nil, updated_at: nil&amp;gt;.invalid?` to return true, got false
     # ./spec/models/product_spec.rb:7:in `block (3 levels) in &amp;lt;top (required)&amp;gt;&amp;#39;

Finished in 0.00922 seconds (files took 2.5 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/models/product_spec.rb:5 # Product#name 空文字を許容しないこと&lt;/pre&gt;&lt;p&gt;さらに、テストが失敗するので、右上にデスクトップ通知が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141019/20141019155242.png&quot; alt=&quot;f:id:nipe880324:20141019155242p:plain:w320&quot; title=&quot;f:id:nipe880324:20141019155242p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;では、Productモデルを実装しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/product.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  validates &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;保存するとまた特定のspecファイルのみ実行され、実行結果がデスクトップに表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141019/20141019155503.png&quot; alt=&quot;f:id:nipe880324:20141019155503p:plain:w320&quot; title=&quot;f:id:nipe880324:20141019155503p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;これで、自動的に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSpec&quot;&gt;RSpec&lt;/a&gt;を実行する環境を構築できました。&lt;br /&gt;
また、guardを実行しているコンソール上で&lt;code&gt;Enter&lt;/code&gt;を押すと、全てのSpecファイルを実行することが可能です。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;guard-rspec-options&quot;&gt;3. guard-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rspec&quot;&gt;rspec&lt;/a&gt;のオプション&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;次のように&lt;code&gt;guard-rspec&lt;/code&gt;にオプションを指定することが可能です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Guardfile&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# bundle execをつけて、rspecコマンドを実行する&lt;/span&gt;
guard &lt;span class=&quot;synConstant&quot;&gt;:rspec&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;cmd&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;bundle exec rspec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;指定できるオプションは次のようになっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synConstant&quot;&gt;cmd&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;zeus rspec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;      &lt;span class=&quot;synComment&quot;&gt;# rspecコマンドの前に特定のコマンドをつけてrspecを実行できる（デフォルト値：&#39;rspec&#39;）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;cmd_additional_args&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;-f progress&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# rspecのオプションを指定できる&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;spec_paths&lt;/span&gt;: [&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;]   &lt;span class=&quot;synComment&quot;&gt;# specファイルのカスタム配列を指定できる&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;failed_mode&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:focus&lt;/span&gt;    &lt;span class=&quot;synComment&quot;&gt;# specが失敗した時の挙動&lt;/span&gt;
                       &lt;span class=&quot;synComment&quot;&gt;# 使用可能な値:&lt;/span&gt;
                       &lt;span class=&quot;synComment&quot;&gt;#  :focus - focus on the first 10 failed specs, rerun till they pass&lt;/span&gt;
                       &lt;span class=&quot;synComment&quot;&gt;#  :keep - keep failed specs until they pass (add them to new ones)&lt;/span&gt;
                       &lt;span class=&quot;synComment&quot;&gt;#  :none (default) - just report&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;all_after_pass&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# specファイルが変更されたら全てのspecを実行する（デフォルト値：false）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;all_on_start&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;     &lt;span class=&quot;synComment&quot;&gt;# guard起動時に全てのspecを実行する（デフォルト値：false）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;launchy&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;nil&lt;/span&gt;           &lt;span class=&quot;synComment&quot;&gt;# rspecの結果ファイルの出力パスを指定する。 例： ./tmp/spec_results.html（デフォルト値：nil）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;notification&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;    &lt;span class=&quot;synComment&quot;&gt;# specが実行されたあとに通知を表示するか指定する（デフォルト値： true）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;run_all&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;cmd&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;custom rspec command&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;message&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;custom message&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; } &lt;span class=&quot;synComment&quot;&gt;# Custom options to use when running all specs&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;title&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;My project&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;    &lt;span class=&quot;synComment&quot;&gt;# 通知のタイトルを指定できる（デフォルト値：&#39;RSpec results&#39;）&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/guard/guard-rspec&quot;&gt;guard/guard-rspec &amp;middot; GitHub&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。分からない箇所や間違いなどありましたらコメントください。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Tue, 21 Oct 2014 00:43:03 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450069240623</guid>
          
            <category>開発を効率化する</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率を上げる - guard-rubocopを使ってRailsで自動で静的コード解析ツール(RuboCop)を実行させる</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141019/1413698128</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141016/20141016010205.png&quot; alt=&quot;f:id:nipe880324:20141016010205p:plain:w320&quot; title=&quot;f:id:nipe880324:20141016010205p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Guardとは&lt;/h3&gt;
    &lt;p&gt;Guardとはファイルの変更を検知して、自動的にさまざまな処理を実行してくれるRubyのGemです。&lt;br /&gt;
これ単体で使うよりも、他のツールと連携し、自動的に処理を行い開発効率を上げるために使います。&lt;br /&gt;
メジャーどころとしては、次の３つだと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20141016/1413389293&quot;&gt;guard-livereload - Viewファイルの変更したときに自動的にブラウザをリロードする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20141021/1413819783&quot;&gt;guard-rspec - specファイルを変更したときに自動的に&lt;code&gt;RSpec&lt;/code&gt;を実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;guard-rubocop - ファイルを修正したときに&lt;code&gt;RuboCop&lt;/code&gt;を実行する&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
本記事では、Railsへ&lt;code&gt;guard-rubocop&lt;/code&gt;の導入方法を記載します。&lt;br /&gt;
また、&lt;code&gt;rubocop&lt;/code&gt;は自動で動くので、失敗したときに、Mac OS X の通知センターの機能を使って通知するようにします。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141019/20141019145153.png&quot; alt=&quot;f:id:nipe880324:20141019145153p:plain:w320&quot; title=&quot;f:id:nipe880324:20141019145153p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Railsの開発効率を上げたい方&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;確認バージョン&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Mac OSX 10.9&lt;/li&gt;
&lt;li&gt;Ruby  2.0&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;guard 2.6.1&lt;/li&gt;
&lt;li&gt;rubocop 0.26.1&lt;/li&gt;
&lt;li&gt;guard-rubocop 1.1.0&lt;/li&gt;
&lt;li&gt;terminal-notifier-guard 1.5.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#guard-rubocop-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#guard-rubocop-getting-started&quot;&gt;guard-rubocopの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#guard-rubocop-options&quot;&gt;guard-rubocopのオプション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#guard-rubocop-rspec&quot;&gt;guard-rubocopとguard-rspecの混合&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;h3 id=&quot;guard-rubocop-create-rails&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まず、Guardを実行させるベースとなるRailsのプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new guard_test&lt;/pre&gt;&lt;p&gt;次に、簡単なProductのScaffoldを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;cd guard_test
rails g scaffold Product name:string price:integer discontinued:boolean&lt;/pre&gt;&lt;p&gt;マイグレートします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;guard-rubocop-getting-started&quot;&gt;2. guard-rubocopの導入&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;の&lt;code&gt;developemnt&lt;/code&gt;グループ内に必要なgemを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rubocop&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;guard-rubocop&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;terminal-notifier-guard&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerを実行して、インストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;Guard定義が記載された&lt;code&gt;Guardfile&lt;/code&gt;(Guardの設定ファイル)を作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;guard init rubocop&lt;/pre&gt;&lt;p&gt;コマンドが上手くいかない場合は、下記を実行して下さい。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;gem install rubocop
gem install guard-rubocop
gem install terminal-notifier-guard&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
作成された&lt;code&gt;Guardfile&lt;/code&gt;の中身を確認してみます。&lt;br /&gt;
&lt;code&gt;rubocop&lt;/code&gt;のブロック内に監視対象が記載されています。&lt;br /&gt;
&lt;code&gt;watch&lt;/code&gt;メソッドで監視するファイルを正規表現で記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Guardfile&lt;/span&gt;

guard &lt;span class=&quot;synConstant&quot;&gt;:rubocop&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{.+\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{(?:.+&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)?\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rubocop&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;yml&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;) { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synType&quot;&gt;File&lt;/span&gt;.dirname(m[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;]) }
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次のように修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Guardfile&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# guard :rubocop do&lt;/span&gt;
guard &lt;span class=&quot;synConstant&quot;&gt;:rubocop&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;all_on_start&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;cli&lt;/span&gt;: [&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;clang&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;--rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{.+\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{.+\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rake&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# .rakeファイルも監視対象にする&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{(?:.+&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)?\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rubocop&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;yml&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;) { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synType&quot;&gt;File&lt;/span&gt;.dirname(m[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;]) }
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;上記の設定でguard起動時にrubocopを実行させず、失敗時に通知センターに通知がされます。&lt;br /&gt;
rubocopの詳細なオプションについては、本記事下記の「&lt;a href=&quot;#guard-rubocop-options&quot;&gt;guard-rubocopのオプション&lt;/a&gt;」を参照して下さい。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、&lt;code&gt;Guard&lt;/code&gt;を実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle exec guard&lt;/pre&gt;&lt;p&gt;&lt;i&gt;※Railsプロジェクトの配置パスに日本語が入っていると、「&lt;b&gt;E, [2014-10-16T00:43:38.055423 #28197] ERROR -- : run() in thread failed: inspected result must be ASCII only or use the same encoding with default external:/Users/nipe0324/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/listen-2.7.9/lib/listen/listener.rb:329:in `inspect&#39;&lt;/b&gt;」のようなエラーが発生するのでご注意ください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;.rb&lt;/code&gt;のファイルを編集することで、自動でrubocopが動き、（デフォルトのrubocopの規約が厳しすぎて）失敗するので、右上で通知がされます。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141019/20141019145153.png&quot; alt=&quot;f:id:nipe880324:20141019145153p:plain:w320&quot; title=&quot;f:id:nipe880324:20141019145153p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;これで、自動でrubocopを起動する環境を構築することができました。&lt;br /&gt;
rubocopの設定については、&lt;a href=&quot;https://github.com/bbatsov/rubocop&quot;&gt;bbatsov/rubocop &amp;middot; GitHub&lt;/a&gt; を参照して下さい。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;guard-rubocop-options&quot;&gt;3. guard-rubocopのオプション&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;次のように&lt;code&gt;guard-rubocop&lt;/code&gt;にオプションを指定することが可能です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Guardfile&lt;/span&gt;

guard &lt;span class=&quot;synConstant&quot;&gt;:rubocop&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;all_on_start&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;cli&lt;/span&gt;: [&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;clang&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;--rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{.+\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{(?:.+&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)?\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rubocop&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;yml&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;$}&lt;/span&gt;) { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synType&quot;&gt;File&lt;/span&gt;.dirname(m[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;]) }
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;指定できるオプションは次のようになっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synConstant&quot;&gt;all_on_start&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;     &lt;span class=&quot;synComment&quot;&gt;# Guard起動時にすべてのファイルをチェックする（デフォルト値：true）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;cli&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;--rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;         &lt;span class=&quot;synComment&quot;&gt;# RuboCopへのオプションをを文字列か配列で指定する（デフォルト値：nil）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;keep_failed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;      &lt;span class=&quot;synComment&quot;&gt;# Keep failed files until they pass. (default: true)&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;notification&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:failed&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# 実行後に通知センターに通知をする（デフォルト値：failed - 失敗時）&lt;/span&gt;
                       &lt;span class=&quot;synComment&quot;&gt;#   true    - 毎回通知する&lt;/span&gt;
                       &lt;span class=&quot;synComment&quot;&gt;#   false   - 通知をしない&lt;/span&gt;
                       &lt;span class=&quot;synComment&quot;&gt;#   :failed - 失敗時のみ通知する&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;guard-rubocop-rspec&quot;&gt;guard-rubocopとguard-rspecの混合&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;TDDで実装しているときに、RedとGreenの段階では、「RSpecが失敗したら、RuboCopの実行をしない」ように制御したい場合があるかもしれません。&lt;br /&gt;
そのようなときに、次のように&lt;code&gt;Guardfile&lt;/code&gt;を修正するとよいです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Guardfile&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# RSpecが失敗したら、RuboCopをスキップする&lt;/span&gt;
group &lt;span class=&quot;synConstant&quot;&gt;:red_green_refactor&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;halt_on_fail&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;

  guard &lt;span class=&quot;synConstant&quot;&gt;:rspec&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    ...
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

  guard &lt;span class=&quot;synConstant&quot;&gt;:rubocop&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    ...
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;


* 参考文献
- [https&lt;span class=&quot;synConstant&quot;&gt;:/&lt;/span&gt;/github.com/guard/guard&lt;span class=&quot;synConstant&quot;&gt;:title&lt;/span&gt;]

&lt;/pre&gt;
&lt;/div&gt;</description>
          <pubDate>Sun, 19 Oct 2014 14:55:28 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450069002348</guid>
          
            <category>開発を効率化する</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsの開発効率を上げる - guard-livereloadを使ってRailsでブラウザのオートリロードをさせる</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141016/1413389293</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141016/20141016010205.png&quot; alt=&quot;f:id:nipe880324:20141016010205p:plain:w320&quot; title=&quot;f:id:nipe880324:20141016010205p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Guardとは&lt;/h3&gt;
    &lt;p&gt;Guardとはファイルの変更を検知して、自動的にさまざまな処理を実行してくれるRubyのGemです。&lt;br /&gt;
これ単体で使うよりも、他のツールと連携し、自動的に処理を行い開発効率を上げるために使います。&lt;br /&gt;
メジャーどころとしては、次の３つだと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;guard-livereload - Viewファイルの変更したときに自動的にブラウザをリロードする&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20141021/1413819783&quot;&gt;guard-rspec - specファイルを変更したときに自動的に&lt;code&gt;RSpec&lt;/code&gt;を実行する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20141019/1413698128&quot;&gt;guard-rubocop - ファイルを修正したときに&lt;code&gt;RuboCop&lt;/code&gt;を実行する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;本記事では、Railsへ&lt;code&gt;guard-livereload&lt;/code&gt;の導入方法を記載します。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Mac OSX 10.9&lt;/li&gt;
&lt;li&gt;Ruby  2.0&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;guard 2.6.1&lt;/li&gt;
&lt;li&gt;guard-livereload 2.3.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#guard-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#guard-livereload-getting-started&quot;&gt;guard-livereloadの導入&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;guard-create-rails&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まず、Guardを実行させるベースとなるRailsのプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new guard_test&lt;/pre&gt;&lt;p&gt;次に、簡単なProductのScaffoldを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;cd guard_test
rails g scaffold Product name:string price:integer discontinued:boolean&lt;/pre&gt;&lt;p&gt;マイグレートします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;guard-livereload-getting-started&quot;&gt;2. guard-livereloadの導入&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;の&lt;code&gt;developemnt group&lt;/code&gt;内に&lt;code&gt;guard-livereload&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
group &lt;span class=&quot;synConstant&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;guard-livereload&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synPreProc&quot;&gt;require&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Bundlerを実行して、インストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;Guard定義が記載された&lt;code&gt;Guardfile&lt;/code&gt;(Guardの設定ファイル)を作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle exec guard init livereload&lt;/pre&gt;&lt;p&gt;作成された&lt;code&gt;Guardfile&lt;/code&gt;の中身を確認してみます。&lt;/p&gt;&lt;p&gt;これは、&lt;code&gt;guard&lt;/code&gt;で監視するファイルが変更された場合に実行するプラグイン(livereload, rspec, rubocopなど)を記載します。&lt;br /&gt;
そして、&lt;code&gt;guard&lt;/code&gt;ブロック内に&lt;code&gt;watch&lt;/code&gt;を記載し、監視するファイルを記載します。&lt;/p&gt;&lt;p&gt;基本的に&lt;code&gt;bundle exec guard init [Guardのプラグイン名&lt;/code&gt;を実行することにより、基本的な設定を自動で&lt;code&gt;Guardfile&lt;/code&gt;に追加してくれます。&lt;/p&gt;&lt;p&gt;既にViewやHelperなどの変更に対する監視が記載されているので、今回は特に編集しません。&lt;br /&gt;
監視対象を増やしたい、減らしたい場合は必要に応じて追加してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# A sample Guardfile&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# More info at https://github.com/guard/guard#readme&lt;/span&gt;

guard &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;livereload&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/views/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.+\.(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;erb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;haml&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;slim&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)$}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/helpers/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.+\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;public/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.+\.(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)}&lt;/span&gt;)
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;config/locales/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.+\.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;yml&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;)
  &lt;span class=&quot;synComment&quot;&gt;# Rails Assets Pipeline&lt;/span&gt;
  watch(&lt;span class=&quot;synSpecial&quot;&gt;%r{(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/assets/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\w+&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.+\.(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;))).*}&lt;/span&gt;) { |&lt;span class=&quot;synIdentifier&quot;&gt;m&lt;/span&gt;| &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/assets/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;m[&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt; }
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次にブラウザに&lt;code&gt;LiveReload&lt;/code&gt;のエクステンションを追加します。&lt;br /&gt;
次のサイトにSafari, Chrome, FireFoxのエクステンションへのリンクがあります。&lt;br /&gt;
&lt;a href=&quot;http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-&quot;&gt;http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-&lt;/a&gt;&lt;/p&gt;&lt;p&gt;エクステンションを入れたら、&lt;code&gt;Guard&lt;/code&gt;を実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle exec guard
00:52:35 - INFO - Guard is using TerminalTitle to send notifications.
00:52:36 - INFO - LiveReload is waiting for a browser to connect.
00:52:36 - INFO - Guard is now watching at &amp;#39;/Users/nipe0324/guard_test&amp;#39;&lt;/pre&gt;&lt;p&gt;&lt;i&gt;※Railsプロジェクトの配置パスに日本語が入っていると、「&lt;b&gt;E, [2014-10-16T00:43:38.055423 #28197] ERROR -- : run() in thread failed: inspected result must be ASCII only or use the same encoding with default external:/Users/nipe0324/.rbenv/versions/2.0.0-p247/lib/ruby/gems/2.0.0/gems/listen-2.7.9/lib/listen/listener.rb:329:in `inspect&#39;&lt;/b&gt;」のようなエラーが発生するのでご注意ください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;そして、別コンソールでサーバーを起動します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails s&lt;/pre&gt;&lt;p&gt;&lt;code&gt;http://localhost:3000/products&lt;/code&gt;にアクセスし、ブラウザの&lt;code&gt;LiveRelad&lt;/code&gt;を有効にしてください。&lt;br /&gt;
Guardのコンソールに次のように「&lt;b&gt;Browser connected.&lt;/b&gt;」と表示されたら、ブラウザとGuardが接続された証拠です。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;[1] guard(main)&amp;gt; 00:52:42 - INFO - Browser connected.&lt;/pre&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141016/20141016010240.png&quot; alt=&quot;f:id:nipe880324:20141016010240p:plain:w480&quot; title=&quot;f:id:nipe880324:20141016010240p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;この状態で、&lt;code&gt;index.html&lt;/code&gt;を更新し、保存します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Listing products&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;color:red;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Guardで自動的に追加される文字列&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Price&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Discontinued&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;保存をすると、GuardがViewファイルの変更を検知し、ブラウザを自動的にリロードしてくれます。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141016/20141016010257.png&quot; alt=&quot;f:id:nipe880324:20141016010257p:plain:w480&quot; title=&quot;f:id:nipe880324:20141016010257p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;これで、毎回ファイルを更新してブラウザをロードするということがなくなりとっても便利です。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;もし、VagrantなどでMacなどに仮想マシンを起動させている場合は、そのための設定方法が記載されています。&lt;br /&gt;
&lt;iframe src=&quot;http://togattti.hateblo.jp/embed/2014/09/09/233049&quot; title=&quot;Vagrant環境にLive Reloadを設定する - 麹町で働くWebエンジニアのメモ帳&quot; class=&quot;embed-card embed-blogcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://togattti.hateblo.jp/entry/2014/09/09/233049&quot;&gt;Vagrant環境にLive Reloadを設定する - 麹町で働くWebエンジニアのメモ帳&lt;/a&gt;&lt;/iframe&gt;&lt;br /&gt;
&lt;a href=&quot;http://togattti.hateblo.jp/entry/2014/09/09/233049&quot;&gt;Vagrant&amp;#x74B0;&amp;#x5883;&amp;#x306B;Live Reload&amp;#x3092;&amp;#x8A2D;&amp;#x5B9A;&amp;#x3059;&amp;#x308B; - &amp;#x9EB9;&amp;#x753A;&amp;#x3067;&amp;#x50CD;&amp;#x304F;Web&amp;#x30A8;&amp;#x30F3;&amp;#x30B8;&amp;#x30CB;&amp;#x30A2;&amp;#x306E;&amp;#x30E1;&amp;#x30E2;&amp;#x5E33;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/guard/guard&quot;&gt;guard/guard &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
以上です。分からない箇所や間違いなどありましたらコメントください。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Thu, 16 Oct 2014 01:08:13 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450068828864</guid>
          
            <category>Rails gem</category>
          
            <category>開発を効率化する</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsのファイルをアップロードするgemのCarrierWaveのインストール方法</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141015/1413300088</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;CarrierWaveとは&lt;/h3&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141015/20141015002041.jpg&quot; alt=&quot;f:id:nipe880324:20141015002041j:plain:w240&quot; title=&quot;f:id:nipe880324:20141015002041j:plain:w240&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:240px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;CarrierWaveとは有名なファイルアップロード用のgemです。他にはPaperclipというものもあります。&lt;br /&gt;
この２つがRuby/Railsでのファイルアップロードgemとしてトップ２を争っています。&lt;/p&gt;&lt;p&gt;これらの違いは、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Paperclipは機能がシンプルで使いやすい&lt;/li&gt;
&lt;li&gt;CarrierWaveは機能がいろいろあり、応用が聞きやすい&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;です。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;完成イメージ&lt;/h3&gt;
    &lt;p&gt;新規/編集画面で画像をアップロードをし、次のように詳細画面で表示することができます。&lt;br /&gt;
また、チェックボックスをつけて、削除することも可能です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141015/20141015000556.png&quot; alt=&quot;f:id:nipe880324:20141015000556p:plain:w320&quot; title=&quot;f:id:nipe880324:20141015000556p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;実施環境&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Mac OS X 10.9&lt;/li&gt;
&lt;li&gt;Ruby  2.0&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;CarrierWave 0.10.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#carrierwave-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#carrierwave-getting-started&quot;&gt;CarrierWaveのインストールと導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#carrierwave-usefull-method&quot;&gt;CarrierWaveの良く使うメソッド&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;carrierwave-create-rails&quot;&gt;Railsプロジェクトの作成&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まず Railsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new carrierwave_test&lt;/pre&gt;&lt;p&gt;そして Scaffoldで簡単なProductクラスを作ります。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;cd carrierwave_test
rails g scaffold Product name:string price:integer&lt;/pre&gt;&lt;p&gt;では DBマイグレートをして、ローカル環境で動かしてみましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate
rails s&lt;/pre&gt;&lt;p&gt;以下のような画面ができるはずです。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141015/20141015000549.png&quot; alt=&quot;f:id:nipe880324:20141015000549p:plain:w480&quot; title=&quot;f:id:nipe880324:20141015000549p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;carrierwave-getting-started&quot;&gt;CarrierWaveのインストールと導入&lt;/h3&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Gemのインストール&lt;/h4&gt;
    &lt;p&gt;では、CarrierWaveのインストールをプロジェクトに導入します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# Gemfile
...
gem &amp;#34;carrierwave&amp;#34;&lt;/pre&gt;&lt;p&gt;gemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;アップローダーの生成&lt;/h4&gt;
    &lt;p&gt;CarrierWaveのジェネレーターでアップローダーを作成します&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g uploader Image
      create  app/uploaders/image_uploader.rb&lt;/pre&gt;&lt;p&gt;作成されたファイルの&lt;code&gt;image_uploader.rb&lt;/code&gt;の中をのぞいてみると、ファイルの保存方法（デフォルトはファイル）、保存パス、ファイルのサイズ、拡張子やファイル名の変換などが変更できることがわかると思います。&lt;/p&gt;&lt;p&gt;CarrierWaveはActiveRecordやMongoId、DataMapperなどのORMと連携することができます。&lt;br /&gt;
今回は、RailsのデフォルトでもあるActiveRecordを使って、アップロードしたファイルの情報を保存します。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Modelに画像情報保持用のカラムの追加&lt;/h4&gt;
    &lt;p&gt;まずは、Stringカラムをモデルに追加するために、Productモデルにマイグレーションファイルを作成し、マイグレートをします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g migration add_image_to_product image:string
rake db:migrate&lt;/pre&gt;&lt;p&gt;その後、モデルファイルを開き、アップローダーへのマウントする記述を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/product.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  mount_uploader &lt;span class=&quot;synConstant&quot;&gt;:image&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;ImageUploader&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;画像の追加/編集/表示/削除処理の追加&lt;/h4&gt;
    &lt;p&gt;商品の新規/編集フォームに画像アップロードの入力フィールドを追加します。&lt;br /&gt;
hidden属性で&lt;code&gt;image_cache&lt;/code&gt;を指定しましたが、これは、画像を指定したけれども、バリデーションエラーなどにより保存が失敗した場合の画面再表示時などに、画像情報をキャッシュしておくための領域です。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/_form.html.erb

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(@product)&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @product.errors.any? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error_explanation&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; pluralize(@product.errors.count,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;) %&amp;gt;&lt;/span&gt; prohibited this product from being saved:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @product.errors.full_messages.each do |message| %&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; message&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.number_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 開始 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @product.image? %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; image_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @product.image.&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :image %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.file_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :image %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.hidden_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :image_cache %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 既存レコード(DBに保存されている)かつ、画像が存在する場合 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @product.persisted? &amp;amp;&amp;amp; @product.image? %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.check_box&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :remove_image %&amp;gt;&lt;/span&gt;
        画像を削除
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 終了 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;actions&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
コントローラーにファイルの属性を更新できるようにするために、StrongParametersの箇所を修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/products_controller.rb&lt;/span&gt;

...
    &lt;span class=&quot;synComment&quot;&gt;# Never trust parameters from the scary internet, only allow the white list through.&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;product_params&lt;/span&gt;
      params.require(&lt;span class=&quot;synConstant&quot;&gt;:product&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:price&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:image&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:image_cache&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:remove_image&lt;/span&gt;)
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

end
&lt;/pre&gt;&lt;p&gt;そして、画像がアップロードされたら、詳細画面で表示するようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/show.html.erb

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; notice&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Price:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.price&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Image:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @product.image? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; image_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @product.image.&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_product_path(@product) %&amp;gt;&lt;/span&gt; |
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, products_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、サーバーを起動して画像を登録してみましょう。&lt;br /&gt;
新規画面から画像を選択し、登録を押すと次のように画像が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141015/20141015000556.png&quot; alt=&quot;f:id:nipe880324:20141015000556p:plain:w320&quot; title=&quot;f:id:nipe880324:20141015000556p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;また、このアップロードされたファイルはpublic/uploads/products配下に保存されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141015/20141015000604.png&quot; alt=&quot;f:id:nipe880324:20141015000604p:plain:w230&quot; title=&quot;f:id:nipe880324:20141015000604p:plain:w230&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:230px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;carrierwave-usefull-method&quot;&gt;CarrierWaveの良く使うメソッド&lt;/h3&gt;アップローダーをincludeしたモデル次のようなメソッドを使えます&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# モデルの作成&lt;/span&gt;
product       = &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt;.new

&lt;span class=&quot;synComment&quot;&gt;# 画像ファイルの設定&lt;/span&gt;
product.image = params[&lt;span class=&quot;synConstant&quot;&gt;:image&lt;/span&gt;]         &lt;span class=&quot;synComment&quot;&gt;# paramsから設定&lt;/span&gt;
product.image = &lt;span class=&quot;synType&quot;&gt;File&lt;/span&gt;.open(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;somewhere&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# Fileオブジェクトを設定&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# 保存&lt;/span&gt;
product.save!

&lt;span class=&quot;synComment&quot;&gt;# アップローダーの対するメソッド&lt;/span&gt;
product.image.url          &lt;span class=&quot;synComment&quot;&gt;# =&amp;gt; &#39;/url/to/file.png&#39;&lt;/span&gt;
product.image.current_path &lt;span class=&quot;synComment&quot;&gt;# =&amp;gt; &#39;path/to/file.png&#39;&lt;/span&gt;
prodcut.image.identifier   &lt;span class=&quot;synComment&quot;&gt;# =&amp;gt; &#39;file.png&#39;&lt;/span&gt;
product.image?   &lt;span class=&quot;synComment&quot;&gt;# =&amp;gt; imageがあるかを true or false で返す&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;今回はCarrierWaveの基礎的な内容を記載しましたが、比較的簡単に画像のCRUDをActiveRecordのモデルに追加することができました。&lt;br /&gt;
次は、より深くCarrierWaveを使うためのカスタマイズ方法を説明します。&lt;/p&gt;&lt;p&gt;間違っている箇所のご指摘、良く分からないといった質問などありましたら、お気軽に以下のコメント欄に記載ください。直に返します。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave&quot; target=&quot;_blank&quot;&gt;GitHub公式ページ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carrierwaveuploader/carrierwave/wiki&quot; target=&quot;_blank&quot;&gt;Howto集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rubydoc.info/gems/carrierwave/frames&quot; target=&quot;_blank&quot;&gt;Howot集2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Wed, 15 Oct 2014 00:21:28 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450068615327</guid>
          
            <category>Rails gem</category>
          
            <category>ファイルアップロード</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsでransackを使って検索機能を作成する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141008/1412774436</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;ransackとは&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/activerecord-hackery/ransack&quot; target=&quot;_blank&quot;&gt;ransack&lt;/a&gt;はモデルの検索インターフェースを簡単に作れるgemです。それにより検索機能を簡単に実装できます。&lt;/p&gt;&lt;p&gt;商品の検索機能をステップステップで作成することにより、ransackの使い方を説明していきます。&lt;br /&gt;
次のように検索フォームを作成し、検索をすることができます。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141008/20141008215332.png&quot; alt=&quot;f:id:nipe880324:20141008215332p:plain:w480&quot; title=&quot;f:id:nipe880324:20141008215332p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Mac OSX 10.9&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;Ransack 1.4.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#ransack-create-project&quot;&gt;Railsプロジェクトの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ransack-install&quot;&gt;Ransackのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ransack-search-function&quot;&gt;Ransackで検索機能と検索フォームを作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ransack-sort-on-table&quot;&gt;Ransackでテーブルのソートリンク&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ransack-restrict&quot;&gt;Ransackで検索条件を絞る&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;ransack-create-project&quot;&gt;1. Railsプロジェクトの作成&lt;/h3&gt;まずは、Railsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails new ransack_test
cd ransack_test&lt;/pre&gt;&lt;p&gt;Scaffoldで商品を作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g scaffold Product name:string description:string price:integer discontinued:boolean carrier_id:integer&lt;/pre&gt;&lt;p&gt;商品の取り扱い会社を保持するCarrierモデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rails g model Carrier name:string&lt;/pre&gt;&lt;p&gt;モデル間の関連を追加します。&lt;br /&gt;
まずは、Carrierモデルです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/carrier.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Carrier&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:products&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次は、Productモデルです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/carrier.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:carrier&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;マイグレートを実行します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:migrate&lt;/pre&gt;&lt;p&gt;初期データを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/seeds.rb&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# This file should contain all the record creation needed to seed the database with its default values.&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# Examples:&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#   cities = City.create([{ name: &#39;Chicago&#39; }, { name: &#39;Copenhagen&#39; }])&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#   Mayor.create(name: &#39;Emanuel&#39;, city: cities.first)&lt;/span&gt;

carrier1 = &lt;span class=&quot;synType&quot;&gt;Carrier&lt;/span&gt;.create!(&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Mocodo&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)
carrier2 = &lt;span class=&quot;synType&quot;&gt;Carrier&lt;/span&gt;.create!(&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;BankSoft&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)

carrier1.products..create!(
  &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;iPhone 6&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;今回のモデルチェンジではいくつか見どころがあるが、その中でも特に大きなポイントとなるのが画面サイズのアップだ。「iPhone 6」は4.7インチ、「iPhone 6 Plus」は5.5インチの「Retina HDディスプレイ」を採用している。従来モデル「iPhone 5s」の4インチと比べて、「iPhone 6」はひと回り、「iPhone 6 Plus」ではそれ以上に大きなディスプレイとなっている。&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;96480&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;discontinued&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)

carrier1.products.create!(
  &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;iPhone 3G&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;iPhone 3Gとはアップル インコーポレイテッドが設計・販売しているスマートフォンである。iPhoneの第2世代機で、2008年6月9日にサンフランシスコのモスコーニ・センター（英語版）で開催されたWWDC 2008で発表された。&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;12800&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;discontinued&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;)

carrier2.products..create!(
  &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;AQUOS CRYSTAL SoftBank&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;画面のフレームを極限までなくした「フレームレス構造」によって、画面だけを持っているような感覚を実現したスマートフォン。ディスプレイは大画面の5.0型「S-CG Silicon」（1280×720ドット）液晶を搭載しながら、女性でも片手で操作できるコンパクトなサイズに仕上げている。&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;8800&lt;/span&gt;,
  &lt;span class=&quot;synConstant&quot;&gt;discontinued&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;データを投入します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;rake db:seed&lt;/pre&gt;&lt;p&gt;そして、Carrierを表示するようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/index.html.erb

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# 変更前 %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.carrier_id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# 変更後 %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.carriers.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;rails s&lt;/code&gt;で画面を表示してみましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141008/20141008215539.png&quot; alt=&quot;f:id:nipe880324:20141008215539p:plain:w480&quot; title=&quot;f:id:nipe880324:20141008215539p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;ransack-install&quot;&gt;2. Ransackのインストール&lt;/h3&gt;では、準備ができたので&lt;code&gt;Ransack&lt;/code&gt;をインストールしていきましょう。&lt;/p&gt;&lt;p&gt;まずは、&lt;code&gt;Gemfile&lt;/code&gt;に&lt;code&gt;ransack&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
...
gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ransack&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;ransack&lt;/code&gt;をインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;bundle install&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;ransack-search-function&quot;&gt;3. Ransackで検索機能と検索フォームを作成&lt;/h3&gt;Ransackで検索機能と検索フォームを追加します。&lt;/p&gt;&lt;p&gt;まず、コントローラーに検索をするコードを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /products&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /products.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;#@products = Product.all&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@q&lt;/span&gt;        = &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt;.search(params[&lt;span class=&quot;synConstant&quot;&gt;:q&lt;/span&gt;])
    &lt;span class=&quot;synIdentifier&quot;&gt;@products&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;@q&lt;/span&gt;.result(&lt;span class=&quot;synConstant&quot;&gt;distinct&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;)
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;次に、商品一覧のビューに検索フォームを追加します。&lt;br /&gt;
コメントで記載していますが、&lt;br /&gt;
Ransackでは、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;search_form_for&lt;/code&gt;を使う&lt;/li&gt;
&lt;li&gt;&lt;code&gt;カラム名_start&lt;/code&gt;、&lt;code&gt;カラム名_cont&lt;/code&gt;などで検索条件を指定する&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;ことにより、検索フォームを作成します。&lt;br /&gt;
以下に上げているもので検索パターンをほぼ網羅しています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Listing products&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# form_for の代わりに search_form_for を使うことで検索フォームを作成 %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; search_form_for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @q do |f| %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; 特定の文字列で始まる商品名で検索 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :name_start, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;商品名&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.search_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :name_start %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# cont 文字列が含まれる商品説明で検索（not_cont で含まれない商品説明） %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :description_cont, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;商品説明&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.search_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :description_cont %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# 関連の名前で検索 Product.carrier.&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :carrier_name_cont, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;キャリア&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.search_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :carrier_name_cont %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# lt で特定の数値より下で検索（gt はより上、eq は同じ、gteqやlteqなどもできる） %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price_lt, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;値段(以下)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.search_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price_lt %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# or で複数の値をorで検索（and 複数の値をand条件で検索） %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :name_or_description_cont, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;名前 or 説明&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.search_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :name_or_description_cont %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%# 検索ボタン %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;rails s&lt;/code&gt;でサーバーを起動し検索してみましょう。&lt;br /&gt;
まず、「商品名」を &quot;iPhone&quot; で検索します。&lt;br /&gt;
デフォルトでは大文字小文字を区別しません。「商品名」が &quot;iPhone&quot; で始まる文字列で検索されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141008/20141008220206.png&quot; alt=&quot;f:id:nipe880324:20141008220206p:plain:w480&quot; title=&quot;f:id:nipe880324:20141008220206p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;次に、「商品説明」に &quot;ディスプレイ&quot; を入力し、検索します。&lt;br /&gt;
すると、複合条件で検索された結果が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141008/20141008220222.png&quot; alt=&quot;f:id:nipe880324:20141008220222p:plain:w480&quot; title=&quot;f:id:nipe880324:20141008220222p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;ransack-sort-on-table&quot;&gt;4. Ransackでテーブルのソートリンク&lt;/h3&gt;Ransackが提供している&lt;code&gt;sort_link&lt;/code&gt;ヘルパーをテーブルのヘッダーに設定することによりテーブルの列をソートすることができるようになります。&lt;br /&gt;
&lt;code&gt;default_order&lt;/code&gt;オプションにより、初期のソート順を指定できます。&lt;/p&gt;&lt;p&gt;では、テーブルのヘッダーにテーブルのソートリンクを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/index.html.erb
  ...
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; sort_link(@q,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Description&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; sort_link(@q,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price, default_order: :desc) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Discontinued&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Carrier&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

	  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @products.each do |product| %&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.description&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.price&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.discontinued&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.carrier.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, product %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_product_path(product) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, product, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Are you sure?&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
	  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt; 画面を更新しましょう。「Name」や「Price」がクリック可能になり、昇順や降順ができるようになりました。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20141008/20141008220408.png&quot; alt=&quot;f:id:nipe880324:20141008220408p:plain:w480&quot; title=&quot;f:id:nipe880324:20141008220408p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;ransack-restrict&quot;&gt;5. Ransackで検索条件を絞る&lt;/h3&gt;ユーザーが独自に検索パラメーターを指定した場合には、その他の項目で検索ができてしまいます。&lt;br /&gt;
そのため、セキュリティを意識する必要がある場合は、&lt;br /&gt;
「Name」、「Description」、「Carrier.Name」、「Price」以外&lt;br /&gt;
の検索条件を利用できないようにします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;カラム名を制限するには、&lt;code&gt;ransackable_attributes&lt;/code&gt;をオーバーライドし、許可するカラム名を配列で指定します。&lt;/li&gt;
&lt;li&gt;関連を制限するには、&lt;code&gt;ransackable_associations&lt;/code&gt;をオーバーライドし、許可する関連名を配列で指定します。&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Product&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:carrier&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# デフォルトでは全てのカラム名を返す&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# 許可するカラムの名前をオーバーライドする&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synIdentifier&quot;&gt;ransackable_attributes&lt;/span&gt; auth_object = &lt;span class=&quot;synConstant&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;synSpecial&quot;&gt;%w(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;name description price&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# デフォルトは全てのアソシエーション名を返す&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# 許可する関連の配列をオーバーライドする&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synIdentifier&quot;&gt;ransackable_associations&lt;/span&gt; auth_object = &lt;span class=&quot;synConstant&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;synSpecial&quot;&gt;%w(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;carrier&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;http://qiita.com/nysalor/items/9a95d91f2b97a08b96b0&quot;&gt;http://qiita.com/nysalor/items/9a95d91f2b97a08b96b0&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Wed, 08 Oct 2014 22:20:36 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450068003305</guid>
          
            <category>Rails gem</category>
          
            <category>検索</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsのテンプレートエンジンの比較 erb vs slim vs haml</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141001/1412169453</link>
          <description>&lt;p&gt;RailsでHTMLを作成するときによく使われるテンプレートエンジンの「ERB」「Haml」「Slim」について比較しました。&lt;br /&gt;
&lt;b style=&quot;color: #ff2600&quot;&gt;SlimやHamlである程度書いた後に、ERBで記載すると冗長が多すぎるのでめんどくさく感じるようになります。&lt;/b&gt;&lt;br /&gt;
是非、導入を検討してみて下さい。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;RailsのViewをどのテンプレートエンジンで書いたら良いか分からない方&lt;/li&gt;
&lt;li&gt;RailsのView作成をより生産的に実装したい方&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;バージョン&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;ERB(erubis) 2.7.0&lt;/li&gt;
&lt;li&gt;Haml 4.0.5&lt;/li&gt;
&lt;li&gt;Slim 2.0.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;オススメ&lt;/h3&gt;
    &lt;p&gt;&lt;b&gt;Slim &amp;gt; Haml &amp;gt;&amp;gt; ERB&lt;/b&gt;の順でオススメです。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;HTMLテンプレートエンジンの比較表&lt;/h3&gt;
    &lt;p&gt;理由としては、次の表を見てもらえば一目瞭然です。&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;名前&lt;/th&gt;
    &lt;th&gt;概要&lt;/th&gt;
    &lt;th&gt;メリット&lt;/th&gt;
    &lt;th&gt;デメリット&lt;/th&gt;
    &lt;th&gt;ファイル拡張子&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;ERB&lt;/td&gt;
    &lt;td&gt;Ruby標準付属であり、RailsではデフォルトのHTMLテンプレートエンジン&lt;/td&gt;
    &lt;td&gt;基本はHTMLに&lt;code&gt;&amp;lt; ... &amp;gt;と&amp;lt;= ... &amp;gt;&lt;/code&gt;でRubyコードを埋め込むだけなので、学習コストが低く理解しやすい&lt;/td&gt;
    &lt;td&gt;ほぼHTMLのため、冗長な箇所が多々ある&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;.erb&lt;/code&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Haml&lt;/td&gt;
    &lt;td&gt;タグで階層構造を表すことにより、&lt;code&gt;&amp;lt;&lt;/code&gt;や&lt;code&gt;&amp;gt;&lt;/code&gt;や閉じタグなどを省略できるHTMLテンプレートエンジン&lt;/td&gt;
    &lt;td&gt;HTMLコードの記述量が2,3割減り、ERBに比べ生産的。学習コストもそんなに高くない&lt;/td&gt;
    &lt;td&gt;テキストや属性の記載方法などに若干のクセがある&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;.haml&lt;/code&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Slim&lt;/td&gt;
    &lt;td&gt;Hamlとほぼ同じ。Hamlよりほんの少しシンプルなHTMLテンプレートエンジン&lt;/td&gt;
    &lt;td&gt;Hamlと同様。また、ERBよりパフォーマンスが良い&lt;/td&gt;
    &lt;td&gt;Hamlと同様&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;.slim&lt;/code&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;HTMLテンプレートエンジンのソースコードの比較&lt;/h3&gt;
    &lt;p&gt;次のHTMLを作成するためのソースコードをそれぞれ記載してみます。&lt;br /&gt;
HamlとSlimのコードはほぼ同じであり、ERBに比べ、コード量は短いと思います。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;H1 タイトル&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;0: リスト&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;1: リスト&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;2: リスト&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;#&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synUnderlined&quot;&gt;リンク&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;ERBのコードです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&amp;lt;h1 id=&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&amp;gt;&lt;span class=&quot;synType&quot;&gt;H1&lt;/span&gt; タイトル&amp;lt;/h1&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;ul&amp;gt;
  &amp;lt;% &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;.times &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;i&lt;/span&gt;| %&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;%= i %&amp;gt;: リスト&amp;lt;/li&amp;gt;
  &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt; %&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;a href=&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&amp;gt;リンク&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;p&gt;Hamlのコードです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;%h1&lt;span class=&quot;synComment&quot;&gt;#title H1 タイトル&lt;/span&gt;
%br
%ul
  - &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;.times &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;i&lt;/span&gt;|
    %li &lt;span class=&quot;synComment&quot;&gt;#{i}: リスト&lt;/span&gt;

%a{ &lt;span class=&quot;synConstant&quot;&gt;href&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; } リンク
&lt;/pre&gt;&lt;p&gt;Slimのコードです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;h1&lt;span class=&quot;synComment&quot;&gt;#title H1 タイトル&lt;/span&gt;
br
ul
  - &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;.times &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;i&lt;/span&gt;|
    li &lt;span class=&quot;synComment&quot;&gt;#{i}: リスト&lt;/span&gt;

a(href=&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;) リンク
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;チュートリアル&lt;/h3&gt;
    &lt;p&gt;SlimやHamlをやってみたいという方は、是非下記のチュートリアル記事を読んで、実際に手を動かしてみて下さい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20140929/1411997071&quot; target=&quot;_blank&quot;&gt;Slim入門&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/entry/20141001/1412097051&quot; target=&quot;_blank&quot;&gt;Haml入門&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;SlimやHamlである程度書いた後に、ERBで記載すると冗長が多すぎるのでめんどくさく感じるようになります。&lt;br /&gt;
是非使ってみてください。&lt;/p&gt;&lt;p&gt;以上です。&lt;br /&gt;
質問や誤りなどがある場合は、気軽にコメント下さい。できるだけ早く反応します。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Wed, 01 Oct 2014 22:17:33 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450066771841</guid>
          
            <category>Rails View</category>
          
            <category>Rails gem</category>
          
        </item>
      
        <item>
          <title>RailsのHTMLテンプレートエンジン Haml入門</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20141001/1412097051</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;はじめに&lt;/h3&gt;
    &lt;p&gt;RailsではView（HTML出力）のためには標準ではERB(.erb)を使用しています。&lt;br /&gt;
しかし、erbは汎用的なテンプレートエンジンであり、HTML以外のファイルにRubyコードを&lt;br /&gt;
埋め込めることができるます。&lt;br /&gt;
そのため、HTML作成という点で見ると、いくらか冗長な箇所があります。&lt;/p&gt;&lt;p&gt;そのため、より生産的にHTMLを作成するために、Railsでは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Haml （拡張子 xxx.html.haml）&lt;/li&gt;
&lt;li&gt;Slim （拡張子 xxx.html.slim）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;という２つのHTML用のテンプレートエンジンがよく使われます。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、今回はタイトルからも分かるように&lt;b&gt;Haml&lt;/b&gt;について説明します。&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;b&gt;Slim&lt;/b&gt;については、&lt;a href=&quot;/entry/20140929/1411997071&quot;&gt;こちら&lt;/a&gt;から参照ください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Hamlは「マークアプは美しくあるべき」という原則に基づいて開発されました。&lt;br /&gt;
Hamlを使うことにより、Viewファイルを「綺麗に」「読みやすく」「生産的に」作成することができます。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;haml  4.0.5&lt;/li&gt;
&lt;li&gt;haml-rails 0.5.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#haml-basic&quot;&gt;Hamlの基礎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#haml-introduce-to-haml&quot;&gt;RailsにHamlの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#haml-translate-to-haml-from-erb&quot;&gt;erbをhamlに書き換えていく&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#haml-refarence-sheet&quot;&gt;おまけ：Hamlのリファレンスシート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#haml-tools-erb2haml&quot;&gt;おまけ：HTMLやerbをhamlに変換するツール: erb2haml&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;haml-basic&quot;&gt;1. Hamlの基礎&lt;/h3&gt;Hamlはシンプルな記法で難しくはないので、実際にerbとhamlのソースコードを比べて、１つ１つ説明していきます。&lt;br /&gt;
Hamlの拡張子は、&lt;code&gt;.haml&lt;/code&gt;にする必要があります。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/layouts/application.html.erb
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;SlimTest&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; stylesheet_link_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;all&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; javascript_include_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; csrf_meta_tags&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;title logo&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Slim Test&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; yield&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/layouts/application.html.haml&lt;/span&gt;
!!! &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;
%html
  %head
    %title &lt;span class=&quot;synType&quot;&gt;HamlTest&lt;/span&gt;
    = stylesheet_link_tag    &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;media&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;data-turbolinks-track&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    = javascript_include_tag &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;data-turbolinks-track&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    = csrf_meta_tags

  %body

  = &lt;span class=&quot;synStatement&quot;&gt;yield&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Hamlの簡単な覚え方&lt;/h4&gt;
    &lt;p&gt;上記のerbとslimを見比べながら、下記のルールを見て下さい。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;、&amp;gt;、&amp;lt;%、%&amp;gt;&lt;/code&gt;をタグから削除し。&lt;code&gt;&amp;&lt;/code&gt;をタグの直前につける。また、閉じタグは全て削除する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;each、if&lt;/code&gt;などのロジック部分の先頭には、&lt;code&gt;-&lt;/code&gt;を記載する（&lt;code&gt;end&lt;/code&gt;は必要ない)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;%= ... &amp;gt;&lt;/code&gt;は&lt;code&gt;=&lt;/code&gt;にする&lt;/li&gt;
&lt;li&gt;class属性やid属性は、&lt;code&gt;%p.fields&lt;/code&gt;や&lt;code&gt;%p#contents&lt;/code&gt;などにする。タグがdivのときはdivを省略し&lt;code&gt;#content&lt;/code&gt;と記載できる&lt;/li&gt;
&lt;li&gt;class属性やid属性以外のhrefやimgなどの属性を追加したい場合は、ハッシュで記載する（例：&lt;code&gt;%a{:href =&gt; &quot;#&quot;} リンクテキスト&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;コメントは、&lt;code&gt;/ このコメントはHTMLに変換後に表示されない&lt;/code&gt;で記載する&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;haml-introduce-to-haml&quot;&gt;2. RailsにHamlの導入&lt;/h3&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Railsプロジェクトの作成&lt;/h4&gt;
    &lt;p&gt;まず、いつも通りRailsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails new haml_test&lt;/pre&gt;&lt;p&gt;次に、商品(Product)のソース一式をScaffoldを使って作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ cd haml_test
$ rails g scaffold Product name:string description:text price:integer discontinued:boolean&lt;/pre&gt;&lt;p&gt;DBマイグレートをします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake db:migrate&lt;/pre&gt;&lt;p&gt;これで、商品(Product)の一覧表示、作成、更新、削除ができました。&lt;br /&gt;
&lt;code&gt;$ rails server&lt;/code&gt;でローカルのサーバを起動していくつかデータを入力してみました。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929214513.png&quot; alt=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;HamlをRailsに導入&lt;/h4&gt;
    &lt;p&gt;では、実際にRailsにHamlを導入していきましょう。&lt;br /&gt;
&lt;code&gt;Gemfile&lt;/code&gt;に下記を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;haml-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;その後、Hamlをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;これで、RailsにHamlが導入されたので、以降は&lt;code&gt;xxx.html.haml&lt;/code&gt;という拡張子でViewファイルを作成することで&lt;b&gt;Haml&lt;/b&gt;としてRailsが読み込んでくれます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;b&gt;ERB&lt;/b&gt;と&lt;b&gt;Haml&lt;/b&gt;で同名のファイルがある場合は、&lt;b&gt;ERB&lt;/b&gt;が優先的に読み込まれるので、ERBファイルは削除して下さい。例えば、&lt;code&gt;index.html.erb&lt;/code&gt;と&lt;code&gt;index.html.haml&lt;/code&gt;がある場合、&lt;code&gt;index.html.erb&lt;/code&gt;が読み込まれてしまうため、削除して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;haml-rails gem をインストール後に、rails generaterでscaffoldやcontrollerを作成すると、Viewファイルは全て&lt;code&gt;.erb&lt;/code&gt;の代わりに&lt;code&gt;.haml&lt;/code&gt;で作成されます。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;haml-translate-to-haml-from-erb&quot;&gt;3. erbをhamlに書き換えていく&lt;/h3&gt;では、Scaffoldで作成した&lt;code&gt;.erb&lt;/code&gt;を１画面ずつ&lt;code&gt;.haml&lt;/code&gt;に変更していきます。&lt;br /&gt;
変更後のHamlファイルを見る前に、自分で上記の「1. Hamlの基礎」を確認しながら手を動かしながらHamlファイルを作成することにより、Hamlの書き方に慣れるのでおすすめです。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;一覧画面&lt;/h4&gt;
    &lt;p&gt;まずは、一覧画面を変更します。&lt;br /&gt;
&lt;code&gt;index.html.erb&lt;/code&gt;は次のようになっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/index.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Listing products&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Description&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Price&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Discontinued&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @products.each do |product| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.description&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.price&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.discontinued&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, product %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_product_path(product) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, product, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Are you sure?&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;New Product&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_product_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;index.html.slim&lt;/code&gt;を新しく作成し、これを１つ１つ直していきましょう。&lt;/p&gt;&lt;p&gt;下記が変換後の一覧画面です。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;Hamlに変換するポイント&lt;/h5&gt;
    
&lt;ul&gt;
&lt;li&gt;h1, tableなどのタグの&amp;lt;と&amp;gt;を削除し、&lt;code&gt;%&lt;/code&gt;をタグに付け、閉じタグは削除する&lt;/li&gt;
&lt;li&gt;id属性、class属性、その他の属性を追加する場合は、&lt;code&gt;{}&lt;/code&gt;でハッシュ形式でタグの直後に記載する&lt;/li&gt;
&lt;li&gt;ifやeachなどロジック部分の行には、先頭に&lt;code&gt;-&lt;/code&gt;を記載する&lt;/li&gt;
&lt;li&gt;上記をインデントに気をつけながら記載する&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;では、Hamlファイルを見てみましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/index.html.haml&lt;/span&gt;
%h1 &lt;span class=&quot;synType&quot;&gt;Listing&lt;/span&gt; products

%table
  %thead
    %tr
      %th &lt;span class=&quot;synType&quot;&gt;Name&lt;/span&gt;
      %th &lt;span class=&quot;synType&quot;&gt;Description&lt;/span&gt;
      %th &lt;span class=&quot;synType&quot;&gt;Price&lt;/span&gt;
      %th &lt;span class=&quot;synType&quot;&gt;Discontinued&lt;/span&gt;
      %th{&lt;span class=&quot;synConstant&quot;&gt;:colspan&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;}

  %tbody
    - &lt;span class=&quot;synIdentifier&quot;&gt;@products&lt;/span&gt;.each &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;product&lt;/span&gt;|
      %tr
        %td= product.name
        %td= product.description
        %td= product.price
        %td= product.discontinued
        %td= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, product
        %td= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Edit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, edit_product_path(product)
        %td= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Destroy&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, product, &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:delete&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;data&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;confirm&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Are you sure?&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }

%br

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;New Product&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, new_product_path
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;.erb&lt;/code&gt;ファイルが存在するとそちらが優先的に表示されてしまうので、削除します。&lt;br /&gt;
サーバーを再起動しなおして、一覧画面を確認してみましょう。&lt;br /&gt;
表示は変わっていませんね :)&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929214513.png&quot; alt=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;新規/編集画面&lt;/h4&gt;
    &lt;p&gt;次は、新規、編集画面です。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/new.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;New product&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, products_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/edit.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Editing product&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, @product %&amp;gt;&lt;/span&gt; |
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, products_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/_form.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(@product)&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @product.errors.any? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error_explanation&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; pluralize(@product.errors.count,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;) %&amp;gt;&lt;/span&gt; prohibited this product from being saved:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @product.errors.full_messages.each do |message| %&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; message&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :description %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :description %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.number_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :discontinued %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.check_box&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :discontinued %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;actions&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
ではHamlに変換します。&lt;br /&gt;
ポイントは、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プレインテキストは、&lt;code&gt;\&lt;/code&gt;をプレインテキストの前後に記載すr&lt;/li&gt;
&lt;li&gt;文字列は&lt;code&gt;&quot;{...}&quot;&lt;/code&gt;で記載する&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/new.html.haml&lt;/span&gt;
%h1 &lt;span class=&quot;synType&quot;&gt;New&lt;/span&gt; product

= render &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Back&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, products_path
&lt;/pre&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/edit.html.haml&lt;/span&gt;
%h1 &lt;span class=&quot;synType&quot;&gt;Editing&lt;/span&gt; product

= render &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;
\|
= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Back&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, products_path
&lt;/pre&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/_form.html.haml&lt;/span&gt;
= form_for(&lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;f&lt;/span&gt;|
  - &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.errors.any?
    &lt;span class=&quot;synComment&quot;&gt;#error_explanation&lt;/span&gt;
      %h2= &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;pluralize(&lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.errors.count, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; prohibited this product from being saved:&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

      %ul
        - &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.errors.full_messages.each &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;message&lt;/span&gt;|
          %li= message

  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;
    %br
    = f.text_field &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;
  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;
    %br
    = f.text_area &lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;
  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:price&lt;/span&gt;
    %br
    = f.number_field &lt;span class=&quot;synConstant&quot;&gt;:price&lt;/span&gt;
  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:discontinued&lt;/span&gt;
    %br
    = f.check_box &lt;span class=&quot;synConstant&quot;&gt;:discontinued&lt;/span&gt;

  .actions
    = f.submit
&lt;/pre&gt;&lt;p&gt;では、新規画面を開いてみましょう。&lt;br /&gt;
上手く行っていますね。順調です。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929220337.png&quot; alt=&quot;f:id:nipe880324:20140929220337p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929220337p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;詳細画面&lt;/h4&gt;
    &lt;p&gt;では、この調子で最後に詳細画面を変換していきましょう。&lt;br /&gt;
変換にも慣れてきたと思います。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/show.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; notice&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Description:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.description&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Price:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.price&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Discontinued:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.discontinued&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_product_path(@product) %&amp;gt;&lt;/span&gt; |
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, products_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Hamlへの変換のポイントは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id属性は&lt;code&gt;#&lt;/code&gt;、class属性は&lt;code&gt;.&lt;/code&gt;で記載し、タグの直後に記載する（例：&lt;code&gt;%p.error&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;や&lt;code&gt;.&lt;/code&gt;の前にタグ名を記載しない場合（例： &lt;code&gt;.disable&lt;/code&gt;）は、div要素として変換されます。&lt;/li&gt;
&lt;li&gt;複数のクラスを記載したい場合は、&lt;code&gt;.&lt;/code&gt;でつなげる（例：&lt;code&gt;input.btn.btn-default.btn-sm&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/show.html.haml&lt;/span&gt;
%p&lt;span class=&quot;synComment&quot;&gt;#notice= notice&lt;/span&gt;

%p
  %strong &lt;span class=&quot;synType&quot;&gt;Name&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.name

%p
  %strong &lt;span class=&quot;synType&quot;&gt;Description&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.description

%p
  %strong &lt;span class=&quot;synType&quot;&gt;Price&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.price

%p
  %strong &lt;span class=&quot;synType&quot;&gt;Discontinued&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.discontinued

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Edit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, edit_product_path(&lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;)
\|
= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Back&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, products_path
&lt;/pre&gt;&lt;p&gt;では、詳細画面を見てみましょう。&lt;br /&gt;
これで、一通りの画面をSlimにすることができました :)&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929220852.png&quot; alt=&quot;f:id:nipe880324:20140929220852p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929220852p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;haml-refarence-sheet&quot;&gt;4. おまけ：Hamlのリファレンスシート&lt;/h3&gt;Hamlの変換ルールで困った場合は次のURLを参照して下さい。&lt;br /&gt;
&lt;a href=&quot;http://haml.info/docs/yardoc/file.REFERENCE.html&quot; target=&quot;_blank&quot;&gt;http://haml.info/docs/yardoc/file.REFERENCE.html&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;haml-tools-erb2haml&quot;&gt;5. おまけ：ERBをHamlに変換するツール: erb2haml&lt;/h3&gt;また、既にerbで多くのViewファイルを作成してしまっている場合は、erbをhamlに変換する&lt;b&gt;erb2haml&lt;/b&gt;というツールがあります。&lt;br /&gt;
&lt;a href=&quot;http://codenote.net/ruby/rails/1009.html&quot; target=&quot;_blank&quot;&gt;erb2hamlの使い方&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;ちなみに、ツールは万能でなく、上手くHamlに変換できてない箇所が存在する可能性もあるので、全ての画面に対してレイアウト崩れのチェックはしてください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://haml.info/&quot; target=&quot;_blank&quot;&gt;Haml 公式ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;以上です。&lt;br /&gt;
よく分からない箇所や誤りなどがありましたら、コメントの記入をお願いします。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Wed, 01 Oct 2014 02:10:51 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450066704287</guid>
          
            <category>Rails View</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>早い、簡単、生産的!? RailsのHTMLテンプレートエンジン Slim入門</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140929/1411997071</link>
          <description>
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;はじめに&lt;/h3&gt;
    &lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;ではView（HTML出力）のためには標準ではERB(.erb)を使用しています。&lt;br /&gt;
しかし、erbは汎用的なテンプレートエンジンであり、HTML以外にも様々なファイルに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt;コードを&lt;br /&gt;
埋め込めることができるため、HTMLを作成するにおいていくらか冗長な箇所があります。&lt;/p&gt;&lt;p&gt;そのため、より生産的にHTMLを作成するために、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;では&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Slim （&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2&quot;&gt;拡張子&lt;/a&gt; xxx.html.slim）&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Haml&quot;&gt;Haml&lt;/a&gt; （&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2&quot;&gt;拡張子&lt;/a&gt; xxx.html.&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/haml&quot;&gt;haml&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;という２つのHTML用のテンプレートエンジンがよく使われます。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、今回はタイトルからも分かるように&lt;b&gt;Slim&lt;/b&gt;について説明します。&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Haml&quot;&gt;Haml&lt;/a&gt;については、&lt;a href=&quot;/entry/20141001/1412097051&quot; target=&quot;_blank&quot;&gt;こちら&lt;/a&gt;を参照して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Slimの特徴としては、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;タブによりHTMLのタグ構造を表すので、必要最低限のコードだけで良いのでコーディング時間が減る&lt;/li&gt;
&lt;li&gt;デフォルトでHTMLエスケープをするので安全&lt;/li&gt;
&lt;li&gt;erbに比べて、スピードが速い&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;※ほぼ&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Haml&quot;&gt;Haml&lt;/a&gt;と同じです。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt; 4.1&lt;/li&gt;
&lt;li&gt;slim 2.0.3&lt;/li&gt;
&lt;li&gt;slim-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rails&quot;&gt;rails&lt;/a&gt; 2.1.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#slim-basic&quot;&gt;Slimの基礎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#slim-introduce-to-slim&quot;&gt;RailsにSlimの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#slim-translate-to-slim-from-erb&quot;&gt;erbをslimに書き換えていく&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#slim-refarence-sheet&quot;&gt;おまけ：Slimのリファレンスシート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#slim-tools-html2slim&quot;&gt;おまけ：HTMLやerbをSlimに変換するツール: html2slim&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;slim-basic&quot;&gt;1. Slimの基礎&lt;/h3&gt;Slimはシンプルな記法で難しくはないので、実際にerbとslimの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;を比べて、１つ１つ説明していきます。&lt;br /&gt;
Slimの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2&quot;&gt;拡張子&lt;/a&gt;は、&lt;code&gt;.slim&lt;/code&gt;にする必要があります。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/layouts/application.html.erb
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;SlimTest&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; stylesheet_link_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;all&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; javascript_include_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; csrf_meta_tags&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;title logo&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Slim Test&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; yield&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/layouts/application.html.slim&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;DOCTYPE&lt;/span&gt;
html
  head
    title &lt;span class=&quot;synType&quot;&gt;SlimTest&lt;/span&gt;
    = stylesheet_link_tag    &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;media&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;data-turbolinks-track&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    = javascript_include_tag &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;data-turbolinks-track&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    = csrf_meta_tags

  body

    header&lt;span class=&quot;synComment&quot;&gt;#header&lt;/span&gt;
      h1.title.logo &lt;span class=&quot;synType&quot;&gt;Slim&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Test&lt;/span&gt;

    == &lt;span class=&quot;synStatement&quot;&gt;yield&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Slimの簡単な覚え方&lt;/h4&gt;
    &lt;p&gt;上記のerbとslimを見比べながら、下記のルールを見て下さい。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;、&amp;gt;、&amp;lt;%、%&amp;gt;&lt;/code&gt;などのタグを削除する。閉じタグは全て削除する。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;each、if&lt;/code&gt;などのロジック部分の先頭に&lt;code&gt;-&lt;/code&gt;を記載する。（&lt;code&gt;end&lt;/code&gt;は必要ない)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;%= ... &amp;gt;&lt;/code&gt;は&lt;code&gt;=&lt;/code&gt;にする。&lt;code&gt;yield&lt;/code&gt;と&lt;code&gt;render&lt;/code&gt;のときは、&lt;code&gt;==&lt;/code&gt;にする。&lt;/li&gt;
&lt;li&gt;class属性やid属性は、&lt;code&gt;p.fields&lt;/code&gt;や&lt;code&gt;p#contents&lt;/code&gt;などにする。タグがdivのときはdivを省略し&lt;code&gt;#content&lt;/code&gt;と記載する。&lt;/li&gt;
&lt;li&gt;コメントは、&lt;code&gt;/ このコメントはHTMLに変換後に表示されない&lt;/code&gt;か&lt;code&gt;/! このコメントはHTMLに変換後にコメントになる&lt;/code&gt;で記載する。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;slim-introduce-to-slim&quot;&gt;2. &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;にSlimの導入&lt;/h3&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;プロジェクトの作成&lt;/h4&gt;
    &lt;p&gt;まず、いつも通り&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;プロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails new slim_test&lt;/pre&gt;&lt;p&gt;次に、商品(Product)のソース一式をScaffoldを使って作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ cd slim_test
$ rails g scaffold Product name:string description:text price:integer discontinued:boolean&lt;/pre&gt;&lt;p&gt;DBマイグレートをします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake db:migrate&lt;/pre&gt;&lt;p&gt;これで、商品(Product)の一覧表示、作成、更新、削除ができました。&lt;br /&gt;
&lt;code&gt;$ rails server&lt;/code&gt;でローカルのサーバを起動していくつかデータを入力してみました。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929214513.png&quot; alt=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Slimを&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;に導入&lt;/h4&gt;
    &lt;p&gt;では、実際に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;にSlimを導入していきましょう。&lt;br /&gt;
&lt;code&gt;Gemfile&lt;/code&gt;に下記を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;slim-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;その後、Slimをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;これで、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;にSlimが導入されたので、以降は&lt;code&gt;xxx.html.slim&lt;/code&gt;という&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2&quot;&gt;拡張子&lt;/a&gt;でファイルを作成することで&lt;b&gt;Slim&lt;/b&gt;として&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;が読み込んでくれます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;b&gt;ERB&lt;/b&gt;と&lt;b&gt;Slim&lt;/b&gt;で同名のファイルがある場合は、&lt;b&gt;ERB&lt;/b&gt;が読み込まれるので、ERBファイルは削除して下さい。例えば、&lt;code&gt;index.html.erb&lt;/code&gt;と&lt;code&gt;index.html.slim&lt;/code&gt;がある場合、&lt;code&gt;index.html.erb&lt;/code&gt;が読み込まれてしまうため、削除して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;slim-&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rails&quot;&gt;rails&lt;/a&gt; gem をインストール後に、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/rails&quot;&gt;rails&lt;/a&gt; generaterでscaffoldやcontrollerを作成すると、ビューファイルは全て&lt;code&gt;.erb&lt;/code&gt;の代わりに&lt;code&gt;.slim&lt;/code&gt;で作成されます。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;slim-translate-to-slim-from-erb&quot;&gt;2. erbをslimに書き換えていく&lt;/h3&gt;では、Scaffoldで作成した&lt;code&gt;.erb&lt;/code&gt;を１画面ずつ&lt;code&gt;.slim&lt;/code&gt;に変更していきます。&lt;br /&gt;
変更後のSlimファイルを見る前に、自分で上記の「1. Slimの基礎」を確認しながら手を動かしながらSlimファイルを作成することにより、Slimの書き方に慣れるのでおすすめです。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;一覧画面&lt;/h4&gt;
    &lt;p&gt;まずは、一覧画面を変更します。&lt;br /&gt;
&lt;code&gt;index.html.erb&lt;/code&gt;は次のようになっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/index.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Listing products&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Description&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Price&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Discontinued&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @products.each do |product| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.description&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.price&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; product.discontinued&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, product %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_product_path(product) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, product, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Are you sure?&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;New Product&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_product_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;index.html.slim&lt;/code&gt;を新しく作成し、これを１つ１つ直していきましょう。&lt;/p&gt;&lt;p&gt;下記が変換後の一覧画面です。&lt;br /&gt;
基本は、&lt;code&gt;&amp;lt;と&amp;gt;&lt;/code&gt;を削除し、&lt;code&gt;each&lt;/code&gt;などのロジック部分は&lt;code&gt;-&lt;/code&gt;をつける、閉じタグは削除です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/index.html.slim&lt;/span&gt;
h1 &lt;span class=&quot;synType&quot;&gt;Listing&lt;/span&gt; products

table
  thead
    tr
      th &lt;span class=&quot;synType&quot;&gt;Name&lt;/span&gt;
      th &lt;span class=&quot;synType&quot;&gt;Description&lt;/span&gt;
      th &lt;span class=&quot;synType&quot;&gt;Price&lt;/span&gt;&amp;lt;
      th &lt;span class=&quot;synType&quot;&gt;Discontinued&lt;/span&gt;
      th colspan=&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

  tbody
    - &lt;span class=&quot;synIdentifier&quot;&gt;@products&lt;/span&gt;.each &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;product&lt;/span&gt;|
      tr
        td = product.name
        td = product.description
        td = product.price
        td = product.discontinued
        td = link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, product
        td = link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Edit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, edit_product_path(product)
        td = link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Destroy&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, product, &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:delete&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;data&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;confirm&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Are you sure?&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }

br

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;New Product&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, new_product_path
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;.erb&lt;/code&gt;ファイルが存在するとそちらが表示されてしまうので、ファイル名を変更するか削除してから、&lt;br /&gt;
サーバーを再起動しなおして、一覧画面を確認してみましょう。&lt;br /&gt;
表示は変わっていませんね。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929214513.png&quot; alt=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929214513p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;新規/編集画面&lt;/h4&gt;
    &lt;p&gt;次は、新規、編集画面です。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/new.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;New product&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, products_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/edit.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Editing product&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Show&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, @product %&amp;gt;&lt;/span&gt; |
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, products_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/_form.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(@product)&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @product.errors.any? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error_explanation&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; pluralize(@product.errors.count,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;) %&amp;gt;&lt;/span&gt; prohibited this product from being saved:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @product.errors.full_messages.each do |message| %&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; message&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :description %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :description %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.number_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :price %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;field&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :discontinued %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.check_box&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :discontinued %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;actions&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
ではSlimに変換します。&lt;br /&gt;
&lt;code&gt;render&lt;/code&gt;や&lt;code&gt;yeild&lt;/code&gt;は、&lt;code&gt;=&lt;/code&gt;ではなく、&lt;code&gt;==&lt;/code&gt;です。&lt;br /&gt;
また、文字列(今回は&lt;b&gt;|&lt;/b&gt;)を表示するには、&lt;b&gt;&#39;&lt;/b&gt;が必要です。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/new.html.slim&lt;/span&gt;
h1 &lt;span class=&quot;synType&quot;&gt;New&lt;/span&gt; product

== render &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Back&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, products_path
&lt;/pre&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/edit.html.slim&lt;/span&gt;
h1 &lt;span class=&quot;synType&quot;&gt;Editing&lt;/span&gt; product

== render &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;
&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;= link_to &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;Back&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;, products_path&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/_form.html.slim&lt;/span&gt;
= form_for(&lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;f&lt;/span&gt;|
  - &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.errors.any?
    &lt;span class=&quot;synComment&quot;&gt;#error_explanation&lt;/span&gt;
      h2 = &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;pluralize(&lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.errors.count, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; prohibited this product from being saved:&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

      ul
        - &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.errors.full_messages.each &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;message&lt;/span&gt;|
          li = message

  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;
    br
    = f.text_field &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;
  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;
    br
    = f.text_area &lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;
  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:price&lt;/span&gt;
    br
    = f.number_field &lt;span class=&quot;synConstant&quot;&gt;:price&lt;/span&gt;
  .field
    = f.label &lt;span class=&quot;synConstant&quot;&gt;:discontinued&lt;/span&gt;
    br
    = f.check_box &lt;span class=&quot;synConstant&quot;&gt;:discontinued&lt;/span&gt;
  .actions
    = f.submit
&lt;/pre&gt;&lt;p&gt;では、新規画面を開いてみましょう。&lt;br /&gt;
上手く行っていますね。順調です。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929220337.png&quot; alt=&quot;f:id:nipe880324:20140929220337p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929220337p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;詳細画面&lt;/h4&gt;
    &lt;p&gt;では、この調子で詳細画面を変換していきましょう。&lt;br /&gt;
ほぼほぼ慣れてきたと思います。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/products/show.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; notice&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Name:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Description:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.description&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Price:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.price&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Discontinued:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @product.discontinued&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_product_path(@product) %&amp;gt;&lt;/span&gt; |
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;Back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, products_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Slimへの変換のポイント&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id属性は&lt;code&gt;#&lt;/code&gt;、class属性は&lt;code&gt;.&lt;/code&gt;で始めることがコツです&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;や&lt;code&gt;.&lt;/code&gt;の前にタグ名を記載しない場合（例： &lt;code&gt;.disable&lt;/code&gt;）は、div要素として変換されます。&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4&quot;&gt;複数&lt;/a&gt;のクラスを記載したい場合は、&lt;code&gt;.&lt;/code&gt;でつなげる（例：&lt;code&gt;input.btn.btn-default.btn-sm&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/products/show.html.haml&lt;/span&gt;
p&lt;span class=&quot;synComment&quot;&gt;#notice = notice&lt;/span&gt;

p
  strong &lt;span class=&quot;synType&quot;&gt;Name&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.name

p
  strong &lt;span class=&quot;synType&quot;&gt;Description&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.description

p
  strong &lt;span class=&quot;synType&quot;&gt;Price&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.price

p
  strong &lt;span class=&quot;synType&quot;&gt;Discontinued&lt;/span&gt;:
  = &lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;.discontinued

= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Edit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, edit_product_path(&lt;span class=&quot;synIdentifier&quot;&gt;@product&lt;/span&gt;)
&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;= link_to &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;Back&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;, products_path&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、詳細画面を見てみましょう。&lt;br /&gt;
これで、一通りの画面をSlimにすることができました :)&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140929/20140929220852.png&quot; alt=&quot;f:id:nipe880324:20140929220852p:plain:w480&quot; title=&quot;f:id:nipe880324:20140929220852p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;slim-refarence-sheet&quot;&gt;4. おまけ：Slimのリファレンスシート&lt;/h3&gt;Slimの変換ルールで困った場合は次のURLを参照して下さい。&lt;br /&gt;
&lt;a href=&quot;http://www.e2esound.com/wp/2013/07/22/21_tips_to_use_slim_for_markup_engineer/#sec16&quot; target=&quot;_blank&quot;&gt;http://www.e2esound.com/wp/2013/07/22/21_tips_to_use_slim_for_markup_engineer/#sec16&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;slim-tools-html2slim&quot;&gt;5. おまけ：HTMLやerbをSlimに変換する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB&quot;&gt;ツール&lt;/a&gt;: html2slim&lt;/h3&gt;また、既にerbで多くのViewファイルを作成してしまっている場合は、erbをslimに変換する&lt;b&gt;html2slim&lt;/b&gt;という&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB&quot;&gt;ツール&lt;/a&gt;があります。&lt;br /&gt;
&lt;a href=&quot;http://www.mocchiblog.com/?p=14680&quot; target=&quot;_blank&quot;&gt;html2slimの使い方&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;ちなみに、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB&quot;&gt;ツール&lt;/a&gt;は万能ではなく、上手くSlimに変換できてない箇所がある可能性もあるので、全ての画面に対してレイアウト崩れのチェックはしてください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://rdoc.info/gems/slim/frames&quot; target=&quot;_blank&quot;&gt;Slim 公式ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/yterajima/items/53fd0387279510ff082a&quot; target=&quot;_blank&quot;&gt;Slimの入門記事&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;以上です。&lt;br /&gt;
よく分からない箇所や誤りなどがありましたら、コメントの記入をお願いします。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Mon, 29 Sep 2014 22:24:31 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815731681786</guid>
          
            <category>Rails View</category>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsで帳票作成ツールのThinReportsを使ってPDFを作成</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140909/1410241835</link>
          <description>&lt;p&gt;ThinReportsとは、株式会社マツケイが開発する日本製のRubyで書かれたOSSの帳票作成ツールです。&lt;br /&gt;
GPLやMITライセンスのため商用利用が可能です。&lt;/p&gt;&lt;p&gt;ThinReportsEditorという専用のレイアウトエディターでPDFのひな形を作成し、RubyやRailsでそのひな形を読み込み、動的な値を設定し、表示するという流れになっています。&lt;/p&gt;&lt;p&gt;今回は、&lt;b&gt;Railsで ThinReport を使って注文票のPDFを作成する&lt;/b&gt;手順を説明します。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233932.png&quot; alt=&quot;f:id:nipe880324:20140907233932p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233932p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;br /&gt;
他にもPDFを作成するGemがあり、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140906/1409995011&quot; target=&quot;_blank&quot;&gt;Ruby/RailsのPDF作成Gemまとめ &lt;/a&gt;」でまとめています。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Mac OS X    10.9.4&lt;/li&gt;
&lt;li&gt;Ruby        2.1.2&lt;/li&gt;
&lt;li&gt;Rails       4.1&lt;/li&gt;
&lt;li&gt;ThinReports Editor    0.7.7.2&lt;/li&gt;
&lt;li&gt;ThinReports Generator 0.7.7&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#thinreports-preparation&quot;&gt;準備（注文詳細画面の作成）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#thinreports-getting-started&quot;&gt;ThinReportsの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#thinreports-view-dynamic-data&quot;&gt;ThinReports で動的データを表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#thinreports-view-table&quot;&gt;ThinReports でテーブルを表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#thinreports-conclusion&quot;&gt;結論&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;thinreports-preparation&quot;&gt;1. 準備（注文詳細画面の作成）&lt;/h3&gt;まず、注文書のPDFを作成するために簡単な注文詳細画面を作成しましょう。&lt;br /&gt;
作成する画面は次の画面です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906204302.png&quot; alt=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;手順は&lt;a href=&quot;http://ruby-rails.hatenadiary.com/#prawn-preparation&quot; target=&quot;_blank&quot;&gt;こちら&lt;/a&gt;を参照してください。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;thinreports-getting-started&quot;&gt;2. ThinReportsの導入&lt;/h3&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;ThinReports Editor のインストール&lt;/h4&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.thinreports.org/download/&quot; target=&quot;_blank&quot;&gt;ダウンロードページ&lt;/a&gt;からお使いのOSに合わせた&lt;b&gt;ThinReports Editor&lt;/b&gt;をダウンロードして、インストールします。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;ThinReports Generator のRailsへの導入&lt;/h4&gt;
    &lt;p&gt;まず、「1. 準備（注文詳細画面の作成」で作成したRailsプロジェクトの&lt;code&gt;Gemfile&lt;/code&gt;に下記を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
...
&lt;span class=&quot;synComment&quot;&gt;# For PDF Generation&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;thinreports&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;ThinReportsをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;ThinReports Editor で帳票テンプレートの作成&lt;/h4&gt;
    &lt;p&gt;作成する帳票のイメージを確認するために、Webの注文詳細画面を確認してみましょう。&lt;br /&gt;
このような画面をステップバイステップで作っていきます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906204302.png&quot; alt=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;注文番号と注文日の表示、テーブルの表示がありますが、まずは、&quot;Order&quot;という静的な文字のみを表示しましょう。&lt;/p&gt;&lt;p&gt;ThinReports Editor を起動し、ツールバーの[新規作成]から新しいレイアウトを作成します。&lt;br /&gt;
ページタイトルには[order_pdf]、用紙設定に[A4]を設定します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233142.png&quot; alt=&quot;f:id:nipe880324:20140907233142p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233142p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;では、ThinReports Editor で帳票のテンプレートを作成していきます。&lt;br /&gt;
左側の[A](テキストツール)を選択し、PDFをクリックするとダイアログが表示されます。&lt;br /&gt;
ダイアログ内に &quot;Order&quot; と入力し、[OK]ボタンを押します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233204.png&quot; alt=&quot;f:id:nipe880324:20140907233204p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233204p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;フォントやサイズ、位置などの設定は、右側の[PROPERTY]でできます。&lt;br /&gt;
フォントのサイズや位置などを次の画像の通りに変更してください。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233214.png&quot; alt=&quot;f:id:nipe880324:20140907233214p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233214p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;左側の矢印マークを選択することで、PDF上に作成したオブジェクトの移動ができます。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;次に、左側の[/]を選択し、線を追加します。[Shift]を押しながら作成するとまっすぐの線が引けます。&lt;br /&gt;
この横線も[PROPERTY]を次のように変更してください。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233231.png&quot; alt=&quot;f:id:nipe880324:20140907233231p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233231p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;次に、上のバーから[保存]を押して、&lt;b&gt;&quot;order_pdf&quot;&lt;/b&gt; という名前で保存します。&lt;br /&gt;
すると、&lt;b&gt;&quot;order_pdf.tif&quot;&lt;/b&gt; といるファイルができます。&lt;/p&gt;&lt;p&gt;これを、&lt;code&gt;app/pdfs/&lt;/code&gt;ディレクトリを作成し、そこに配置します。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;ViewとControllerの修正&lt;/h4&gt;
    &lt;p&gt;ViewにPDFを表示するためのリンクを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/orders/show.html.erb
...
# ファイルの一番下に追加する
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;PDFで表示&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;              order_path(@order, format: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;              :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &#39;btn btn-primary&#39; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Controllerのshowアクションに&lt;code&gt;respond_to&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# Thin ReportsでPDFを作成&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# 先ほどEditorで作ったtlfファイルを読み込む&lt;/span&gt;
        report = &lt;span class=&quot;synType&quot;&gt;ThinReports&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Report&lt;/span&gt;.new(&lt;span class=&quot;synConstant&quot;&gt;layout&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.root&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/app/pdfs/order_pdf.tlf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)

        &lt;span class=&quot;synComment&quot;&gt;# 1ページ目を開始&lt;/span&gt;
        report.start_new_page

        &lt;span class=&quot;synComment&quot;&gt;# ブラウザでPDFを表示する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# disposition: &amp;quot;inline&amp;quot; によりダウンロードではなく表示させている&lt;/span&gt;
        send_data
          report.generate,
          &lt;span class=&quot;synConstant&quot;&gt;filename&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;.pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;type&lt;/span&gt;:        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application/pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;disposition&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;PDFファイルを表示してみましょう。PDFが表示されました。&lt;br /&gt;
この調子で、Editor で帳票を作成し、Railsのプログラム上でPDFを表示していきます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233252.png&quot; alt=&quot;f:id:nipe880324:20140907233252p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233252p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;thinreports-view-dynamic-data&quot;&gt;ThinReports で動的データを表示&lt;/h3&gt;まずは、PDFを表示することができましたので、次は動的なデータの「注文番号」と「注文日」を表示できるようにしましょう。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Editor で動的データの表示領域を追加&lt;/h4&gt;
    &lt;p&gt;まずは、ThinReports Editor を開き、テキストツール([A]マーク)を使い「注文番号」と「注文日」を追加します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233315.png&quot; alt=&quot;f:id:nipe880324:20140907233315p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233315p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233318.png&quot; alt=&quot;f:id:nipe880324:20140907233318p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233318p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;次に、動的なデータを表示する領域を追加します。&lt;br /&gt;
&lt;b&gt;左側の点線の[A]&lt;/b&gt;を選択し、て次のように設定します。&lt;br /&gt;
重要な箇所として、[PROPERTY]の[ID]の値です。これを見て、コードから値を設定することができるようになります。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233337.png&quot; alt=&quot;f:id:nipe880324:20140907233337p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233337p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233339.png&quot; alt=&quot;f:id:nipe880324:20140907233339p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233339p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Controller で値を設定&lt;/h4&gt;
    &lt;p&gt;Controllerで値を設定しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# Thin ReportsでPDFを作成&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# 先ほどEditorで作ったtlfファイルを読み込む&lt;/span&gt;
        report = &lt;span class=&quot;synType&quot;&gt;ThinReports&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Report&lt;/span&gt;.new &lt;span class=&quot;synConstant&quot;&gt;:layout&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/pdfs/order_pdf.tlf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# 1ページ目を開始&lt;/span&gt;
        report.start_new_page

        &lt;span class=&quot;synComment&quot;&gt;### 追加箇所 開始 ###&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# 注文番号と注文日の値を設定&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# itemメソッドでtlfファイルのIDを指定し、&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# valueメソッドで値を設定します&lt;/span&gt;
        report.page.item(&lt;span class=&quot;synConstant&quot;&gt;:order_id&lt;/span&gt;).value(&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id)
        report.page.item(&lt;span class=&quot;synConstant&quot;&gt;:purchased_at&lt;/span&gt;).value(&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.purchased_at)
        &lt;span class=&quot;synComment&quot;&gt;### 追加箇所 終了 ###&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# ブラウザでPDFを表示する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# disposition: &amp;quot;inline&amp;quot; によりダウンロードではなく表示させている&lt;/span&gt;
        send_data report.generate,
                  &lt;span class=&quot;synConstant&quot;&gt;filename&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;.pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
                  &lt;span class=&quot;synConstant&quot;&gt;type&lt;/span&gt;:        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application/pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
                  &lt;span class=&quot;synConstant&quot;&gt;disposition&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;では、画面を再表示させましょう。&lt;br /&gt;
「注文番号」と「注文日」が表示されています :)&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233359.png&quot; alt=&quot;f:id:nipe880324:20140907233359p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233359p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;thinreports-view-table&quot;&gt;4. ThinReports でテーブルを表示&lt;/h3&gt;では、表を追加していきましょう。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Editor で表を追加&lt;/h4&gt;
    &lt;p&gt;表を追加するには、左側の枠組みのマーク(&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233410.png&quot; alt=&quot;f:id:nipe880324:20140907233410p:plain:h20:w20&quot; title=&quot;f:id:nipe880324:20140907233410p:plain:h20:w20&quot; class=&quot;hatena-fotolife&quot; style=&quot;height:20px;width:20px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;)を使います。&lt;br /&gt;
設定内容は次の通りです。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233426.png&quot; alt=&quot;f:id:nipe880324:20140907233426p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233426p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;作成した表の[header]と[detail]をそれぞれ選択し、[高さ]を&quot;20&quot;に設定します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233428.png&quot; alt=&quot;f:id:nipe880324:20140907233428p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233428p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;次に[header]部に[A]でテキストを追加します。&lt;br /&gt;
各設定パラメータは次の通りです。&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;ラベル&lt;/th&gt;&lt;th&gt;左位置&lt;/th&gt;&lt;th&gt;上位置&lt;/th&gt;&lt;th&gt;幅&lt;/th&gt;&lt;th&gt;高さ&lt;/th&gt;&lt;th&gt;サイズ&lt;/th&gt;&lt;th&gt;横位置&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;#&lt;/td&gt;&lt;td&gt;65&lt;/td&gt;&lt;td&gt;245&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;中央揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;品名&lt;/td&gt;&lt;td&gt;125&lt;/td&gt;&lt;td&gt;245&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;中央揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;単価&lt;/td&gt;&lt;td&gt;295&lt;/td&gt;&lt;td&gt;245&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;中央揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;数量&lt;/td&gt;&lt;td&gt;370&lt;/td&gt;&lt;td&gt;245&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;中央揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;値段&lt;/td&gt;&lt;td&gt;455&lt;/td&gt;&lt;td&gt;245&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;中央揃え&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233456.png&quot; alt=&quot;f:id:nipe880324:20140907233456p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233456p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;今度は[detail]部にデータの下線を[/]で追加します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233456.png&quot; alt=&quot;f:id:nipe880324:20140907233456p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233456p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;次に[detail]部に点線の[A]で動的なデータ表示領域を追加します。&lt;br /&gt;
各設定パラメータは次の通りです。&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;ID&lt;/th&gt;&lt;th&gt;左位置&lt;/th&gt;&lt;th&gt;上位置&lt;/th&gt;&lt;th&gt;幅&lt;/th&gt;&lt;th&gt;サイズ&lt;/th&gt;&lt;th&gt;フォント&lt;/th&gt;&lt;th&gt;横位置&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;id&lt;/td&gt;&lt;td&gt;85&lt;/td&gt;&lt;td&gt;265&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;IPA ゴシック&lt;/td&gt;&lt;td&gt;左揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;product_name&lt;/td&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;265&lt;/td&gt;&lt;td&gt;130&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;IPA ゴシック&lt;/td&gt;&lt;td&gt;左揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;price&lt;/td&gt;&lt;td&gt;275&lt;/td&gt;&lt;td&gt;265&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;60&lt;/td&gt;&lt;td&gt;IPA ゴシック&lt;/td&gt;&lt;td&gt;右揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;quantity&lt;/td&gt;&lt;td&gt;360&lt;/td&gt;&lt;td&gt;265&lt;/td&gt;&lt;td&gt;40&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;IPA ゴシック&lt;/td&gt;&lt;td&gt;右揃え&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;total_price&lt;/td&gt;&lt;td&gt;415&lt;/td&gt;&lt;td&gt;265&lt;/td&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;10.5&lt;/td&gt;&lt;td&gt;IPA ゴシック&lt;/td&gt;&lt;td&gt;右揃え&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233509.png&quot; alt=&quot;f:id:nipe880324:20140907233509p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233509p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;表にデータを設定する&lt;/h4&gt;
    &lt;p&gt;Controller にテーブルにデータを設定するコードを書いていきたいですが、今後ソースが増えていくと想定されるので、まずは別クラスに切り分けることにします。&lt;br /&gt;
&lt;code&gt;app/pdfs/order_pdf.rb&lt;/code&gt;を作成し、OrdersControllerのshowアクションからコードをコピーします。&lt;br /&gt;
&lt;code&gt;@order&lt;/code&gt;を&lt;code&gt;order&lt;/code&gt;に変えることことを見逃さないように注意してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/pdfs/order_pdf.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;OrderPDF&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# Classメソッドを定義&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt; order
    &lt;span class=&quot;synComment&quot;&gt;# Thin ReportsでPDFを作成&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# 先ほどEditorで作ったtlfファイルを読み込む&lt;/span&gt;
    report = &lt;span class=&quot;synType&quot;&gt;ThinReports&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Report&lt;/span&gt;.new &lt;span class=&quot;synConstant&quot;&gt;:layout&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/pdfs/order_pdf.tlf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# 1ページ目を開始&lt;/span&gt;
    report.start_new_page

    &lt;span class=&quot;synComment&quot;&gt;# 注文番号と注文日の値を設定&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# itemメソッドでtlfファイルのIDを指定し、&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# valueメソッドで値を設定します&lt;/span&gt;
    report.page.item(&lt;span class=&quot;synConstant&quot;&gt;:order_id&lt;/span&gt;).value(order.id)
    report.page.item(&lt;span class=&quot;synConstant&quot;&gt;:purchased_at&lt;/span&gt;).value(order.purchased_at)

    &lt;span class=&quot;synComment&quot;&gt;# ThinReports::Reportを返す&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; report
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、Controller側を書き直します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# order情報を設定したThinReportを作成する&lt;/span&gt;
        report = &lt;span class=&quot;synType&quot;&gt;OrderPDF&lt;/span&gt;.create &lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# ブラウザでPDFを表示する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# disposition: &amp;quot;inline&amp;quot; によりダウンロードではなく表示させている&lt;/span&gt;
        send_data report.generate,
                  &lt;span class=&quot;synConstant&quot;&gt;filename&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;.pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
                  &lt;span class=&quot;synConstant&quot;&gt;type&lt;/span&gt;:        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application/pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
                  &lt;span class=&quot;synConstant&quot;&gt;disposition&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;では、画面を確認してみましょう。何も変わっていないことが確認できると思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233359.png&quot; alt=&quot;f:id:nipe880324:20140907233359p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233359p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;これでテーブルのソースを追加するベースができたので、テーブルに値を設定するソースを追加していきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/pdfs/order_pdf.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;OrderPDF&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# Classメソッドを定義&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt; order
    &lt;span class=&quot;synComment&quot;&gt;# Thin ReportsでPDFを作成&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# 先ほどEditorで作ったtlfファイルを読み込む&lt;/span&gt;
    report = &lt;span class=&quot;synType&quot;&gt;ThinReports&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Report&lt;/span&gt;.new &lt;span class=&quot;synConstant&quot;&gt;:layout&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;app/pdfs/order_pdf.tlf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# 1ページ目を開始&lt;/span&gt;
    report.start_new_page

    &lt;span class=&quot;synComment&quot;&gt;# 注文番号と注文日の値を設定&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# itemメソッドでtlfファイルのIDを指定し、&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# valueメソッドで値を設定します&lt;/span&gt;
    report.page.item(&lt;span class=&quot;synConstant&quot;&gt;:order_id&lt;/span&gt;).value(order.id)
    report.page.item(&lt;span class=&quot;synConstant&quot;&gt;:purchased_at&lt;/span&gt;).value(order.purchased_at)

    &lt;span class=&quot;synComment&quot;&gt;### 追加部分 開始 ###&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# テーブルの値を設定&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# list に表のIDを設定する(デフォルトのID値: default)&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# add_row で列を追加できる&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# ブロック内のrow.valuesで値を設定する&lt;/span&gt;
    order.line_items.each &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;item&lt;/span&gt;|
      report.list(&lt;span class=&quot;synConstant&quot;&gt;:default&lt;/span&gt;).add_row &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;row&lt;/span&gt;|
        row.values &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;:           item.id,
                   &lt;span class=&quot;synConstant&quot;&gt;product_name&lt;/span&gt;: item.product_name,
                   &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;:        item.price,
                   &lt;span class=&quot;synConstant&quot;&gt;quantity&lt;/span&gt;:     item.quantity,
                   &lt;span class=&quot;synConstant&quot;&gt;total_price&lt;/span&gt;:  item.total_price
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;### 追加部分 終了 ###&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# ThinReports::Reportを返す&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; report
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、画面を開き直してみましょう。表が表示されています :)&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233703.png&quot; alt=&quot;f:id:nipe880324:20140907233703p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233703p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Editor で合計を追加&lt;/h4&gt;
    &lt;p&gt;今度は、合計部分を表示させましょう。&lt;br /&gt;
ThinReports Editor を開き、テーブルを選択し、[フッター]にチェックを入れます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233735.png&quot; alt=&quot;f:id:nipe880324:20140907233735p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233735p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;その後、テーブル上の[footer]を選択し、[高さ]を&quot;20&quot;にします。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233747.png&quot; alt=&quot;f:id:nipe880324:20140907233747p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233747p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;そして、[/]で[footer]の上部に横線を追加します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233810.png&quot; alt=&quot;f:id:nipe880324:20140907233810p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233810p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;次に、[□]で[footer]の合計部分に色を設定します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233825.png&quot; alt=&quot;f:id:nipe880324:20140907233825p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233825p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&quot;合計&quot; というラベルを表示用に追加します。&lt;br /&gt;
&lt;i&gt;通常の[A]で追加すると、上記で作成した色により見えなくなってしまうため、点線の[A]で追加した。&lt;/i&gt;&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233902.png&quot; alt=&quot;f:id:nipe880324:20140907233902p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233902p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;注文の合計を表示する領域を追加します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233904.png&quot; alt=&quot;f:id:nipe880324:20140907233904p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233904p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;合計にデータを設定する&lt;/h4&gt;
    &lt;p&gt;では、[footer]に追加した動的なデータの表示領域に値を設定します。&lt;br /&gt;
&lt;i&gt;あまり直感的でないですが、他の設定方法が分からなかったので、参考文献の見積書サンプルで設定した方法で設定しました。そのため、ソースコードの構成が大きく変わっています。&lt;/i&gt;&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/pdfs/order_pdf.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;OrderPDF&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# Classメソッドを定義&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt; order

    &lt;span class=&quot;synComment&quot;&gt;# Thin ReportsでPDFを作成&lt;/span&gt;
    report = &lt;span class=&quot;synType&quot;&gt;ThinReports&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Report&lt;/span&gt;.create &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;r&lt;/span&gt;|

      &lt;span class=&quot;synComment&quot;&gt;# ThinReports Editorで作成したファイルを読み込む&lt;/span&gt;
      r.use_layout &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.root&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/app/pdfs/order_pdf.tlf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;config&lt;/span&gt;|
        &lt;span class=&quot;synComment&quot;&gt;# テーブルの[footer]部分の値を設定&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# イベントで設定する方法以外の方法が分からなかった&lt;/span&gt;
        config.list(&lt;span class=&quot;synConstant&quot;&gt;:default&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
          events.on &lt;span class=&quot;synConstant&quot;&gt;:footer_insert&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;e&lt;/span&gt;|
            e.section.item(&lt;span class=&quot;synConstant&quot;&gt;:label&lt;/span&gt;).value(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;合計&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)
            e.section.item(&lt;span class=&quot;synConstant&quot;&gt;:total_price&lt;/span&gt;).value(order.total_price)
          &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

      &lt;span class=&quot;synComment&quot;&gt;# 1ページ目を開始&lt;/span&gt;
      r.start_new_page

      &lt;span class=&quot;synComment&quot;&gt;# 注文番号と注文日の値を設定&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# itemメソッドでtlfファイルのIDを指定し、&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# valueメソッドで値を設定します&lt;/span&gt;
      r.page.item(&lt;span class=&quot;synConstant&quot;&gt;:order_id&lt;/span&gt;).value(order.id)
      r.page.item(&lt;span class=&quot;synConstant&quot;&gt;:purchased_at&lt;/span&gt;).value(order.purchased_at)

      &lt;span class=&quot;synComment&quot;&gt;# テーブルの値を設定&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# list に表のIDを設定する(デフォルトのID値: default)&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# add_row で列を追加できる&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# ブロック内のrow.valuesで値を設定する&lt;/span&gt;
      order.line_items.each &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;item&lt;/span&gt;|
        r.list(&lt;span class=&quot;synConstant&quot;&gt;:default&lt;/span&gt;).add_row &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;row&lt;/span&gt;|
          row.values &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;:           item.id,
                     &lt;span class=&quot;synConstant&quot;&gt;product_name&lt;/span&gt;: item.product_name,
                     &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;:        item.price,
                     &lt;span class=&quot;synConstant&quot;&gt;quantity&lt;/span&gt;:     item.quantity,
                     &lt;span class=&quot;synConstant&quot;&gt;total_price&lt;/span&gt;:  item.total_price
        &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# ThinReports::Reportを返す&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; report
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、画面を確認しましょう。値が表示されてます。 :D&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907233932.png&quot; alt=&quot;f:id:nipe880324:20140907233932p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907233932p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;thinreports-conclusion&quot;&gt;5. 結論&lt;/h3&gt;なかなかソースコードは癖がありますが、ThinReports Editor で帳票を作成できるというところは大きなメリットだと思います。&lt;br /&gt;
帳票の品質にこだわりたいときは、使ってみる価値があると思います。&lt;/p&gt;&lt;p&gt;もっと細かいことを知りたい場合は、「&lt;a href=&quot;http://osc.matsukei.net/projects/thinreports/wiki/Examples&quot; target=&quot;_blank&quot;&gt;ThinReports 公式サイト - サンプル集&lt;/a&gt;」で勉強してください。&lt;/p&gt;&lt;p&gt;よくわからない箇所や間違いがありましたらコメントをください。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://osc.matsukei.net/projects/thinreports/wiki/Getting_Started&quot; target=&quot;_blank&quot;&gt;ThinReports 作成方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thinreports.org/&quot; target=&quot;_blank&quot;&gt;ThinReports 公式サイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://osc.matsukei.net/projects/thinreports/wiki/Example_Estimate&quot; target=&quot;_blank&quot;&gt;ThinReports - 見積書サンプル&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Tue, 09 Sep 2014 14:50:35 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815732273832</guid>
          
            <category>Rails gem</category>
          
            <category>PDF Generation</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでPDFKit + wkhtmltopdfを使ってPDFを作成する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140908/1410176894</link>
          <description>&lt;p&gt;PDFKit + wkhtmltopdf は、RubyもしくはRailsでHTMLをPDFに変換するGemとツールです。&lt;br /&gt;
これらを使うことで、HTMLをPDFに変換する形でPDFファイルを作成できます。&lt;br /&gt;
wkhtmltopdfが、HTMLをPDFに変換し、PDFKitはそのラッパーという構成になっています。&lt;/p&gt;&lt;p&gt;メリットとして、HTMLを作成するようにPDFファイルを作成することができるので比較的簡単にPDFファイルを作成できます。&lt;br /&gt;
デメリットとして、wkhtmltopdf の問題で現在は忠実にHTMLをPDFに変換できないことが問題であります。&lt;/p&gt;&lt;p&gt;今回は、&lt;b&gt;RailsでPDFKit + wkhtmltopdfを使って注文票のPDFを作成する&lt;/b&gt;手順を説明します。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907190213.png&quot; alt=&quot;f:id:nipe880324:20140907190213p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907190213p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;br /&gt;
他にもPDFを作成するGemがあり、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140906/1409995011&quot; target=&quot;_blank&quot;&gt;Ruby/RailsのPDF作成Gemまとめ &lt;/a&gt;」でまとめています。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails + PDFKit + wkhtmltopdfを使ったPDFの作成方法を知りたい&lt;/li&gt;
&lt;li&gt;一通りRailsの基礎について分かっている&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Mac OS X    10.9.4&lt;/li&gt;
&lt;li&gt;Ruby        2.1.2&lt;/li&gt;
&lt;li&gt;Rails       4.1&lt;/li&gt;
&lt;li&gt;PDFKit      0.6.2&lt;/li&gt;
&lt;li&gt;wkhtmltopdf 0.1.2 (Gemfile.lock)&lt;/li&gt;
&lt;li&gt;wkhtmltopdf 0.8.3 ($ wkhtmltopdf -V)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#pdfkit-preparation&quot;&gt;準備（注文詳細画面の作成）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pdfkit-getting-started&quot;&gt;PDFKitの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pdfkit-conclusion&quot;&gt;結論&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;h3 id=&quot;pdfkit-preparation&quot;&gt;1. 準備（注文詳細画面の作成）&lt;/h3&gt;まず、注文書のPDFを作成するために簡単な注文詳細画面を作成しましょう。&lt;br /&gt;
作成する画面は次の画面です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906204302.png&quot; alt=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;手順は&lt;a href=&quot;http://ruby-rails.hatenadiary.com/#prawn-preparation&quot; target=&quot;_blank&quot;&gt;こちら&lt;/a&gt;を参照してください。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;pdfkit-getting-started&quot;&gt;2. PDFKitの導入&lt;/h3&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;インストール&lt;/h4&gt;
    &lt;p&gt;毎度ながら&lt;code&gt;Gemfile&lt;/code&gt;に以下を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
...
&lt;span class=&quot;synComment&quot;&gt;# For PDF generation&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;pdfkit&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;       &lt;span class=&quot;synComment&quot;&gt;# wkhtmtopdfのラッパー&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;wkhtmltopdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# HTMLをPDFに変換するツール&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Gemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;ターミナルからwkhtmltopdfが使えるようになっていると思います。&lt;br /&gt;
PDFKitでは、このツールでHTMLからPDFへ変換することでPDFを作成します。&lt;br /&gt;
このツールは、HTMLだけでなく、URLを指定してもPDFファイルを作成できます。次のコマンドを実行してください。&lt;br /&gt;
PDFファイルが作成されます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ wkhtmltopdf http://yahoo.co.jp yahoo.pdf&lt;/pre&gt;&lt;p&gt;wkhtmltopdfにより作成されたPDFです。とっても簡単にPDFファイルを作成できますね。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907190251.png&quot; alt=&quot;f:id:nipe880324:20140907190251p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907190251p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;このように、PDFKitを使ってwkhtmltopdfを使うことによりPDFを作成していきます。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;PDF文書の作成&lt;/h4&gt;
    &lt;p&gt;URLのフォーマットが&lt;code&gt;.pdf&lt;/code&gt;のときにPDF出力処理を呼びます。&lt;br /&gt;
まずは、PDF表示用のリンクをViewに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/orders/show.html.erb
...
# 一番下の行に追加
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;PDFで表示&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;              order_path(@order, format: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;              :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &#39;btn btn-primary&#39; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、Controllerのshowアクションに&lt;code&gt;respond_to&lt;/code&gt;でPDF文書を作成するロジックを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# 詳細画面のHTMLを取得&lt;/span&gt;
        html = render_to_string &lt;span class=&quot;synConstant&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;orders/show&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# PDFKitを作成&lt;/span&gt;
        pdf = &lt;span class=&quot;synType&quot;&gt;PDFKit&lt;/span&gt;.new(html, &lt;span class=&quot;synConstant&quot;&gt;encoding&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UTF-8&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)

        &lt;span class=&quot;synComment&quot;&gt;# 画面にPDFを表示する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# to_pdfメソッドでPDFファイルに変換する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# 他には、to_fileメソッドでPDFファイルを作成できる&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# disposition: &amp;quot;inline&amp;quot; によりPDFはダウンロードではなく画面に表示される&lt;/span&gt;
        send_data pdf.to_pdf,
          &lt;span class=&quot;synConstant&quot;&gt;filename&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;.pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;type&lt;/span&gt;:        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application/pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;disposition&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;PDFKitの設定&lt;/h4&gt;
    &lt;p&gt;PDFKitの設定をします。&lt;br /&gt;
&lt;code&gt;config/initializers/pdfkit.rb&lt;/code&gt;を新たに作成し、設定を記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/initializers/pdfkit.rb&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;PDFKit&lt;/span&gt;.configure &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;config&lt;/span&gt;|
  config.wkhtmltopdf = &lt;span class=&quot;synSpecial&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;which wkhtmltopdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;`&lt;/span&gt;.to_s.strip
  config.default_options = {
    &lt;span class=&quot;synConstant&quot;&gt;encoding&lt;/span&gt;:                &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UTF-8&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,  &lt;span class=&quot;synComment&quot;&gt;# エンコーディング&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;page_size&lt;/span&gt;:               &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;A4&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,     &lt;span class=&quot;synComment&quot;&gt;# ページのサイズ&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;margin_top&lt;/span&gt;:              &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;0.25in&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synComment&quot;&gt;# 余白の設定&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;margin_right&lt;/span&gt;:            &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;1in&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;margin_bottom&lt;/span&gt;:           &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;0.25in&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;margin_left&lt;/span&gt;:             &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;1in&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;disable_smart_shrinking&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
  }
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、サーバーを再行動して、注文詳細画面の &lt;b&gt;&quot;PDFで表示&quot;ボタン&lt;/b&gt; を押してみましょう。&lt;br /&gt;
&lt;code&gt;Template is missing&lt;/code&gt;というエラーが発生します。&lt;br /&gt;
エラー内容をよく見ると、&lt;code&gt;:formats=&gt;[:pdf]&lt;/code&gt;と記載されており、&lt;code&gt;app/views/orders/show.pdf.xxx&lt;/code&gt;というファイルが存在しないからエラーが発生しているという意味です。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907190331.png&quot; alt=&quot;f:id:nipe880324:20140907190331p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907190331p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そのため、&lt;code&gt;app/views/orders/show.pdf.erb&lt;/code&gt;を作成しましょう。&lt;br /&gt;
内容は、&lt;code&gt;show.html.erb&lt;/code&gt;と一番したの４つのリンクを削除しただけで、後は全て同じです。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/orders/show.pdf.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%- model_class =&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; Order&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; -%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;page-header&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.title&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; model_class.model_name.human.titleize %&amp;gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;dl-horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;注文番号:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @order.id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;注文日:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @order.purchased_at&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;table table-striped&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;#&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;品名&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;単価&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;数量&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;値段&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @order.line_items.each_with_index do |line_item, idx| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; idx&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; + 1 %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; line_item.product_name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; line_item.price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; line_item.quantity&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; line_item.total_price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;合計&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @order.total_price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;再度、PDFを表示してみましょう。今度は上手く表示されました。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907190349.png&quot; alt=&quot;f:id:nipe880324:20140907190349p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907190349p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;しかし、上手くスタイルが適用されていません。&lt;br /&gt;
これは、Controllerの&lt;code&gt;render_to_string&lt;/code&gt;でHTMLコードしか取得しなかったため、CSSが適用されていないためです。&lt;br /&gt;
そのため、ControllerでCSSを適用しましょう。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;CSSの適用&lt;/h4&gt;
    &lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# 詳細画面のHTMLを取得&lt;/span&gt;
        html = render_to_string &lt;span class=&quot;synConstant&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;orders/show&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# PDFKitを作成&lt;/span&gt;
        pdf = &lt;span class=&quot;synType&quot;&gt;PDFKit&lt;/span&gt;.new(html, &lt;span class=&quot;synConstant&quot;&gt;encoding&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UTF-8&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)

        &lt;span class=&quot;synComment&quot;&gt;### 追加箇所 開始 ###&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# スタイルシートの設定&lt;/span&gt;
        pdf.stylesheets &amp;lt;&amp;lt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.root&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/app/assets/stylesheets/scaffolds.css.scss&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
        pdf.stylesheets &amp;lt;&amp;lt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.root&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/app/assets/stylesheets/bootstrap.min.css&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;### 追加箇所 終了 ###&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# 画面にPDFを表示する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# to_pdfメソッドでPDFファイルに変換する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# 他には、to_fileメソッドでPDFファイルを作成できる&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# disposition: &amp;quot;inline&amp;quot; によりPDFはダウンロードではなく画面に表示される&lt;/span&gt;
        send_data pdf.to_pdf,
          &lt;span class=&quot;synConstant&quot;&gt;filename&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;.pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;type&lt;/span&gt;:        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application/pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;disposition&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;.less&lt;/code&gt;ファイルは上手く読み込んでくれないようなので、既にGemでBootstrapをインストールしていますが、新たに&lt;code&gt;app/assets/stylesheets/bootstrap.min.css&lt;/code&gt;を作成します。&lt;/p&gt;&lt;p&gt;内容は「&lt;a href=&quot;http://getbootstrap.com/getting-started/#download&quot;&gt;Twitter Bootstrap 公式サイト&lt;/a&gt;」からダウンロードして、&lt;code&gt;bootstrap.min.css&lt;/code&gt;をコピーします。&lt;/p&gt;&lt;p&gt;では、PDFを再度表示しましょう。スタイルが適用されたPDFが表示されました :)&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907190213.png&quot; alt=&quot;f:id:nipe880324:20140907190213p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907190213p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Bootstrap Gemの削除&lt;/h4&gt;
    &lt;p&gt;最後にGemと追加したbootstrap.min.cssで重複して不具合が発生するかもしれないので、Gemを削除しましょう。&lt;br /&gt;
まず、Bootstrapで追加したファイルを削除します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails d bootstrap:install&lt;/pre&gt;&lt;p&gt;そして、&lt;code&gt;Gemfile&lt;/code&gt;からもBootstrap部分を削除します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
...
&lt;span class=&quot;synComment&quot;&gt;# For Twitter-Bootstrap&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# gem &#39;therubyracer&#39; # javascript runtime。lessをコンパイルするために必要&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# gem &#39;less-rails&#39; # Railsでlessを使えるようにする。Bootstrapがlessで書かれているため&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# gem &#39;twitter-bootstrap-rails&#39; # Bootstrapの本体&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;bundleから削除します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;では、PDFを確認し、スタイルが適用されていることを確認しましょう。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140907/20140907190213.png&quot; alt=&quot;f:id:nipe880324:20140907190213p:plain:w480&quot; title=&quot;f:id:nipe880324:20140907190213p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;i&gt;RailsプロジェクトでBootstrapのJavascriptやアイコンなどを使いたい場合は、Bootstrapからダウンロードしたファイルの&lt;code&gt;fonts&lt;/code&gt;や&lt;code&gt;js&lt;/code&gt;フォルダの中身をRailsプロジェクトにコピーしてください&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;pdfkit-conclusion&quot;&gt;3. 結論&lt;/h3&gt;PDFKit + wkhtmltopdf を使うことで、HTMLをPDFに変換する形でPDFファイルを作成できます。&lt;br /&gt;
メリットとして、show.pdf.erb のように、HTMLを作成するようにPDFファイルを作成することができるので比較的簡単にPDFファイルを作成できます。&lt;br /&gt;
デメリットとして、wkhtmltopdf の問題で現在は忠実にHTMLをPDFに変換できないことが問題であります。&lt;/p&gt;&lt;p&gt;よくわからない箇所や間違いがありましたらコメントをください。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pdfkit/pdfkit&quot; target=&quot;_blank&quot;&gt;公式GitHubページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Mon, 08 Sep 2014 20:48:14 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815732256878</guid>
          
            <category>Rails gem</category>
          
            <category>PDF Generation</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでPrawnを使ってPDFを作成する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140907/1410078997</link>
          <description>&lt;p&gt;Prawn(プローン)は、RubyもしくはRailsでプログラムだけでPDFを作成するGemです。&lt;br /&gt;
今回は、&lt;b&gt;RailsでPrawnを使って注文票のPDFを作成する&lt;/b&gt;手順を説明します。&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906214909.png&quot; alt=&quot;f:id:nipe880324:20140906214909p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906214909p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;br /&gt;
他にもPDFを作成するGemがあり、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140906/1409995011&quot; target=&quot;_blank&quot;&gt;Ruby/RailsのPDF作成Gemまとめ &lt;/a&gt;」でまとめています。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;対象読者&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails+Prawnを使ったPDFの作成方法を知りたい&lt;/li&gt;
&lt;li&gt;一通りRailsの基礎について分かっている&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Ruby 2.1.2&lt;/li&gt;
&lt;li&gt;Rails 4.1&lt;/li&gt;
&lt;li&gt;Prawn 1.2.1&lt;/li&gt;
&lt;li&gt;Mac OS X 10.9.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#prawn-preparation&quot;&gt;準備（注文詳細画面の作成）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#prawn-getting-started&quot;&gt;Prawnの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#prawn-create-order-pdf&quot;&gt;Prawnで本格的なPDFの作成&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;h3 id=&quot;prawn-preparation&quot;&gt;1. 準備（注文詳細画面の作成）&lt;/h3&gt;まず、注文書のPDFを作成するために簡単な注文詳細画面を作成しましょう。&lt;br /&gt;
作成する画面は次の画面です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906204302.png&quot; alt=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;Prawn&lt;/code&gt;の使い方のみを知りたい方は、次の項目まで飛ばしてください。&lt;br /&gt;
また、実際にやりながら読みたい方は、&lt;b&gt;GitHubに準備（注文詳細画面の作成）後&lt;/b&gt;のソースコードを配置してますので下記コマンドでローカルに持ってきてください。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ git clone git@github.com:yanagi0324/rails_samples.git
$ cd pdf_order_sample  # 準備後のファイル&lt;/pre&gt;&lt;p&gt;&lt;i&gt;この章では、簡略化のために「注文(Order)」と「注文明細(LineItem)」のみで必要最小限しか実装していないので正しい設計ではありませんので注意してください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;まず、Railsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails new prawn_test
$ cd prawn_test&lt;/pre&gt;&lt;p&gt;次に、Scaffoldで注文(Order)を作成します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails g scaffold Order purchased_at:datetime&lt;/pre&gt;&lt;p&gt;さらに、注文明細(LineItem)のモデルを作成します。&lt;br /&gt;
DBから直接データをいれるため、Controller と View は作りません。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails g model LineItem order_id:integer product_name:string price:integer quantity:integer&lt;/pre&gt;&lt;p&gt;注文(Order)と注文明細(LineItem)モデルのアソシエーションを追加します。&lt;br /&gt;
注文は、複数の注文明細を持つので、&lt;code&gt;has_many :line_items&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/order.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Order&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:line_items&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;注文明細からは、単一の注文に属するので、&lt;code&gt;belongs_to :order&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/line_item.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;LineItem&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:order&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、マイグレーションをします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake db:migrate&lt;/pre&gt;&lt;p&gt;画面操作部分を必要最低限しか作成しなので、seedでデータを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/seeds.rb&lt;/span&gt;
order1 = &lt;span class=&quot;synType&quot;&gt;Order&lt;/span&gt;.create! &lt;span class=&quot;synConstant&quot;&gt;purchased_at&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;.days.ago
order2 = &lt;span class=&quot;synType&quot;&gt;Order&lt;/span&gt;.create! &lt;span class=&quot;synConstant&quot;&gt;purchased_at&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;.days.ago
order3 = &lt;span class=&quot;synType&quot;&gt;Order&lt;/span&gt;.create! &lt;span class=&quot;synConstant&quot;&gt;purchased_at&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;.days.ago

&lt;span class=&quot;synType&quot;&gt;LineItem&lt;/span&gt;.create! &lt;span class=&quot;synConstant&quot;&gt;order_id&lt;/span&gt;: order1.id, &lt;span class=&quot;synConstant&quot;&gt;product_name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ノートPC&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;50000&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;quantity&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;LineItem&lt;/span&gt;.create! &lt;span class=&quot;synConstant&quot;&gt;order_id&lt;/span&gt;: order1.id, &lt;span class=&quot;synConstant&quot;&gt;product_name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;DVDプレイヤー&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;quantity&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;LineItem&lt;/span&gt;.create! &lt;span class=&quot;synConstant&quot;&gt;order_id&lt;/span&gt;: order1.id, &lt;span class=&quot;synConstant&quot;&gt;product_name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;電子書籍Reader&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;10000&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;quantity&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; 
&lt;span class=&quot;synType&quot;&gt;LineItem&lt;/span&gt;.create! &lt;span class=&quot;synConstant&quot;&gt;order_id&lt;/span&gt;: order1.id, &lt;span class=&quot;synConstant&quot;&gt;product_name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;単三電池&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;price&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;quantity&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt; 
&lt;/pre&gt;&lt;p&gt;データを投入します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake db:seed&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
デフォルトでは画面がシンプルすぎるので、Twitter Bootstrapを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
...
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;therubyracer&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# javascript runtime。lessをコンパイルするために必要&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;less-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# Railsでlessを使えるようにする。Bootstrapがlessで書かれているため&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;twitter-bootstrap-rails&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# Bootstrapの本体&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、Gemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;実際にBootstrapを適用していきます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails g bootstrap:install   # Bootstrap関連のファイルを追加
$ rails g bootstrap:themed Orders -f   # OrderのViewにBootstrapを強制的に適用&lt;/pre&gt;&lt;p&gt;ひとまず、&lt;code&gt;$ rails s&lt;/code&gt;で現在の画面を確認します。&lt;br /&gt;
さすが、Bootstrap！なかなかいい感じですね。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906203401.png&quot; alt=&quot;f:id:nipe880324:20140906203401p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906203401p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;注文詳細画面を開くと注文の明細が表示されていませんので、表示するように修正しましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906203415.png&quot; alt=&quot;f:id:nipe880324:20140906203415p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906203415p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/orders/show.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%- model_class =&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; Order&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; -%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;page-header&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.title&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; model_class.model_name.human.titleize %&amp;gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正部分 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;dl-horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;注文番号:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @order.id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;注文日:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @order.purchased_at&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;table table-striped&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;#&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;品名&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;単価&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;数量&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;値段&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @order.line_items.each_with_index do |line_item, idx| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; idx&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; + 1 %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; line_item.product_name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; line_item.price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; line_item.quantity&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; line_item.total_price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;  
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正部分 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; t(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.back&amp;quot;)),
              orders_path, :class =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;btn btn-default&#39;  %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; t(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.edit&amp;quot;)),
              edit_order_path(@order), :class =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;btn btn-default&#39; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; t(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.destroy&amp;quot;)),
              order_path(@order),
              :method =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;delete&#39;,
              :data =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; { :confirm =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; t(&#39;.confirm&#39;, :default =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.confirm&amp;quot;, :default =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;Are you sure?&#39;)) },
              :class =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;btn btn-danger&#39; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;上記のViewで、「注文明細の数量と値段から合計金額を計算する&lt;code&gt;line_item.total_price&lt;/code&gt;」を使っているので実装します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/line_item.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;LineItem&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:order&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;total_price&lt;/span&gt;
    price * quantity
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;また、上記のViewで金額表示のフォーマットするために、&lt;code&gt;number_to_currency&lt;/code&gt;メソッドを使っていますが、Railsのデフォルトのロケールは「アメリカ」なのでドルで表示されてしまいます。ロケールを「日本」に変えましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;# config/application.rb
...
...
    # config.i18n.default_locale = :de
    config.i18n.default_locale = :ja
  end
end&lt;/pre&gt;&lt;p&gt;では、日本語のロケールファイルを&lt;code&gt;config/locales/ja.yml&lt;/code&gt;で作成し、&lt;br /&gt;
&lt;a href=&quot;https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/ja.yml&quot; target=&quot;_blank&quot;&gt;GitHub - ja.yml&lt;/a&gt;から内容を取得し、コピーしましょう。&lt;/p&gt;&lt;p&gt;最後に、ブラウザ上いっぱいに表示されてしまうため、layoutファイルを修正しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/layouts/application.html.erb
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;PrawnTest&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; stylesheet_link_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;all&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; javascript_include_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; csrf_meta_tags&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; yield&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;config/&lt;/code&gt;配下を修正したので、サーバーを再起動して画面を確認しましょう。&lt;br /&gt;
注文明細も表示されるようになりました。また、画面いっぱいに表が表示されなくなりました。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906204042.png&quot; alt=&quot;f:id:nipe880324:20140906204042p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906204042p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;後は、注文詳細画面に注文の合計金額を表示するように修正します。&lt;br /&gt;
まずは、注文(Order)の合計金額を計算するメソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/order.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Order&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:line_items&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;total_price&lt;/span&gt;
    line_items.to_a.sum { |&lt;span class=&quot;synIdentifier&quot;&gt;line_itme&lt;/span&gt;| line_itme.total_price }
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;それでは、注文詳細画面に合計を表示する列を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/orders/show.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%- model_class =&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; Order&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; -%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;page-header&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.title&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; model_class.model_name.human.titleize %&amp;gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;dl-horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;注文番号:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @order.id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;注文日:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @order.purchased_at&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;table table-striped&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;#&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;品名&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;単価&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;数量&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;値段&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @order.line_items.each_with_index do |line_item, idx| %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; idx&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; + 1 %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; line_item.product_name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; line_item.price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; line_item.quantity&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; line_item.quantity * line_item.price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正部分 開始 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;colspan&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;合計&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; number_to_currency&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @order.total_price %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;    
    &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正部分 終了 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; t(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.back&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.back&amp;quot;)),
              orders_path, :class =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;btn btn-default&#39;  %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; t(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.edit&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.edit&amp;quot;)),
              edit_order_path(@order), :class =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;btn btn-default&#39; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; t(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;.destroy&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :default =&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.destroy&amp;quot;)),
              order_path(@order),
              :method =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;delete&#39;,
              :data =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; { :confirm =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; t(&#39;.confirm&#39;, :default =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; t(&amp;quot;helpers.links.confirm&amp;quot;, :default =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;Are you sure?&#39;)) },
              :class =&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt; &#39;btn btn-danger&#39; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;これで、一通りの準備は終わりました。&lt;br /&gt;
画面を確認してみましょう。合計が表示されてますね。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906204302.png&quot; alt=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;prawn-getting-started&quot;&gt;2. Prawnの導入&lt;/h3&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;インストール&lt;/h4&gt;
    &lt;p&gt;毎度ながら&lt;code&gt;Gemfile&lt;/code&gt;に以下を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
...
&lt;span class=&quot;synComment&quot;&gt;# For PDF generation&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;prawn&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;        &lt;span class=&quot;synComment&quot;&gt;# PDF作成&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;prawn-table&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# PDFでテーブルを作成&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Gemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;&lt;i&gt;Prawn 1.2で大幅にPrawnが変わったようなのでWarningが表示されますがエラーではないのであまり気にしすぎないでください。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;PDF文書の作成&lt;/h4&gt;
    &lt;p&gt;URLのフォーマットが&lt;code&gt;.pdf&lt;/code&gt;のときにPDF出力処理を呼びます。&lt;br /&gt;
まずは、PDF表示用のリンクをViewに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/orders/show.html.erb
...
# 一番したの行に追加
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;PDFで表示&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;              order_path(@order, format: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;pdf&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;              :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &#39;btn btn-primary&#39; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、Controllerに&lt;code&gt;respond_to&lt;/code&gt;でPDF文書を作成するロジックを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# PDF文書を作成&lt;/span&gt;
        pdf = &lt;span class=&quot;synType&quot;&gt;Prawn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Document&lt;/span&gt;.new
        &lt;span class=&quot;synComment&quot;&gt;# PDFに &amp;quot;Hello, Prawn!!&amp;quot; と表示する&lt;/span&gt;
        pdf.text &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Hello, Prawn!!&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# 画面にPDFを表示する&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# disposition: &amp;quot;inline&amp;quot; によりPDFはダウンロードではなく画面に表示される&lt;/span&gt;
        send_data pdf.render,
          &lt;span class=&quot;synConstant&quot;&gt;filename&lt;/span&gt;:    &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;.pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;type&lt;/span&gt;:        &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;application/pdf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;,
          &lt;span class=&quot;synConstant&quot;&gt;disposition&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;では、サーバーを再行動して、注文詳細画面の &lt;b&gt;&quot;PDFで表示&quot;ボタン&lt;/b&gt; を押してみましょう。&lt;br /&gt;
&quot;Hello, Prawn!!&quot; とPDFに表示されています。成功です :)&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906210304.png&quot; alt=&quot;f:id:nipe880324:20140906210304p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906210304p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Controllerで、&quot;Hello, Prawn&quot; を &quot;こんにちは、プローン&quot; に変えてみます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
        ... 
        &lt;span class=&quot;synComment&quot;&gt;# PDFに &amp;quot;こんにちは、プローン&amp;quot; と表示する&lt;/span&gt;
        pdf.text &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;こんにちは、プローン&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;

        ...
      &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
    end
  end
  ...
&lt;/pre&gt;&lt;p&gt;では、画面を確認してみます。しかし、アンダーバーでうまく表示されていません。&lt;br /&gt;
これは、日本語のフォントを持っていないためPDFに表示されないのが原因です。&lt;br /&gt;
そのため、Railsプロジェクトに日本語のフォントを追加します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906210612.png&quot; alt=&quot;f:id:nipe880324:20140906210612p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906210612p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;日本語フォントの追加&lt;/h4&gt;
    &lt;p&gt;&lt;a href=&quot;http://ipafont.ipa.go.jp/ipaexfont/download.html&quot; target=&quot;_blank&quot;&gt;IPAフォント&lt;/a&gt;にアクセスし、&lt;br /&gt;
&lt;b&gt;「2書体パック(IPAex明朝(Ver.002.01)、IPAexゴシック(Ver.002.01))　IPAexfont00201.zip(9.31 MB)」&lt;/b&gt;をダウンロードします。&lt;/p&gt;&lt;p&gt;その後、&lt;code&gt;vender/fonts&lt;/code&gt;を作成し、その配下に&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ipaexg.ttf (明朝)&lt;/li&gt;
&lt;li&gt;ipaexm.ttf (ゴシック)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;を配置します。&lt;/p&gt;&lt;p&gt;では、追加したフォントをPrawnから使うために、&lt;code&gt;font&lt;/code&gt;メソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    respond_to &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;|
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# PDF文書を作成&lt;/span&gt;
        pdf = &lt;span class=&quot;synType&quot;&gt;Prawn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Document&lt;/span&gt;.new

        &lt;span class=&quot;synComment&quot;&gt;# フォントを設定(明朝体)&lt;/span&gt;
        pdf.font &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;vendor/fonts/ipaexm.ttf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; 

        &lt;span class=&quot;synComment&quot;&gt;# PDFに &amp;quot;こんにちは、プローン&amp;quot; と表示する&lt;/span&gt;
        pdf.text &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;こんにちは、プローン&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
        ...
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;画面を開き直しましょう。日本語が表示されているはずです。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906211729.png&quot; alt=&quot;f:id:nipe880324:20140906211729p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906211729p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;prawn-create-order-pdf&quot;&gt;3. Prawnで本格的なPDFの作成&lt;/h3&gt;Prawnを使ってPDFを出力することができました。さて、注文詳細画面をPDFで作成していきましょう。&lt;br /&gt;
まずは、作成するPDFのイメージを確認するために、注文詳細画面を確認します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906204302.png&quot; alt=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906204302p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;PDF作成クラスの作成&lt;/h4&gt;
    &lt;p&gt;PrawnはプログラムでごりごりとPDFを作成していくので、Controller内でそれを記載すると可読性や保守性が下がるので、PDF作成用のクラスを作成します。&lt;/p&gt;&lt;p&gt;格納するフォルダとファイルを作ります。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ mkdir app/pdfs
$ touch app/pdfs/order_pdf.rb&lt;/pre&gt;&lt;p&gt;PDF作成クラスを作成します。&lt;code&gt;Prawn::Document&lt;/code&gt;を継承していることが重要です。&lt;br /&gt;
後の中身はControllerから移動しただけです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/pdfs/order_pdf.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;OrderPDF&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;Prawn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Document&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;initialize&lt;/span&gt;(order)
    &lt;span class=&quot;synStatement&quot;&gt;super&lt;/span&gt;()

    font &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;vendor/fonts/ipaexm.ttf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    text &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;こんにちは, Prawn!! on order_pdf.rb&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、Controllerからこのクラスを呼び出すように修正しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/orders_controller.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /orders/1.json&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
      format.html &lt;span class=&quot;synComment&quot;&gt;# show.html.erb&lt;/span&gt;
      format.pdf &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# PDF文書を作成&lt;/span&gt;
        pdf = &lt;span class=&quot;synType&quot;&gt;OrderPDF&lt;/span&gt;.new(&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;)
        ...
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;とりあえず、ここまで上手くいっているか確認するために、サーバーを再起動して画面を確認します。&lt;br /&gt;
しっかりと表示されていますね。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906212815.png&quot; alt=&quot;f:id:nipe880324:20140906212815p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906212815p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;本格的にPDFを記載&lt;/h4&gt;
    &lt;p&gt;では、作成した&lt;code&gt;app/pdfs/order_pdf.rb&lt;/code&gt;にゴリゴリPDF出力を記載します。&lt;br /&gt;
ソースとコメント、参考文献のPrawn manual、画面をそれぞれ見ながら書き方を理解してください。&lt;/p&gt;&lt;p&gt;&lt;i&gt;ソースを上から書きながら、逐次画面表示を確認すると理解しやすいのでオススメです。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;OrderPDF&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;Prawn&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Document&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;initialize&lt;/span&gt;(order)
    &lt;span class=&quot;synStatement&quot;&gt;super&lt;/span&gt;()

    &lt;span class=&quot;synComment&quot;&gt;# 複数メソッドで利用できるようにするため&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# インスタンス変数に代入&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt; = order

    &lt;span class=&quot;synComment&quot;&gt;# 全体のフォントを設定&lt;/span&gt;
    font &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;vendor/fonts/ipaexg.ttf&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    
    &lt;span class=&quot;synComment&quot;&gt;# ヘッダー部分の表示&lt;/span&gt;
    header
    &lt;span class=&quot;synComment&quot;&gt;# ヘッダーリード部分の表示&lt;/span&gt;
    header_lead
    &lt;span class=&quot;synComment&quot;&gt;# テーブル部分の表示&lt;/span&gt;
    table_content
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;header&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# size 28 で &amp;quot;Order&amp;quot;という文字を表示&lt;/span&gt;
    text &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Order&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;28&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# stroke(線)の色を設定し、線を引く&lt;/span&gt;
    stroke_color &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;eeeeee&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
    stroke_line [&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;680&lt;/span&gt;], [&lt;span class=&quot;synConstant&quot;&gt;530&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;680&lt;/span&gt;]
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;header_lead&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# カーソルを指定&lt;/span&gt;
    y_position = cursor - &lt;span class=&quot;synConstant&quot;&gt;30&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# bounding_boxで記載箇所を指定して、textメソッドでテキストを記載&lt;/span&gt;
    bounding_box([&lt;span class=&quot;synConstant&quot;&gt;100&lt;/span&gt;, y_position], &lt;span class=&quot;synConstant&quot;&gt;:width&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;270&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:height&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
      font_size &lt;span class=&quot;synConstant&quot;&gt;10.5&lt;/span&gt;
      text &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;注文番号:  &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.id&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;
      move_down &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;
      text &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;　注文日:  &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.purchased_at&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;table_content&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# tableメソッドは2次元配列を引数(line_item_rows)にとり、それをテーブルとして表示する&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# ブロック(do...end)内でテーブルの書式の設定をしている&lt;/span&gt;
    table line_item_rows &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# 全体設定&lt;/span&gt;
      cells.padding = &lt;span class=&quot;synConstant&quot;&gt;8&lt;/span&gt;          &lt;span class=&quot;synComment&quot;&gt;# セルのpadding幅&lt;/span&gt;
      cells.borders = [&lt;span class=&quot;synConstant&quot;&gt;:bottom&lt;/span&gt;,] &lt;span class=&quot;synComment&quot;&gt;# 表示するボーダーの向き(top, bottom, right, leftがある)&lt;/span&gt;
      cells.border_width = &lt;span class=&quot;synConstant&quot;&gt;0.5&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# ボーダーの太さ&lt;/span&gt;

      &lt;span class=&quot;synComment&quot;&gt;# 個別設定&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# row(0) は0行目、row(-1) は最後の行を表す&lt;/span&gt;
      row(&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;).border_width = &lt;span class=&quot;synConstant&quot;&gt;1.5&lt;/span&gt;
      row(&lt;span class=&quot;synConstant&quot;&gt;-2&lt;/span&gt;).border_width = &lt;span class=&quot;synConstant&quot;&gt;1.5&lt;/span&gt;
      row(&lt;span class=&quot;synConstant&quot;&gt;-1&lt;/span&gt;).background_color = &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;f0ad4e&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      row(&lt;span class=&quot;synConstant&quot;&gt;-1&lt;/span&gt;).borders = []

      &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.header     = &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# 1行目をヘッダーとするか否か&lt;/span&gt;
      &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.row_colors = [&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;dddddd&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ffffff&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;] &lt;span class=&quot;synComment&quot;&gt;# 列の色&lt;/span&gt;
      &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.column_widths = [&lt;span class=&quot;synConstant&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;100&lt;/span&gt;] &lt;span class=&quot;synComment&quot;&gt;# 列の幅&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# テーブルに表示するデータを作成(2次元配列)&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;line_item_rows&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# テーブルのヘッダ部&lt;/span&gt;
    arr = [[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;品名&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;単価&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;数量&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;値段&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;]]

    &lt;span class=&quot;synComment&quot;&gt;# テーブルのデータ部&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.line_items.map.with_index &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;item&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;i&lt;/span&gt;|
      arr &amp;lt;&amp;lt; [i+&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, item.product_name, item.price, item.quantity, item.total_price]
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# テーブルの合計部&lt;/span&gt;
    arr &amp;lt;&amp;lt; [&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;合計&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;@order&lt;/span&gt;.total_price]
    &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; arr
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、画面を確認してみましょう。&lt;br /&gt;
このように、PrawnではコードだけでPDFを作成していきます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906214909.png&quot; alt=&quot;f:id:nipe880324:20140906214909p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906214909p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://prawnpdf.org/manual.pdf&quot; target=&quot;_blank&quot;&gt;Prawn manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://prawnpdf.org/prawn-table-manual.pdf&quot; target=&quot;_blank&quot;&gt;Prawn table manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/sawamur@github/items/865ed68323b07061e4f5&quot; target=&quot;_blank&quot;&gt;日本語フォントあたり&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Sun, 07 Sep 2014 17:36:37 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815732206153</guid>
          
            <category>Rails gem</category>
          
            <category>PDF Generation</category>
          
        </item>
      
    
      
      
        <item>
          <title>Ruby/RailsでPDF作成Gemのまとめ</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140906/1409995011</link>
          <description>&lt;p&gt;Rubyもしくは、RailsでPDFを作成するGemとして&lt;a href=&quot;https://www.ruby-toolbox.com/categories/pdf_generation&quot; target=&quot;blank&quot;&gt;The Ruby Toolbox - PDF Generation&lt;/a&gt;で確認すると、有名どころとしては、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prawn（プローン）&lt;/li&gt;
&lt;li&gt;PDFKit (+ wkhtmltopdf)&lt;/li&gt;
&lt;li&gt;Wicked PDF (+ wkhtmltopdf)&lt;/li&gt;
&lt;li&gt;ThinReports（Ruty Toolboxにないけど）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;です。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;まとめ&lt;/h3&gt;
    &lt;p&gt;それぞれRails上で使ってみて、比較してみました。&lt;table class=&quot;table table-striped&quot;&gt;
  &lt;tr&gt;
    &lt;th&gt;Gem名&lt;/th&gt;&lt;th&gt;特徴&lt;/th&gt;&lt;th&gt;所感&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Prawn(プローン)&lt;/td&gt;
    &lt;td&gt;コードのみでPDFを作成する。&lt;/td&gt;
    &lt;td&gt;二重線などは少し作り込みが必要。コードでガリガリPDFを作成するので自由度は高いが時間がかかる。&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;PDFKit (+ wkhtmltopdf)&lt;/td&gt;
    &lt;td&gt;HTMLをPDFに変換する。HTMLからPDFへの変換はwkhtmltopdfが行い、&lt;code&gt;PDFKit&lt;/code&gt;はwkhtmltopdfのラッパー。&lt;/td&gt;
    &lt;td&gt;wkhtmltopdfがバグなどがあり角丸がつかないなど現状では完全にHTMLをPDFにできない。しかし、Railsで使う場合HTMLは既にあるはずなので簡単に使える。&lt;/td&gt;
  &lt;/tr&gt;
    &lt;td&gt;Wicked PDF (+ wkhtmltopdf)&lt;/td&gt;
    &lt;td&gt;PDFKitと同様。HTMLをPDFに変換する。HTMLからPDFへの変換はwkhtmltopdfが行い、&lt;code&gt;Wicked PDF&lt;/code&gt;はwkhtmltopdfのラッパー。&lt;/td&gt;
    &lt;td&gt;PDFKitと同様&lt;/td&gt;
  &lt;tr&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;ThinReports&lt;/td&gt;
    &lt;td&gt;日本製で&lt;code&gt;ThinReportsEditor&lt;/code&gt;という専用ツールを使って画面操作でPDFを作成し、PDF上の動的データをプログラムしていく。内部的に&lt;code&gt;Prawn&lt;/code&gt;を使っている。&lt;/td&gt;
    &lt;td&gt;画面でPDFを作るので親しみやすい。しかし、操作感があまりよくなく時間がかかることと、ドキュメントやサンプル不足でPDF上の動的データをプログラムしていくことが難しい。&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;結論&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;PDFの品質をあまり気にしない場合は、&lt;code&gt;PDFKit&lt;/code&gt; か &lt;code&gt;Wicked PDF&lt;/code&gt; で手軽に作成&lt;/li&gt;
&lt;li&gt;PDFの品質を気にするならば、&lt;code&gt;Prawn&lt;/code&gt; か &lt;code&gt;ThinReports&lt;/code&gt; で時間がかかりながらも作成&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;使い方&lt;/h3&gt;
    &lt;p&gt;次のような注文表をPDFで作成してみました。興味がある方は確認してみてください。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140906/20140906214909.png&quot; alt=&quot;f:id:nipe880324:20140906214909p:plain:w480&quot; title=&quot;f:id:nipe880324:20140906214909p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140907/1410078997&quot; target=&quot;_blank&quot;&gt;Rails + Prawn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140908/1410176894&quot; target=&quot;_blank&quot;&gt;Rails + PDFKit + wkhtmltopdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140909/1410241835&quot; target=&quot;_blank&quot;&gt;Rails + ThinReports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;以上、分からない箇所や間違いがあればコメントを下さい。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Sat, 06 Sep 2014 18:16:51 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815732154794</guid>
          
            <category>まとめ</category>
          
            <category>Rails gem</category>
          
            <category>PDF Generation</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsのログイン認証gemのDeviseとOmniAuth-Twitterの連携（Twitterでログインする）</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140805/1407200400</link>
          <description>&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; class=&quot;http-image&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; class=&quot;http-image&quot; alt=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; width=&quot;320&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;次のように、よく見かける&lt;b&gt;Twitterでユーザ登録&lt;/b&gt;や&lt;b&gt;Facebookでユーザ登録&lt;/b&gt;のように「&lt;b&gt;RailsでDeviseを使ってTwitterのOAuthを実装する方法&lt;/b&gt;」について説明します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140802/20140802233738.jpg&quot; alt=&quot;f:id:nipe880324:20140802233738j:plain&quot; title=&quot;f:id:nipe880324:20140802233738j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;前々回は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140801/1406907000&quot;&gt;Deviseのインストール方法&lt;/a&gt;」を説明しました。&lt;/li&gt;
&lt;li&gt;前回は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140804/1407168000&quot;&gt;Deviseのカスタマイズ方法&lt;/a&gt;」を説明しました。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;b&gt;実際に試す場合は、上記の２記事を実施済みだと差分を埋め合わせる必要がなくなり簡単です。&lt;/b&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails 4.1.4&lt;/li&gt;
&lt;li&gt;Devise 3.2.4&lt;/li&gt;
&lt;li&gt;OmniAuth&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;Twitter Developer画面でAPP_IDとAPP_SECRETを取得&lt;/li&gt;
&lt;li&gt;DeviseにOmniAuthのインストールと設定（初期設定とTwitterへの接続）&lt;/li&gt;
&lt;li&gt;DeviseにOmniAuthのインストールと設定（コールバック処理の実装）&lt;/li&gt;
&lt;li&gt;DeviseにOmniAuthのインストールと設定（プロフィール変更の修正）&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;Twitter Developer画面で[API key]と[API secret]を取得&lt;/h3&gt;
    
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;1. &lt;a href=&quot;https://apps.twitter.com&quot; target=&quot;_blank&quot;&gt;Twitter Developer画面&lt;/a&gt;にアクセスします。（Sign inしてなかったらしてください）&lt;/h5&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803001147.png&quot; alt=&quot;f:id:nipe880324:20140803001147p:plain:w360&quot; title=&quot;f:id:nipe880324:20140803001147p:plain:w360&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:360px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;2. [Create New App]を押し、各項目を入力して下さい。&lt;/h5&gt;
    
&lt;ul&gt;
&lt;li&gt;Name: アプリ名を記載（任意）&lt;/li&gt;
&lt;li&gt;Description: 説明を記載（任意）&lt;/li&gt;
&lt;li&gt;Website: ホームページを記載（ユーザーが認証時に表示されるURLで、OmniAuthの動作に関与しないので任意）&lt;/li&gt;
&lt;li&gt;Callback URL: コールバックURLを記載（今回はテストでローカルサーバーのため&lt;a href=&quot;http://127.0.0.1:3000/users/omniauth_callbacks&quot;&gt;http://127.0.0.1:3000/users/omniauth_callbacks&lt;/a&gt;を指定）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803001703.png&quot; alt=&quot;f:id:nipe880324:20140803001703p:plain:w360&quot; title=&quot;f:id:nipe880324:20140803001703p:plain:w360&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:360px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;3. [Create your Twitter application]を押します。&lt;/h5&gt;
    
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;4. 作成したアプリの[settings]タブの[Allow this application to be used to Sign in with Twitter]のチェックボックスをONにして、[Update settings]をして下さい。&lt;/h5&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803001843.png&quot; alt=&quot;f:id:nipe880324:20140803001843p:plain:w360&quot; title=&quot;f:id:nipe880324:20140803001843p:plain:w360&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:360px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;5. 作成したアプリの[API Keys]タブで[API key]と[API secret]を後から使うのでコピーしておいて下さい。（下の画像では値を隠しています）&lt;/h5&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803002424.png&quot; alt=&quot;f:id:nipe880324:20140803002424p:plain:w360&quot; title=&quot;f:id:nipe880324:20140803002424p:plain:w360&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:360px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;DeviseにOmniAuthのインストールと設定（初期設定とTwitterへの接続）&lt;/h3&gt;
    &lt;p&gt;では、RailsにOmniAuthをインストールしていきます。&lt;br /&gt;
まずは、&lt;code&gt;devise&lt;/code&gt;と&lt;code&gt;omniauth-twitter&lt;/code&gt;をGemfileに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;omniauth-twitter&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次に、gemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;OAuthで取得する&lt;code&gt;provider&lt;/code&gt;と&lt;code&gt;uid&lt;/code&gt;を保持するために、Userモデルにカラムを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails g migration add_columns_to_users provider uid
$ rake db&lt;span class=&quot;synConstant&quot;&gt;:migrate&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Deviseの設定ファイルに先ほど取得した[API key]と[API secret]を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/initializers/devise.rb&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Devise&lt;/span&gt;.setup &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;config&lt;/span&gt;|
  ...
  ...
  &lt;span class=&quot;synComment&quot;&gt;# omniauth&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# 先ほど設定した値を記載して下さい。&lt;/span&gt;
  config.omniauth &lt;span class=&quot;synConstant&quot;&gt;:twitter&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;[API Key]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;[API secret]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Userモデルに&lt;code&gt;:omniauthable&lt;/code&gt;を設定します。&lt;br /&gt;
下記のケースの場合、&lt;code&gt;:validatable&lt;/code&gt;の後に&lt;code&gt;,&lt;/code&gt;を忘れないようにして下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Include default devise modules. Others available are:&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# :confirmable, :lockable and :timeoutable&lt;/span&gt;
  devise &lt;span class=&quot;synConstant&quot;&gt;:database_authenticatable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:registerable&lt;/span&gt;,
         &lt;span class=&quot;synConstant&quot;&gt;:recoverable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:rememberable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:trackable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:validatable&lt;/span&gt;,
         &lt;span class=&quot;synConstant&quot;&gt;:omniauthable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;omniauth_providers&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:twitter&lt;/span&gt;]

  validates &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;uniqueness&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;i&gt;注意点として、現在(devise 3.2.4)では、DeviseはOmniAuthを１つのモデルでしか使えません。&lt;br /&gt;
複数のモデルでOmniAuthを使いたい場合は&lt;a href=&quot;https://github.com/plataformatec/devise/wiki/OmniAuth-with-multiple-models&quot; target=&quot;_blank&quot;&gt;ここ&lt;/a&gt;を参照して下さい。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;code&gt;:omniauthable&lt;/code&gt;をUserモデルに追加し、&lt;code&gt;config/routes.rb&lt;/code&gt;に&lt;code&gt;devise_for :users&lt;/code&gt;が設定されている場合、下記の2つのルートが自動で追加されます。&lt;br /&gt;
&lt;code&gt;$ rake routes&lt;/code&gt;で確認しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake routes
$ rake routes
                  &lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;     &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;                            &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
  ...
 user_omniauth_authorize &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;|&lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;auth/&lt;span class=&quot;synConstant&quot;&gt;:provider&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)        omniauth_callbacks&lt;span class=&quot;synComment&quot;&gt;#passthru {:provider=&amp;gt;/twitter/}&lt;/span&gt;
  user_omniauth_callback &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;|&lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;auth/&lt;span class=&quot;synConstant&quot;&gt;:action&lt;/span&gt;/callback(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;) omniauth_callbacks&lt;span class=&quot;synComment&quot;&gt;#(?-mix:twitter)&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;&lt;i&gt;注意点として、Deviseは上記の2つのパスの&lt;code&gt;*_url&lt;/code&gt;を作成しないことと、自分で2番目の&lt;code&gt;user_omniauth_callback&lt;/code&gt;はViewなどで指定しません。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;では、&lt;code&gt;application.html.erb&lt;/code&gt;にリンクを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/layouts/application.html.erb&lt;/span&gt;
....
&amp;lt;body&amp;gt;
&amp;lt;header&amp;gt;
  &amp;lt;nav&amp;gt;
    &amp;lt;!-- user_signed_in? はユーザがログインしているか調べるdeviseの&lt;span class=&quot;synType&quot;&gt;Helper&lt;/span&gt;メソッド --&amp;gt;
    &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; user_signed_in? %&amp;gt; 
      &amp;lt;!-- current_user は現在ログインしている&lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;オブジェクトを返すdeviseの&lt;span class=&quot;synType&quot;&gt;Helper&lt;/span&gt;メソッド --&amp;gt;
      &amp;lt;!-- *_path は&lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;モデルを作成したときに、
        deviseにより自動で作成されてますので、rake routesで確認できます --&amp;gt;
      &lt;span class=&quot;synType&quot;&gt;Logged&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; as &amp;lt;strong&amp;gt;&amp;lt;%= current_user.email %&amp;gt;&amp;lt;/strong&amp;gt;.
      &amp;lt;%= link_to &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;プロフィール変更&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, edit_user_registration_path %&amp;gt; |
      &amp;lt;%= link_to &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ログアウト&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, destroy_user_session_path, &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:delete&lt;/span&gt; %&amp;gt;
    &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt; %&amp;gt;
      &amp;lt;%= link_to &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;サインイン&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, new_user_registration_path %&amp;gt; |
      &amp;lt;%= link_to &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ログイン&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, new_user_session_path %&amp;gt; |
      &amp;lt;%= link_to &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Sign in with Twitter&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, user_omniauth_authorize_path(&lt;span class=&quot;synConstant&quot;&gt;:twitter&lt;/span&gt;) %&amp;gt;
    &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt; %&amp;gt;
  &amp;lt;/nav&amp;gt;
&amp;lt;/header&amp;gt;
  
&amp;lt;p &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt;=&amp;quot;notice&amp;quot;&amp;gt;&amp;lt;%= notice %&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt;=&amp;quot;alert&amp;quot;&amp;gt;&amp;lt;%= alert %&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;%= &lt;span class=&quot;synStatement&quot;&gt;yield&lt;/span&gt; %&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、サーバーを再起動し、ログイン画面を確認してみましょう。「Sign in with Twitter」リンクが追加されているはずです。&lt;br /&gt;
これは、&lt;code&gt;app/views/devise/shared/_links.erb_links_erb&lt;/code&gt;にデフォルトで&lt;code&gt;:omniauthable&lt;/code&gt;が有効化されたらリンクを表示するように記載されていたためです。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、[Sign in with Twitter]リンクを押すと、Twitter画面に遷移し、その後、Railsにリダイレクトされます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803013919.png&quot; alt=&quot;f:id:nipe880324:20140803013919p:plain:w360&quot; title=&quot;f:id:nipe880324:20140803013919p:plain:w360&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:360px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803005647.png&quot; alt=&quot;f:id:nipe880324:20140803005647p:plain:w360&quot; title=&quot;f:id:nipe880324:20140803005647p:plain:w360&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:360px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;そして、コールバックコントローラーがないため、エラーになります。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803005648.png&quot; alt=&quot;f:id:nipe880324:20140803005648p:plain:w360&quot; title=&quot;f:id:nipe880324:20140803005648p:plain:w360&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:360px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;DeviseにOmniAuthのインストールと設定（コールバック処理の実装）&lt;/h3&gt;
    &lt;p&gt;コールバックコントローラーを作成しましょう。&lt;br /&gt;
まず、コールバックコントローラーへのルートを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;
  ...
  devise_for &lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;path_names&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;sign_in&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;sign_out&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;},
    &lt;span class=&quot;synConstant&quot;&gt;controllers&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;omniauth_callbacks&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;omniauth_callbacks&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }
  ...
&lt;/pre&gt;&lt;p&gt;次に、&lt;code&gt;rails g&lt;/code&gt;コマンドでコールバックコントローラーを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails g controller omniauth_callbacks
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、コールバックコントローラーを実装しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/omniauth_callbacks_controller.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;OmniauthCallbacksController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;Devise&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;OmniauthCallbacksController&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;all&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# profiderとuidでuserレコードを検索。存在しなければ、新たに作成する&lt;/span&gt;
    user = &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.from_omniauth(request.env[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;omniauth.auth&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;])
    &lt;span class=&quot;synComment&quot;&gt;# userレコードが既に保存されているか&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; user.persisted?
      &lt;span class=&quot;synComment&quot;&gt;# ログインに成功&lt;/span&gt;
      flash.notice = &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ログインしました!!&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      sign_in_and_redirect user
    &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# ログインに失敗し、サインイン画面に遷移&lt;/span&gt;
      session[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise.user_attributes&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;] = user.attributes
      redirect_to new_user_registration_url
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# alias_methodはクラスやモジュールのメソッドに別名をつけます&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# 実態がallメソッドのtwitterメソッドを定義しています&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# こうすることで、様々なメソッド名で同じ処理を実装することができます。&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# OAuthの処理はほとんど同じためこのようにしています。&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# 例えば、Facebookに対応する場合、alias_method :facebook, :allだけですみます&lt;/span&gt;
  alias_method &lt;span class=&quot;synConstant&quot;&gt;:twitter&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:all&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Userモデルにメソッドを実装します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synIdentifier&quot;&gt;from_omniauth&lt;/span&gt;(auth)
    &lt;span class=&quot;synComment&quot;&gt;# providerとuidでUserレコードを取得する&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# 存在しない場合は、ブロック内のコードを実行して作成する&lt;/span&gt;
    where(auth.slice(&lt;span class=&quot;synConstant&quot;&gt;:provider&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:uid&lt;/span&gt;)).first_or_create &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;user&lt;/span&gt;|
      &lt;span class=&quot;synComment&quot;&gt;# auth.provider には &amp;quot;twitter&amp;quot;、&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# auth.uidには twitterアカウントに基づいた個別のIDが入っている&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# first_or_createメソッドが自動でproviderとuidを設定してくれるので、&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# ここでは設定は必要ない&lt;/span&gt;
      user.username = auth.info.nickname &lt;span class=&quot;synComment&quot;&gt;# twitterで利用している名前が入る&lt;/span&gt;
      user.email = auth.info.email &lt;span class=&quot;synComment&quot;&gt;# twitterの場合入らない&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、画面から [Sign in with Twitter]を押してみましょう。すると、サインアップ画面が表示されます。&lt;br /&gt;
これは、OmniauthCollbacksControllerの&lt;code&gt;User.from_omniauthメソッド&lt;/code&gt;で新規にレコードを作成するので、&lt;code&gt;user.persisted?&lt;/code&gt;で「false」になっているためです。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803014918.png&quot; alt=&quot;f:id:nipe880324:20140803014918p:plain:w480&quot; title=&quot;f:id:nipe880324:20140803014918p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、サインアップ画面にリダイレクトされたときに、Twitterから取得したデータを表示するようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# Devise の RegistrationsController はリソースを生成する前に self.new_sith_session を呼ぶ&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# つまり、self.new_with_sessionを実装することで、サインアップ前のuserオブジェクトを初期化する&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# ときに session からデータをコピーすることができます。&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# OmniauthCallbacksControllerでsessionに値を設定したので、それをuserオブジェクトにコピーします。&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;synIdentifier&quot;&gt;new_with_session&lt;/span&gt;(params, session)
    &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; session[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise.user_attributes&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;]
      new(session[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise.user_attributes&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;], &lt;span class=&quot;synConstant&quot;&gt;without_protection&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;user&lt;/span&gt;|
        user.attributes = params
        user.valid?
      &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;データがコピーされていることを確認するため、 画面で[Sign in with Twitter]を押してましょう。&lt;br /&gt;
EmailとPasswordのエラーが表示されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803023726.png&quot; alt=&quot;f:id:nipe880324:20140803023726p:plain:w480&quot; title=&quot;f:id:nipe880324:20140803023726p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;Twitter経由で認証した場合、パスワードを入力しなくてもログインをできるようにする&lt;br /&gt;
TwitterではEmailは取得できないため入力しないといけません、PasswordはTwitterで認証されているため入力はいりません。そのため、パスワードを入力しなくてもログインできるようにしましょう。&lt;br /&gt;
ちなみに、&lt;a href=&quot;https://github.com/arunagw/omniauth-twitter#user-content-authentication-hash&quot; blank=&quot;_blank&quot;&gt;omniauth-twitter 公式ドキュメント&lt;/a&gt;に取得できる値が記載されています。&lt;/p&gt;&lt;p&gt;まずは、Userモデルがproviderが存在する場合にパスワードを要求しないようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# providerがある場合（Twitter経由で認証した）は、&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# passwordは要求しないようにする。&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;password_required?&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;super&lt;/span&gt; &amp;amp;&amp;amp; provider.blank?
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ..
&lt;/pre&gt;&lt;p&gt;また、Viewではパスワードが要求されていない場合は、&lt;code&gt;f.object.password_required?&lt;/code&gt;を追加して、passwordの入力フィールドを表示しないようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/devise/registrations/new.html.erb&lt;/span&gt;
&amp;lt;h2&amp;gt;&lt;span class=&quot;synType&quot;&gt;Sign&lt;/span&gt; up&amp;lt;/h2&amp;gt;

&amp;lt;%= form_for(resource, &lt;span class=&quot;synConstant&quot;&gt;as&lt;/span&gt;: resource_name, &lt;span class=&quot;synConstant&quot;&gt;url&lt;/span&gt;: registration_path(resource_name)) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;f&lt;/span&gt;| %&amp;gt;
  &amp;lt;%= devise_error_messages! %&amp;gt;

  &amp;lt;div&amp;gt;&amp;lt;%= f.label &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt; %&amp;gt;&amp;lt;br &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;%= f&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;text_field :username, autofocus: true %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;div&amp;gt;

  &amp;lt;div&amp;gt;&amp;lt;%= f.label &lt;span class=&quot;synConstant&quot;&gt;:email&lt;/span&gt; %&amp;gt;&amp;lt;br &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;%= f&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;email_field :email %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;div&amp;gt;

  &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; f.object.password_required? %&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;%= f.label &lt;span class=&quot;synConstant&quot;&gt;:password&lt;/span&gt; %&amp;gt;&amp;lt;br &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;      &amp;lt;%= f&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;password_field :password, autocomplete: &amp;quot;off&amp;quot; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;div&amp;gt;

    &amp;lt;div&amp;gt;&amp;lt;%= f.label &lt;span class=&quot;synConstant&quot;&gt;:password_confirmation&lt;/span&gt; %&amp;gt;&amp;lt;br &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;      &amp;lt;%= f&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;password_field :password_confirmation, autocomplete: &amp;quot;off&amp;quot; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;div&amp;gt;
  &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt; %&amp;gt;

  &amp;lt;div&amp;gt;&amp;lt;%= f.submit &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Sign up&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; %&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt; %&amp;gt;

&amp;lt;%= render &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise/shared/links&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; %&amp;gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、画面を開いて、 [Sign in with Twitter]リンクを押しましょう。&lt;br /&gt;
エラーがEmailの未入力だけになっていますね。Emailを入力して、ユーザ登録しましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803025926.png&quot; alt=&quot;f:id:nipe880324:20140803025926p:plain:w320&quot; title=&quot;f:id:nipe880324:20140803025926p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;ユーザ登録できました。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803030035.png&quot; alt=&quot;f:id:nipe880324:20140803030035p:plain:w320&quot; title=&quot;f:id:nipe880324:20140803030035p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;ログアウトして、[Sign in with Twitter]リンクをするとログインができます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803030045.png&quot; alt=&quot;f:id:nipe880324:20140803030045p:plain:w320&quot; title=&quot;f:id:nipe880324:20140803030045p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;DeviseにOmniAuthのインストールと設定（プロフィール変更の修正）&lt;/h3&gt;
    &lt;p&gt;ほぼほぼ完成ですが１つ問題があります。&lt;br /&gt;
パスワードが存在しないためプロフィール変更ができません。&lt;/p&gt;&lt;p&gt;まず、パスワードがなくても更新できるように、Userモデルにメソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# プロフィールを変更するときによばれる&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;update_with_password&lt;/span&gt;(params, *options)
    &lt;span class=&quot;synComment&quot;&gt;# パスワードが空の場合&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; encrypted_password.blank?
      &lt;span class=&quot;synComment&quot;&gt;# パスワードがなくても更新できる&lt;/span&gt;
      update_attributes(params, *options)
    &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;synStatement&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Viewで現在のパスワードフィールドを表示しないようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/devise/registrations/edit.html.erb&lt;/span&gt;
&amp;lt;h2&amp;gt;&lt;span class=&quot;synType&quot;&gt;Edit&lt;/span&gt; &amp;lt;%= resource_name.to_s.humanize %&amp;gt;&amp;lt;/h2&amp;gt;

&amp;lt;%= form_for(resource, &lt;span class=&quot;synConstant&quot;&gt;as&lt;/span&gt;: resource_name, &lt;span class=&quot;synConstant&quot;&gt;url&lt;/span&gt;: registration_path(resource_name), &lt;span class=&quot;synConstant&quot;&gt;html&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:put&lt;/span&gt; }) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;f&lt;/span&gt;| %&amp;gt;
  &amp;lt;%= devise_error_messages! %&amp;gt;

  &amp;lt;div&amp;gt;&amp;lt;%= f.label &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt; %&amp;gt;&amp;lt;br &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;%= f&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;email_field :username, autofocus: true %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;div&amp;gt;

  &amp;lt;div&amp;gt;&amp;lt;%= f.label &lt;span class=&quot;synConstant&quot;&gt;:email&lt;/span&gt; %&amp;gt;&amp;lt;br &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;%= f&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;email_field :email %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;div&amp;gt;

  &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; devise_mapping.confirmable? &amp;amp;&amp;amp; resource.pending_reconfirmation? %&amp;gt;
    &amp;lt;div&amp;gt;&lt;span class=&quot;synType&quot;&gt;Currently&lt;/span&gt; waiting confirmation &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt;: &amp;lt;%= resource.unconfirmed_email %&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;% &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt; %&amp;gt;

  &amp;lt;div&amp;gt;&amp;lt;%= f.label &lt;span class=&quot;synConstant&quot;&gt;:password&lt;/span&gt; %&amp;gt; &amp;lt;i&amp;gt;(leave blank &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; you don&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;t want to change it)&amp;lt;/i&amp;gt;&amp;lt;br /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;    &amp;lt;%= f.password_field :password, autocomplete: &amp;quot;off&amp;quot; %&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;div&amp;gt;&amp;lt;%= f.label :password_confirmation %&amp;gt;&amp;lt;br /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;    &amp;lt;%= f.password_field :password_confirmation, autocomplete: &amp;quot;off&amp;quot; %&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;% if f.object.encrypted_password.present? %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;    &amp;lt;div&amp;gt;&amp;lt;%= f.label :current_password %&amp;gt; &amp;lt;i&amp;gt;(we need your current password to confirm your changes)&amp;lt;/i&amp;gt;&amp;lt;br /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;      &amp;lt;%= f.password_field :current_password, autocomplete: &amp;quot;off&amp;quot; %&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;  &amp;lt;div&amp;gt;&amp;lt;%= f.submit &amp;quot;Update&amp;quot; %&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;&amp;lt;h3&amp;gt;Cancel my account&amp;lt;/h3&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;&amp;lt;p&amp;gt;Unhappy? &amp;lt;%= button_to &amp;quot;Cancel my account&amp;quot;, registration_path(resource_name), data: { confirm: &amp;quot;Are you sure?&amp;quot; }, method: :delete %&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;&amp;lt;%= link_to &amp;quot;Back&amp;quot;, :back %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、画面でプロフィール更新画面で現在のパスワードフィールドが表示されません。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803031905.png&quot; alt=&quot;f:id:nipe880324:20140803031905p:plain:w320&quot; title=&quot;f:id:nipe880324:20140803031905p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、プロフィールが更新できました。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140803/20140803031907.png&quot; alt=&quot;f:id:nipe880324:20140803031907p:plain:w320&quot; title=&quot;f:id:nipe880324:20140803031907p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;とっても長くなりましたが以上です。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/plataformatec/devise/wiki/OmniAuth:-Overview&quot;&gt;OmniAuth Official Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/intridea/omniauth/wiki/List-of-Strategies&quot;&gt;OmniAuthの対応しているOAuthプロバイダ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Tue, 05 Aug 2014 10:00:00 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815729428910</guid>
          
            <category>Rails gem</category>
          
        </item>
      
        <item>
          <title>Railsのログイン認証gemのDeviseのカスタマイズ方法</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140804/1407168000</link>
          <description>&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; class=&quot;http-image&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; class=&quot;http-image&quot; alt=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; width=&quot;320&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Deviseで認証機能を使う、Viewの編集、日本語化、&lt;code&gt;sign_in&lt;/code&gt;や&lt;code&gt;sign_out&lt;/code&gt;のURLの変更などdeviseのカスタマイズについて説明します。&lt;/p&gt;&lt;p&gt;&lt;b&gt;実際に試す場合は、前記事を実施済みだと差分を埋め合わせる必要がなくなり簡単です。&lt;/b&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#devise-control-access&quot;&gt;Deviseでのアクセス制限をする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-customize-view&quot;&gt;DeviseのViewをカスタマイズする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-i18n-ja&quot;&gt;Deviseで出力される文字列の日本語化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-root-devise&quot;&gt;デバイスの画面をルートに設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-customize-url&quot;&gt;URL(Route)のカスタマイズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-add-column-to-model&quot;&gt;Userモデルにusernameカラムを追加&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-test-helper&quot;&gt;Deviseのテストヘルパー&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;前回は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140801/1406907000&quot;&gt;RailsでDeviseのインストール方法&lt;/a&gt;」を説明しました。&lt;/li&gt;
&lt;li&gt;今回はその「Deviseのカスタマイズ方法」について説明します。&lt;/li&gt;
&lt;li&gt;次回は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140805/1407200400&quot;&gt;DeviseとOmniAuth-Twitter連携（Twitterでログインする）&lt;/a&gt;」です。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    &lt;p&gt;・Rails 4.1.4&lt;br /&gt;
・Devise 3.2.4&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#devise-control-access&quot;&gt;Deviseでのアクセス制限をする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-customize-view&quot;&gt;DeviseのViewをカスタマイズする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-i18n-ja&quot;&gt;Deviseで出力される文字列の日本語化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-root-devise&quot;&gt;デバイスの画面をルートに設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-customize-url&quot;&gt;URL(Route)のカスタマイズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-add-column-to-model&quot;&gt;Userモデルにusernameカラムを追加&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-test-helper&quot;&gt;Deviseのテストヘルパー&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;devise-control-access&quot;&gt;Deviseでのアクセス制限をする&lt;/h3&gt;Homeのshow画面へのアクセス制限を追加してみます。&lt;br /&gt;
ログインしてない状態でも、&lt;code&gt;http://localhost:3000/home/show&lt;/code&gt;にアクセスできます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140802/20140802220516.png&quot; alt=&quot;f:id:nipe880324:20140802220516p:plain:w320&quot; title=&quot;f:id:nipe880324:20140802220516p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Controllerに次のようにアクセス制限を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;HomeController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# ユーザがログインしていないと&amp;quot;show&amp;quot;にアクセスできない&lt;/span&gt;
  before_action &lt;span class=&quot;synConstant&quot;&gt;:authenticate_user!&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、ログインしていない状態のまま、&lt;code&gt;http://localhost:3000/home/show&lt;/code&gt;にアクセスしてみましょう。&lt;br /&gt;
アクセスすると、「You need to sign in or sigh up before continuing.」と表示され「Sign in画面」にリダイレクトされます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140802/20140802220816.png&quot; alt=&quot;f:id:nipe880324:20140802220816p:plain:w320&quot; title=&quot;f:id:nipe880324:20140802220816p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;このように、アクセス制限を追加できます。&lt;br /&gt;
ちなみに、異なるユーザの場合表示させないわけではないので、そこは実装が必要です。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;devise-customize-view&quot;&gt;DeviseのViewをカスタマイズする&lt;/h3&gt;Sign in画面などdeviseのViewの見た目を変えたいというときがあると思います。&lt;br /&gt;
ここでは、Viewの変え方について説明します。&lt;/p&gt;&lt;p&gt;次のコマンドを実施することにより、&lt;code&gt;app/views/devise配下&lt;/code&gt;にdeviseのViewが作成されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails g devise&lt;span class=&quot;synConstant&quot;&gt;:views&lt;/span&gt;
     invoke  &lt;span class=&quot;synType&quot;&gt;Devise&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Generators&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;SharedViewsGenerator&lt;/span&gt;
      create    app/views/devise/shared
      create    app/views/devise/shared/_links.erb
      invoke  form_for
      create    app/views/devise/confirmations
      create    app/views/devise/confirmations/new.html.erb
      create    app/views/devise/passwords
      create    app/views/devise/passwords/edit.html.erb
      create    app/views/devise/passwords/new.html.erb
      create    app/views/devise/registrations
      create    app/views/devise/registrations/edit.html.erb
      create    app/views/devise/registrations/new.html.erb
      create    app/views/devise/sessions
      create    app/views/devise/sessions/new.html.erb
      create    app/views/devise/unlocks
      create    app/views/devise/unlocks/new.html.erb
      invoke  erb
      create    app/views/devise/mailer
      create    app/views/devise/mailer/confirmation_instructions.html.erb
      create    app/views/devise/mailer/reset_password_instructions.html.erb
      create    app/views/devise/mailer/unlock_instructions.html.erb
&lt;/pre&gt;&lt;p&gt;この作成されたファイルを編集することにより、deviseのViewの表示をカスタマイズすることができます。&lt;br /&gt;
ちなみに各フォルダの対応は次のようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;app/views/devise/sessions/new.html.erb ... ログイン画面&lt;/li&gt;
&lt;li&gt;app/views/devise/registrations/new.html.erb ... ユーザ登録画面&lt;/li&gt;
&lt;li&gt;app/views/devise/registrations/edit.html.erb ... ユーザ情報変更画面&lt;/li&gt;
&lt;li&gt;app/views/devise/passwords/new.html.erb ... パスワードを変更するためのメールを送信する画面&lt;/li&gt;
&lt;li&gt;app/views/devise/passwords/edit.html.erb ... パスワードを変更する画面&lt;/li&gt;
&lt;li&gt;app/views/devise/confirmations/new.html.erb ... メールによるConfirmをする画面&lt;/li&gt;
&lt;li&gt;app/views/devise/unlocks/new.html.erb ... アカウントのアンロック画面&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
試しに、「Sign in画面」の&lt;code&gt;h2タグのSign inを日本語に変更&lt;/code&gt;してみましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/devise/sessions/new.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;ログイン&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(resource,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; as: resource_name, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: session_path(resource_name)) do |f| %&amp;gt;&lt;/span&gt;
...
...
&lt;/pre&gt;&lt;p&gt;では、変更後の画面を見てましょう。ページ上部が「ログイン」と表示されているでしょうか。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140802/20140802221957.png&quot; alt=&quot;f:id:nipe880324:20140802221957p:plain:w320&quot; title=&quot;f:id:nipe880324:20140802221957p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;今回は小さな変更でしたが、HTMLやCSSをいじることにより、自分の好きなログイン画面やユーザ登録画面を表示することが可能です。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;devise-i18n-ja&quot;&gt;Deviseで出力される文字列の日本語化&lt;/h3&gt;日本語化する箇所は２つあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上記で行った「DeviseのViewをカスタマイズする」で作成した、Viewファイルのハードコーディングされた英語の文字列を日本語に変更する&lt;/li&gt;
&lt;li&gt;コントローラーやモデルが出力するメッセージを日本語化するために、&lt;code&gt;ja.yml&lt;/code&gt;と&lt;code&gt;devise.ja.yml&lt;/code&gt;を作成する&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;です。&lt;/p&gt;&lt;p&gt;２番目の日本語化について実施していきます。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;code&gt;ja.yml&lt;/code&gt;と&lt;code&gt;devise.ja.yml&lt;/code&gt;を作成&lt;/h5&gt;
    &lt;p&gt;幸いなことに、他の方が作った&lt;code&gt;ja.yml&lt;/code&gt;と&lt;code&gt;devise.ja.yml&lt;/code&gt;がありますのでその内容をコピーします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/ja.yml&quot; target=&quot;_blank&quot;&gt;ja.yaml&lt;/a&gt; =&gt; &lt;code&gt;config/locales/ja.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/yanagi0324/f63499851fa638690e09&quot; target=&quot;_blank&quot;&gt;devise.ja.yml (Rails 4 / devise 3.2.2 対応)&lt;/a&gt; =&gt; &lt;code&gt;config/locales/devise.ja.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;Railsの&lt;code&gt;defaul_locale&lt;/code&gt;を日本語に設定&lt;/h4&gt;
    &lt;p&gt;アプリケーションのデフォルトのロケールを&quot;日本語&quot;に設定します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/application.rb&lt;/span&gt;
...
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Application&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Application&lt;/span&gt;
  	...
    &lt;span class=&quot;synComment&quot;&gt;# config.i18n.default_locale = :de&lt;/span&gt;
    config.i18n.default_locale = &lt;span class=&quot;synConstant&quot;&gt;:ja&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
end
&lt;/pre&gt;&lt;p&gt;サーバを再起動して、画面を確認するとログイン時などの文字列が日本語になっていると思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140802/20140802223537.png&quot; alt=&quot;f:id:nipe880324:20140802223537p:plain:w320&quot; title=&quot;f:id:nipe880324:20140802223537p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;devise-root-devise&quot;&gt;デバイスの画面をルートに設定&lt;/h3&gt;デバイスの画面をホーム画面(&lt;code&gt;root :to&lt;/code&gt;)に設定するには次のように記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/route.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# ログイン画面をホームにする&lt;/span&gt;
  devise_scope &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    root &lt;span class=&quot;synConstant&quot;&gt;:to&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise/sessions#new&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;ちなみに、&lt;code&gt;rake routes&lt;/code&gt;コマンドで「デバイスの画面」と「コントローラーとアクション」の対応付けを確認できます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake routes
                  &lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;                    &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
                    root &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    /                              devise/sessions&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
        new_user_session &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_in(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)       devise/sessions&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
            user_session &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_in(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)       devise/sessions&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
    destroy_user_session &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_out(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/sessions&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
           user_password &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/passwords&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
       new_user_password &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password/new(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)  devise/passwords&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
      edit_user_password &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password/edit(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;) devise/passwords&lt;span class=&quot;synComment&quot;&gt;#edit&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PATCH&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/passwords&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PUT&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/passwords&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
cancel_user_registration &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;cancel(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)        devise/registrations&lt;span class=&quot;synComment&quot;&gt;#cancel&lt;/span&gt;
       user_registration &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
   new_user_registration &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_up(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)       devise/registrations&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
  edit_user_registration &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/e&lt;/span&gt;dit(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)          devise/registrations&lt;span class=&quot;synComment&quot;&gt;#edit&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PATCH&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PUT&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;h3 id=&quot;devise-customize-url&quot;&gt;URL(Route)のカスタマイズ&lt;/h3&gt;deviseのデフォルトのURLが気に入らない場合、変更することが可能です。&lt;br /&gt;
deviseのデフォルトのURLは次のようになっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake routes
                  &lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;                    &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
        new_user_session &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_in(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)       devise/sessions&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
            user_session &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_in(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)       devise/sessions&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
    destroy_user_session &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_out(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/sessions&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
           user_password &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/passwords&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
       new_user_password &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password/new(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)  devise/passwords&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
      edit_user_password &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password/edit(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;) devise/passwords&lt;span class=&quot;synComment&quot;&gt;#edit&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PATCH&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/passwords&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PUT&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;password(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      devise/passwords&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
cancel_user_registration &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;cancel(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)        devise/registrations&lt;span class=&quot;synComment&quot;&gt;#cancel&lt;/span&gt;
       user_registration &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
   new_user_registration &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/si&lt;/span&gt;gn_up(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)       devise/registrations&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
  edit_user_registration &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/e&lt;/span&gt;dit(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)          devise/registrations&lt;span class=&quot;synComment&quot;&gt;#edit&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PATCH&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;PUT&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                         &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;               devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;registrations&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;今回は、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;サインイン画面は、&lt;code&gt;/users/sign_in&lt;/code&gt;から&lt;code&gt;/users/login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;サインアウト処理は、&lt;code&gt;/users/sign_out&lt;/code&gt;から&lt;code&gt;/users/logout&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;に変えてみます。&lt;/p&gt;&lt;p&gt;変更方法は簡単で、&lt;code&gt;routes.rb&lt;/code&gt;ファイルを次のように変更させるだけです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;
  devise_for &lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;path_names&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;sign_in&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;sign_out&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;}
&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;$rake routes&lt;/code&gt;コマンドでURLを確認してみましょう。&lt;br /&gt;
「URL Pattern」が&lt;code&gt;login&lt;/code&gt;と&lt;code&gt;logout&lt;/code&gt;になっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake routes
                  &lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;                    &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
        new_user_session &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;login(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)         devise/sessions&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
            user_session &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;login(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)         devise/sessions&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
    destroy_user_session &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;logout(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)        devise/sessions&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
    ...
    ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;devise-add-column-to-model&quot;&gt;Userモデルにusernameカラムを追加&lt;/h3&gt;deviseは&lt;code&gt;email&lt;/code&gt;と&lt;code&gt;password&lt;/code&gt;を使ってログインをします。&lt;br /&gt;
これを、&lt;code&gt;username&lt;/code&gt;と&lt;code&gt;password&lt;/code&gt;に変える方法を説明します。&lt;/p&gt;&lt;p&gt;まず、テーブルに&lt;code&gt;username&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails g migration add_username_to_users username&lt;span class=&quot;synConstant&quot;&gt;:string&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;username&lt;/code&gt;は、ログイン時のキーとなるので、indexの追加と一意制約を追加しておきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/migrate/20140802133822_add_username_to_users.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;AddUsernameToUsers&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;change&lt;/span&gt;
    add_column &lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:string&lt;/span&gt;
    add_index &lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;unique&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、マイグレートを実施します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake db&lt;span class=&quot;synConstant&quot;&gt;:migrate&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次に、deviseの設定ファイルで認証キーを&lt;code&gt;email&lt;/code&gt;から&lt;code&gt;username&lt;/code&gt;に変えます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/initializers/devise.rb&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# ==&amp;gt; Configuration for any authentication mechanism&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Configure which keys are used when authenticating a user. The default is&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# just :email. You can configure it to use [:username, :subdomain], so for&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# authenticating a user, both parameters are required. Remember that those&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# parameters are used only when authenticating and not when retrieving from&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# session. If you need permissions, you should implement that in a before filter.&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# You can also supply a hash where the value is a boolean determining whether&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# or not authentication should be aborted when the value is not present.&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# config.authentication_keys = [ :email ]&lt;/span&gt;
  config.authentication_keys = [ &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt; ]
  ...
&lt;/pre&gt;&lt;p&gt;UserモデルにValidateを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  ...

  validates &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;uniqueness&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
ログイン画面の&lt;code&gt;email&lt;/code&gt;を&lt;code&gt;username&lt;/code&gt;の入力フィールドに変更します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/devise/sessions/new.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;ログイン&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(resource,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; as: resource_name, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: session_path(resource_name)) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :username %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :username, autofocus: true %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.password_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password, autocomplete: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if devise_mapping.rememberable? -%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.check_box&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :remember_me %&amp;gt;&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :remember_me %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end -%&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Sign in&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;devise/shared/links&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;サインアップ画面も対応しておきましょう。&quot;username&quot; のフィールドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/devise/registrations/new.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Sign up&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(resource,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; as: resource_name, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: registration_path(resource_name)) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; devise_error_messages!&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :username %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :username, autofocus: true %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :email %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.email_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :email %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.password_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password, autocomplete: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password_confirmation %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.password_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password_confirmation, autocomplete: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Sign up&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;devise/shared/links&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;同じく、プロフィール変更画面も、&quot;username&quot;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/devise/registrations/edit.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Edit &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; resource_name.to_s.humanize&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(resource,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; as: resource_name, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: registration_path(resource_name), html: { &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :put }) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; devise_error_messages!&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :username %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :username, autofocus: true %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :email %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.email_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :email %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if devise_mapping.confirmable? &amp;amp;&amp;amp; resource.pending_reconfirmation? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Currently waiting confirmation for: &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; resource.unconfirmed_email&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password %&amp;gt;&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;(leave blank if you don&#39;t want to change it)&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.password_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password, autocomplete: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password_confirmation %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.password_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :password_confirmation, autocomplete: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :current_password %&amp;gt;&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;(we need your current password to confirm your changes)&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.password_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :current_password, autocomplete: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Update&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Cancel my account&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Unhappy? &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; button_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Cancel my account&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, registration_path(resource_name), &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Are you sure?&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; }, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Back&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, :back %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;既にユーザが登録されているため、&lt;code&gt;username&lt;/code&gt;に&quot;testuser&quot;という値をコンソールから入力します。&lt;br /&gt;
もちろん、実際に変更するときは、サインインやプロフィール変更などの画面の修正は忘れずに修正してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails c
&lt;span class=&quot;synType&quot;&gt;Loading&lt;/span&gt; development environment (&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;4.1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;)
irb(main):&lt;span class=&quot;synConstant&quot;&gt;001&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&amp;gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.first
=&amp;gt; &lt;span class=&quot;synComment&quot;&gt;#&amp;lt;User id: 2, email: &amp;quot;test@example.com&amp;quot;, encrypted_password: &amp;quot;$2a$10$Oabg0hmZDismBJ2pxtfIxO9MK04/KQ7QtjnITlWXL83...&amp;quot;, reset_password_token: nil, reset_password_sent_at: nil, remember_created_at: nil, sign_in_count: 6, current_sign_in_at: &amp;quot;2014-07-31 08:51:22&amp;quot;, last_sign_in_at: &amp;quot;2014-07-31 08:50:50&amp;quot;, current_sign_in_ip: &amp;quot;127.0.0.1&amp;quot;, last_sign_in_ip: &amp;quot;127.0.0.1&amp;quot;, created_at: &amp;quot;2014-07-31 08:18:45&amp;quot;, updated_at: &amp;quot;2014-07-31 08:51:22&amp;quot;, username: nil&amp;gt;&lt;/span&gt;
&amp;gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;.first.update_attribute(&lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;testuser&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)
=&amp;gt; &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、ログイン画面を開いてログインしましょう。&lt;br /&gt;
&quot;Username&quot;が表示されていると思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140802/20140802230848.png&quot; alt=&quot;f:id:nipe880324:20140802230848p:plain:w320&quot; title=&quot;f:id:nipe880324:20140802230848p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
そして、ログインができます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140802/20140802230853.png&quot; alt=&quot;f:id:nipe880324:20140802230853p:plain:w320&quot; title=&quot;f:id:nipe880324:20140802230853p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;もし&lt;code&gt;development.log&lt;/code&gt;に&lt;code&gt;Unpermitted parameters&lt;/code&gt;が出た場合は、&quot;Strong Parameter&quot;のエラーのため、下記のコードを追加して下さい。&lt;br /&gt;
&quot;:username&quot;の箇所は、エラー内容で表示されている変数名に変えて下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/application_controller.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActionController&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Prevent CSRF attacks by raising an exception.&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# For APIs, you may want to use :null_session instead.&lt;/span&gt;
  protect_from_forgery &lt;span class=&quot;synConstant&quot;&gt;with&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:exception&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# deviceのコントローラーのときに、下記のメソッドを呼ぶ&lt;/span&gt;
  before_action &lt;span class=&quot;synConstant&quot;&gt;:configure_permitted_parameters&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:devise_controller?&lt;/span&gt;

  &lt;span class=&quot;synStatement&quot;&gt;protected&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;configure_permitted_parameters&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# sign_inのときに、usernameも許可する&lt;/span&gt;
      devise_parameter_sanitizer.for(&lt;span class=&quot;synConstant&quot;&gt;:sign_in&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# sign_upのときに、usernameも許可する&lt;/span&gt;
      devise_parameter_sanitizer.for(&lt;span class=&quot;synConstant&quot;&gt;:sign_up&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;#  account_updateのときに、usernameも許可する&lt;/span&gt;
      devise_parameter_sanitizer.for(&lt;span class=&quot;synConstant&quot;&gt;:account_update&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;synConstant&quot;&gt;:username&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;devise-test-helper&quot;&gt;Deviseのテストヘルパー&lt;/h3&gt;deviseは、テストで有用なテストヘルパーを提供しています。&lt;br /&gt;
それの簡単な使い方について説明します。&lt;/p&gt;&lt;p&gt;まず、テストにdeviseのテストヘルパーを追加します。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;デフォルトのTestフレームワークを使っている場合&lt;/h4&gt;
    &lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# test/test_helper.rb &lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;ActiveSupport&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;TestCase&lt;/span&gt;
  ...
  &lt;span class=&quot;synPreProc&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Devise&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;TestHelpers&lt;/span&gt;
  ...
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;RSpecを使っている場合&lt;/h5&gt;
    &lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# spec/spec_helper.rb &lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;RSpec&lt;/span&gt;.configure &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;config&lt;/span&gt;|
  ...
  config.include &lt;span class=&quot;synType&quot;&gt;Devise&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;TestHelpers&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:controller&lt;/span&gt;
  ...
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;これで、以下のメソッドがControllerの中で利用ができます&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;sign_in &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# sign_in(scope, resource)&lt;/span&gt;
sign_in &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;          &lt;span class=&quot;synComment&quot;&gt;# sign_in(resource)&lt;/span&gt;

sign_out &lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;         &lt;span class=&quot;synComment&quot;&gt;# sign_out(scope)&lt;/span&gt;
sign_out &lt;span class=&quot;synIdentifier&quot;&gt;@user&lt;/span&gt;         &lt;span class=&quot;synComment&quot;&gt;# sign_out(resource)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;テストにおいて、以下の２点ほど注意点があります。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Capybara&lt;/code&gt;や&lt;code&gt;Webrat&lt;/code&gt;などで実行されるインテグレーションテストでは動作しません。機能テストのみでしか使えません。フォーム入力やセッションに値を設定することで代替して下さい。&lt;/li&gt;
&lt;li&gt;Deviseの内部のテストやDeviseのコントローラを継承したコントローラの機能テストをする場合、リクエストをする前に、mapping情報を記載しなければなりません。これは、Deviseはrouteからmapping情報を取得しますが、機能テストではrouteを通らないのでmapping情報を知るすべがないからです。例として、user scopeのテストをする場合は、次のように記載します。&lt;/li&gt;
&lt;/ol&gt;&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;@request&lt;/span&gt;.env[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise.mapping&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;] = &lt;span class=&quot;synType&quot;&gt;Devise&lt;/span&gt;.mappings[&lt;span class=&quot;synConstant&quot;&gt;:user&lt;/span&gt;]
get &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;まとめ&lt;/h3&gt;
    &lt;p&gt;Deviseの一通りのカスタマイズ方法について学べたと思います。これで、Deviseを使って何かするときはほぼ問題ないと思います。&lt;br /&gt;
次は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140805/1407200400&quot;&gt;DeviseとOmniAuth-Twitter連携（Twitterでログインする）&lt;/a&gt;」です。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;plataformatec/devise &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Tue, 05 Aug 2014 01:00:00 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815729298218</guid>
          
            <category>Rails gem</category>
          
        </item>
      
    
      
      
        <item>
          <title>Railsのログイン認証gemのDeviseのインストール方法</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140801/1406907000</link>
          <description>&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; class=&quot;http-image&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; class=&quot;http-image&quot; alt=&quot;https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67&quot; width=&quot;320&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;概要&lt;/h3&gt;
    &lt;p&gt;DeviseはRailsで最も人気なログイン認証機能を提供しているgemです。&lt;br /&gt;
RailsにDeviseのインストール方法を説明します。&lt;br /&gt;
また、初期設定、ログイン用のユーザーモデルを作成といったDeviseの導入部分を説明します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;次回は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140804/1407168000&quot;&gt;Deviseのカスタマイズ方法&lt;/a&gt;」について説明します。&lt;/li&gt;
&lt;li&gt;次々回は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140805/1407200400&quot;&gt;DeviseとOmniAuth-Twitter連携（Twitterでログインする）&lt;/a&gt;」です。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    &lt;p&gt;・Rails 4.1.4&lt;br /&gt;
・Devise 3.2.4&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#devise-install-setting&quot;&gt;deviseのインストールと初期設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-install-create-user&quot;&gt;deviseのUserモデルの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-install-ten-modules&quot;&gt;(おまけ) deviseの10個のモジュール説明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#devise-install-helpers&quot;&gt;(おまけ) よく使うdeviseのHelperメソッド&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;devise-install-setting&quot;&gt;1. deviseのインストールと初期設定&lt;/h3&gt;まず、Railsプロジェクトの作成をします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails new devise
$ cd devise
&lt;/pre&gt;&lt;p&gt;次に、&lt;code&gt;devise&lt;/code&gt;をGemfileに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;devise&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、gemをインストールします。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ bundle install&lt;/pre&gt;&lt;p&gt;では、&lt;code&gt;devise&lt;/code&gt;に関連したファイルをRailsプロジェクトに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails g devise&lt;span class=&quot;synConstant&quot;&gt;:install&lt;/span&gt;
      create  config/initializers/devise.rb
      create  config/locales/devise.en.yml
===============================================================================

&lt;span class=&quot;synType&quot;&gt;Some&lt;/span&gt; setup you must &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; manually &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; you haven&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;t yet:&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;  1. Ensure you have defined default url options in your environments files. Here&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;     is an example of default_url_options appropriate for a development environment&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   .......&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;   ......&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
５つの初期設定の方法が記載されたメッセージが表示されます。&lt;br /&gt;
これから、１つずつ実施していきましょう。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;まず１番目。deviseのメール送信時のホスト名を指定します。&lt;/h5&gt;
    &lt;p&gt;メール送信のために、&lt;code&gt;config/environments/development.rb&lt;/code&gt;に&lt;code&gt;  config.action_mailer.default_url_options = { host: &#39;localhost:3000&#39; }&lt;/code&gt;を追加してください。&lt;br /&gt;
&lt;code&gt;productionモード&lt;/code&gt;のときは、&lt;code&gt;host:&lt;/code&gt;に実際のサーバーの値を設定して下さいと記載されています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/environments/development.rb&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.application.configure &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  ...
  &lt;span class=&quot;synComment&quot;&gt;# deviseの設定&lt;/span&gt;
  config.action_mailer.default_url_options = { &lt;span class=&quot;synConstant&quot;&gt;host&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;localhost:3000&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;次に２番目。root_urlを指定します。&lt;/h5&gt;
    &lt;p&gt;deviseはログアウト時などのリダイレクト先として&lt;code&gt;root_url&lt;/code&gt;を使うため、これが設定されていないとエラーになってしまうため、設定しなければいけません。&lt;br /&gt;
既に設定されている場合は必要ありません。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;
  ...
  root &lt;span class=&quot;synConstant&quot;&gt;to&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;home#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;root_url&lt;/code&gt;にルートを設定しましたが、実際のControllerやViewがないため作成しておきましょう。&lt;br /&gt;
&lt;code&gt;home#index&lt;/code&gt;を作成しましたのでルートにアクセスしても大丈夫です。&lt;br /&gt;
ここで、&lt;code&gt;home#show&lt;/code&gt;も作成していますが、次の記事の「Deviseのカスタマイズ」の「アクセス制限」で使うため作っておきました。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails g controller &lt;span class=&quot;synType&quot;&gt;Home&lt;/span&gt; index show
      create  app/controllers/home_controller.rb
       route  get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;home/show&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
       route  get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;home/index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
      invoke  erb
      create    app/views/home
      create    app/views/home/index.html.erb
      create    app/views/home/show.html.erb
      invoke  test_unit
      create    test/controllers/home_controller_test.rb
      invoke  helper
      create    app/helpers/home_helper.rb
      invoke    test_unit
      create      test/helpers/home_helper_test.rb
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/home.js.coffee
      invoke    scss
      create      app/assets/stylesheets/home.css.scss
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;次に３番目。エラーメッセージの表示領域を作成します。&lt;/h5&gt;
    &lt;p&gt;deviseはログインやログアウトなどのときに、&lt;code&gt;flash&lt;/code&gt;にサクセスやエラーメッセージを追加するので、その表示領域を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/layouts/application.html.erb&lt;/span&gt;
....
&amp;lt;body&amp;gt;
&amp;lt;p &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt;=&amp;quot;notice&amp;quot;&amp;gt;&amp;lt;%= notice %&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt;=&amp;quot;alert&amp;quot;&amp;gt;&amp;lt;%= alert %&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;%= &lt;span class=&quot;synStatement&quot;&gt;yield&lt;/span&gt; %&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;4は、Rails3.2だけ必要なのでスキップします。&lt;/h5&gt;
    
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;5は、Viewをカスタマイズしたいときのため必要であり、今はインストールのみのためスキップします。&lt;/h5&gt;
    &lt;p&gt;次の記事の「Deviseのカスタマイズ」でDeviseのViewのカスタマイズを行います。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;これで、deviseの初期設定は終わりました。&lt;/h5&gt;
    &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;devise-install-create-user&quot;&gt;2. deviseのUserモデルの作成&lt;/h3&gt;それでは、deviseのモデルを作成しましょう。今回は、&lt;code&gt;User&lt;/code&gt;という名前でモデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails g devise &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt;
      invoke  active_record
      create    db/migrate/20140730042329_devise_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      insert    app/models/user.rb
       route  devise_for &lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;マイグレートする前に今作成された、&lt;code&gt;user.rb&lt;/code&gt;と&lt;code&gt;yyyymmddhhmmss_devise_create_users.rb&lt;/code&gt;の中身を見ましょう。&lt;br /&gt;
&lt;span style=&quot;color: #ff2600&quot;&gt;&lt;i&gt;deviseの重要なポイントとして、ModelファイルとMigrationファイルで10個のモジュールを有効/無効にできるからです。&lt;/i&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;&lt;p&gt;まずは、&lt;code&gt;user.rb&lt;/code&gt;を見ましょう。&lt;br /&gt;
デフォルトでは、いくつかのモジュールはコメントアウトされています。&lt;br /&gt;
これをコメントイン、コメントアウトすることにより、機能を有効/無効にすることができます。&lt;br /&gt;
それぞれのモジュールの説明は本ページ下部の「deviseの10個のモジュール説明」に記載してあります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;User&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Include default devise modules. Others available are:&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# :confirmable, :lockable, :timeoutable and :omniauthable&lt;/span&gt;
  devise &lt;span class=&quot;synConstant&quot;&gt;:database_authenticatable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:registerable&lt;/span&gt;,
         &lt;span class=&quot;synConstant&quot;&gt;:recoverable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:rememberable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:trackable&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:validatable&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;今度は、&lt;code&gt;yyyymmddhhmmss_devise_create_users.rb&lt;/code&gt;を見ましょう。&lt;br /&gt;
「Database autohenticatbale」、「Recoverable」など見出しがついていることがわかると思います。先ほどの、Modelファイルでコメントインされているモジュールと対応させる必要があります。&lt;br /&gt;
例えば、user.rbで&lt;code&gt;:confirmable&lt;/code&gt;をコメントインした場合、このマイグレーションファイルでも&lt;code&gt;Confirmable&lt;/code&gt;の下の4行をコメントインしなければいけません。ちなみに、一番したの、&lt;code&gt;confirmation_token&lt;/code&gt;のadd_indexメソッドもコメントインすることも忘れないで下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/migrate/yyyymmddhhmmss_devise_create_users.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;DeviseCreateUsers&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;change&lt;/span&gt;
    create_table(&lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;t&lt;/span&gt;|
      &lt;span class=&quot;synComment&quot;&gt;## Database authenticatable&lt;/span&gt;
      t.string &lt;span class=&quot;synConstant&quot;&gt;:email&lt;/span&gt;,              &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
      t.string &lt;span class=&quot;synConstant&quot;&gt;:encrypted_password&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;

      &lt;span class=&quot;synComment&quot;&gt;## Recoverable&lt;/span&gt;
      t.string   &lt;span class=&quot;synConstant&quot;&gt;:reset_password_token&lt;/span&gt;
      t.datetime &lt;span class=&quot;synConstant&quot;&gt;:reset_password_sent_at&lt;/span&gt;

      &lt;span class=&quot;synComment&quot;&gt;## Rememberable&lt;/span&gt;
      t.datetime &lt;span class=&quot;synConstant&quot;&gt;:remember_created_at&lt;/span&gt;

      &lt;span class=&quot;synComment&quot;&gt;## Trackable&lt;/span&gt;
      t.integer  &lt;span class=&quot;synConstant&quot;&gt;:sign_in_count&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
      t.datetime &lt;span class=&quot;synConstant&quot;&gt;:current_sign_in_at&lt;/span&gt;
      t.datetime &lt;span class=&quot;synConstant&quot;&gt;:last_sign_in_at&lt;/span&gt;
      t.string   &lt;span class=&quot;synConstant&quot;&gt;:current_sign_in_ip&lt;/span&gt;
      t.string   &lt;span class=&quot;synConstant&quot;&gt;:last_sign_in_ip&lt;/span&gt;

      &lt;span class=&quot;synComment&quot;&gt;## Confirmable&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# t.string   :confirmation_token&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# t.datetime :confirmed_at&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# t.datetime :confirmation_sent_at&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# t.string   :unconfirmed_email # Only if using reconfirmable&lt;/span&gt;

      &lt;span class=&quot;synComment&quot;&gt;## Lockable&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# t.string   :unlock_token # Only if unlock strategy is :email or :both&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;# t.datetime :locked_at&lt;/span&gt;


      t.timestamps
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

    add_index &lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:email&lt;/span&gt;,                &lt;span class=&quot;synConstant&quot;&gt;unique&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    add_index &lt;span class=&quot;synConstant&quot;&gt;:users&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:reset_password_token&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;unique&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# add_index :users, :confirmation_token,   unique: true&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# add_index :users, :unlock_token,         unique: true&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
とりあえず、今回は特に修正せず、マイグレートを実施します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake db&lt;span class=&quot;synConstant&quot;&gt;:migrate&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;最後に、全ての画面の上部に、&lt;br /&gt;
・ログインしていない場合は、「サインイン」と「ログイン」のリンク&lt;br /&gt;
・ログインしている場合は、「プロフィール変更」と「ログアウト」のリンク&lt;br /&gt;
を表示させるようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/layouts/application.html.erb
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;nav&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- user_signed_in? はユーザがログインしているか調べるdeviseのHelperメソッド --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if user_signed_in? %&amp;gt;&lt;/span&gt; 
      &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- current_user は現在ログインしているUserオブジェクトを返すdeviseのHelperメソッド --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- *_path はUserモデルを作成したときに、&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;        deviseにより自動で作成されてますので、rake routesで確認できます --&amp;gt;&lt;/span&gt;
      Logged in as &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; current_user.email&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;.
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;プロフィール変更&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_user_registration_path %&amp;gt;&lt;/span&gt; |
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ログアウト&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, destroy_user_session_path, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% else %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;サインイン&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_user_registration_path %&amp;gt;&lt;/span&gt; |
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ログイン&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_user_session_path %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;nav&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;notice&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; notice&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;alert&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; alert&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; yield&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、サーバを起動し、画面を確認しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails s
&lt;/pre&gt;&lt;p&gt;まず、ホーム画面（&lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt;）です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140731/20140731220850.png&quot; alt=&quot;f:id:nipe880324:20140731220850p:plain:w480&quot; title=&quot;f:id:nipe880324:20140731220850p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;次に、サインアップ画面（ユーザ登録）（&lt;a href=&quot;http://localhost:3000/users/sign_up&quot;&gt;http://localhost:3000/users/sign_up&lt;/a&gt;）に遷移します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140731/20140731220852.png&quot; alt=&quot;f:id:nipe880324:20140731220852p:plain:w480&quot; title=&quot;f:id:nipe880324:20140731220852p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「Sign up」ボタンを押しました。すると、裏でユーザ登録とログイン処理が行われ、上記の表示が変わり、今登録したメールアドレスが表示されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140731/20140731220853.png&quot; alt=&quot;f:id:nipe880324:20140731220853p:plain:w480&quot; title=&quot;f:id:nipe880324:20140731220853p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;最後に、「ログアウト」をクリックしログアウトしています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140731/20140731220849.png&quot; alt=&quot;f:id:nipe880324:20140731220849p:plain:w480&quot; title=&quot;f:id:nipe880324:20140731220849p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;deviseの導入はおしまいです。&lt;br /&gt;
次は、&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140804/1407168000&quot;&gt;Deviseのカスタマイズ方法&lt;/a&gt;を見てくください。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;devise-install-ten-modules&quot;&gt;(おまけ) deviseの10個のモジュール説明&lt;/h3&gt;&lt;a href=&quot;https://github.com/plataformatec/devise#getting-started
&quot; target=&quot;_blank&quot;&gt;deviseの公式ドキュメント（英語）&lt;/a&gt;に詳細は記載されています。&lt;/p&gt;&lt;p&gt;以下に、10のモジュールの日本語訳を記載しておきます(2014/8/1現在)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Database Authenticatable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;サインイン中のユーザの認証を検証するために、パスワードの暗号とDBへの保存をします。&lt;br /&gt;
特殊な使い方をしない限り、基本的には必須。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Omniauthable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/intridea/omniauth&quot; target=&quot;_blank&quot;&gt;Omniauthサポート&lt;/a&gt;を追加します。&lt;br /&gt;
TwitterアカウントやFacebookアカウントなどでユーザ登録したい場合は、追加して下さい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Confirmable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;アカウントの有効化させるためのメールを送信し、そして、サインイン時（ユーザ登録）にアカウントが有効化されているか検証する。&lt;br /&gt;
サインインプロセスを、ユーザに確認メールを送信して、そのメール内のリンクをクリックしないとアカウントが有効化されない（ログインできない）というプロセスにできます。&lt;br /&gt;
これが無い場合は、サインインを行ったら、すぐにログインができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Recoverable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;パスワードを忘れたときのための、パスワードのリセットができるようになります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Registerable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;サインアップ処理によってユーザアカウントを行うことができます。アカウントの編集や削除も含まれています。&lt;br /&gt;
特殊な使い方をしないかぎり、基本的には必須だと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rememberable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;クッキーに保存されたトークンの生成と削除を行うことができます。&lt;br /&gt;
あまり良くわかっていませんが、デフォルトでもコメントインされているので多分必須だと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trackable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;サインインの回数やサインイン時刻、IPアドレスをDBのカラムに保存します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Timeoutable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;指定した一定時間内に操作がなければセッション情報を削除できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Validatable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;メールアドレスとパスワードの基本的な検証をします。自分自身でValidationも追加できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lockable&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;指定した回数サインインに失敗した場合にアカウントをロックされます。指定した時刻経過するか、メールによってアンロックができます。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;devise-install-helpers&quot;&gt;(おまけ) よく使うdeviseのHelperメソッド&lt;/h3&gt;&lt;i&gt;&lt;b&gt;#下記の&#39;_user&#39;はモデル名に依存する。つまり、モデル名が&#39;admin&#39;ならば、current_adminなどと記載する必要がある。&lt;/b&gt;&lt;/i&gt;&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# ユーザがログインしていないとアクセスできない（Controllerに記載）&lt;/span&gt;
before_action &lt;span class=&quot;synConstant&quot;&gt;:authenticate_user!&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# ユーザがサインインしているか調べる&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# 返り値は、true か false&lt;/span&gt;
user_signed_in?

&lt;span class=&quot;synComment&quot;&gt;# サインインしているユーザオブジェクトを取得する&lt;/span&gt;
current_user
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;参考文献&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;plataformatec/devise &amp;middot; GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
良く分からない、間違っている箇所などありましたら、お気軽に以下のコメント欄に記載ください。直に返します。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Fri, 01 Aug 2014 14:00:00 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815729285016</guid>
          
            <category>Rails gem</category>
          
        </item>
      
    
  </channel>
</rss>
