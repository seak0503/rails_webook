<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>連載 - Rails Webook</title>
    <link>http://ruby-rails.hatenadiary.com/category/%E9%80%A3%E8%BC%89</link>
    <description>自社のECを開発している会社で働いています。Rails情報やサービスを成長させる方法を書いていきます</description>
    <lastBuildDate>Fri, 18 Dec 2015 02:44:31 +0900</lastBuildDate>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <generator>Hatena::Blog</generator>
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 9. AngularJS + Railsでソート可能(Sortable)なリストを作成する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150127/1422357163</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載9回目です。今回で最終回です。&lt;br /&gt;
RailsとAngularJSでAngularJSのコントローラー, ngディレクティブ、ng-resource、ng-route、Railsのransack, kaminariなどのgemとの連携などいろいろなことをやってきました。&lt;/p&gt;&lt;p&gt;今回は、&lt;a href=&quot;https://github.com/a5hik/ng-sortable&quot; target=&quot;_blank&quot;&gt;ng-sortable&lt;/a&gt;と&lt;a href=&quot;https://github.com/swanandp/acts_as_list&quot; target=&quot;_blank&quot;&gt;acts_as_list&lt;/a&gt;を使い「&lt;b&gt;Todoをソートできる&lt;/b&gt;」ようにして、終わりとします。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;連載記事一覧&lt;/h3&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;li&gt;ransack  1.6.2&lt;/li&gt;
&lt;li&gt;kaminari 0.16.1&lt;/li&gt;
&lt;li&gt;mk-eitablespan 1.0.0&lt;/li&gt;
&lt;li&gt;ng-sortable    1.1.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-install&quot;&gt;ng-sortableのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-usage&quot;&gt;ng-sortableの使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-angularjs-sortable&quot;&gt;AngularJS側でソート操作をできるようにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-rails-acts_as_list&quot;&gt;Rails側でacts_as_listを追加し、ポジションを保持する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-angularjs-positions&quot;&gt;AngularJS側で各Todoのポジションを更新する&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-install&quot;&gt;1. ng-sortableのインストール&lt;/h3&gt;&lt;a href=&quot;https://github.com/a5hik/ng-sortable&quot; target=&quot;_blank&quot;&gt;ng-sortable - GitHub&lt;/a&gt;のreleasesから1.1.9のファイルを圧縮ファイルでダウンロードします。&lt;/p&gt;&lt;p&gt;解凍したファイルの&lt;code&gt;dist&lt;/code&gt;配下の次の2つのファイルをRailsプロジェクトに追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;cp ~/Downloads/ng-sortable-1.1.9/dist/ng-sortable.min.js vendor/assets/javascripts/.
cp ~/Downloads/ng-sortable-1.1.9/dist/ng-sortable.min.css vendor/assets/stylesheets/.
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、Railsがこれらのファイルをインポートするように&lt;code&gt;require&lt;/code&gt;を追記します。&lt;br /&gt;
&lt;code&gt;application.js&lt;/code&gt;に追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;// app/assets/javascripts/application.js&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;//= require ng-sortable.min&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
また、&lt;code&gt;application.css&lt;/code&gt;にも追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;/* app/assets/stylesheets/application.css */&lt;/span&gt;

 &lt;span class=&quot;synStatement&quot;&gt;*&lt;/span&gt;= require ng-sortable&lt;span class=&quot;synIdentifier&quot;&gt;.min&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、AngularJSのdependencyにも追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/app.coffee&lt;/span&gt;

app = angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, [&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ui.bootstrap&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ngResource&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ngRoute&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;mk.editablespan&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ui.sortable&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;])
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
これで、&lt;code&gt;ng-sortable&lt;/code&gt;を追加することができました。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-usage&quot;&gt;2. ng-sortableの使い方&lt;/h3&gt;&lt;code&gt;ng-sortable&lt;/code&gt;を実際に使う前に簡単に使い方の説明をします。&lt;/p&gt;&lt;p&gt;&lt;code&gt;ng-sortable&lt;/code&gt;のディレクティブは次の3つを使う必要があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;as-sortable   - アイテムのリストの要素に指定する&lt;/li&gt;
&lt;li&gt;as-sortable-item  - ソートやドラッグをしたいアイテムの要素に指定する&lt;/li&gt;
&lt;li&gt;as-sortable-item-handle - アイテム内のドラッグを行いたい要素に指定する&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
具体的な例のHTMLは次のようになります。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-as-sortable=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;sortControlListeners&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;items&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-ng-repeat=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;item in items&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-as-sortable-item&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-as-sortable-item-handle&amp;gt;&lt;/span&gt;{{ item.name }}&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
これで、&lt;code&gt;div&lt;/code&gt;要素がドラッグ可能になり、ソートができるようになります。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、&lt;code&gt;data-as-sortable&lt;/code&gt;で指定したオプションでコールバック関数やドラッグが可能かどうかを次のように設定します。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;$scope.dragControlListeners = &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;// アイテムがドラッグ可能かどうか制御したい場合オーバーライドして、 boolean値で返す（デフォルト値: true (ドラッグ可能)）&lt;/span&gt;
    accept: &lt;span class=&quot;synIdentifier&quot;&gt;function&lt;/span&gt; (sourceItemHandleScope, destSortableScope) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;// アイテムが別のリストにドラッグ&amp;amp;ドロップされた場合に呼び出されるコールバック関数（今回は使わない）&lt;/span&gt;
    itemMoved: &lt;span class=&quot;synIdentifier&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;synStatement&quot;&gt;event&lt;/span&gt;) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;//Do what you want},&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;// アイテムが同一のリストでドラッグ&amp;amp;ドロップ（ソート）された場合に呼び出されるコールバック関数&lt;/span&gt;
    orderChanged: &lt;span class=&quot;synIdentifier&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;synStatement&quot;&gt;event&lt;/span&gt;) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;//Do what you want},&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-angularjs-sortable&quot;&gt;3. AngularJS側でソート操作をできるようにする&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、Todoをソートできるようにしていきます。&lt;/p&gt;&lt;p&gt;まずは、TodoリストのHTMLを修正します。HTMLの修正があった行に&lt;code&gt;*&lt;/code&gt;を追加しています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;
  ...
* &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-as-sortable=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;sortListeners&amp;quot;&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list.todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
*    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-repeat=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo in list.todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;{completed: todo.completed}&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-as-sortable-item &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo.completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-click=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;toggleTodo(todo)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
*      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-description&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-as-sortable-item-handle&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;editablespan
&lt;span class=&quot;synIdentifier&quot;&gt;          model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo.description&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;          on-ready=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todoDescriptionEdited(todo)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;editablespan&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-buttons pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-danger btn-xs pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-click=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;deleteTodo(todo)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;glyphicon glyphicon-ban-circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、&lt;code&gt;ng-sortable&lt;/code&gt;の使い方に則り、TodoListCtrlにソートした時のコールバック関数(&lt;code&gt;orderChanged&lt;/code&gt;)を定義します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.sortListeners = {
  &lt;span class=&quot;synConstant&quot;&gt;orderChanged&lt;/span&gt;: (event) -&amp;gt;
    console.log &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sorted: &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;event.dest.index&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;
}
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、ここまででとりあえず動作確認をします。&lt;br /&gt;
ソートの動作ができるようになっていると思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150124/20150124181557.jpg&quot; alt=&quot;f:id:nipe880324:20150124181557j:plain:w480&quot; title=&quot;f:id:nipe880324:20150124181557j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;また、Javascriptコンソールにtodoの移動後のポジション番号が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150124/20150124181604.jpg&quot; alt=&quot;f:id:nipe880324:20150124181604j:plain:w480&quot; title=&quot;f:id:nipe880324:20150124181604j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;まだ、サーバーにデータを送っていないので、移動後のポジション番号を送るようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.positionChanged = (todo) -&amp;gt;
  &lt;span class=&quot;synComment&quot;&gt;# TodoサービスクラスでTodoを更新する&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# サーバーには、params = { &amp;quot;todo&amp;quot; =&amp;gt; {&amp;quot;target_position&amp;quot;=&amp;gt;2}, &amp;quot;todo_list_id&amp;quot;=&amp;gt;&amp;quot;1&amp;quot;, &amp;quot;id&amp;quot;=&amp;gt;&amp;quot;5&amp;quot;} が送られる。&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.update(todo, &lt;span class=&quot;synConstant&quot;&gt;target_position&lt;/span&gt;: todo.position)

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.sortListeners = {

  &lt;span class=&quot;synConstant&quot;&gt;orderChanged&lt;/span&gt;: (event) -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# 移動後のポジション番号を取得&lt;/span&gt;
    newPosition   = event.dest.index + &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# 移動させたTodoモデルを取得&lt;/span&gt;
    todo          = event.source.itemScope.modelValue
    &lt;span class=&quot;synComment&quot;&gt;# 移動させたTodoのpositionを更新（Angular内部）&lt;/span&gt;
    todo.position = newPosition
    &lt;span class=&quot;synComment&quot;&gt;# 移動させたTodoのpositionを更新（サーバーへ送信）&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.positionChanged(todo)
}
&lt;/pre&gt;&lt;p&gt;Todoサービスクラスの&lt;code&gt;update&lt;/code&gt;メソッドは既に実装してますので、AngularJS側での処理は終わりです。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-rails-acts_as_list&quot;&gt;4. Rails側でacts_as_listを追加し、ポジションを保持する&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/swanandp/acts_as_list&quot; target=&quot;_blank&quot;&gt;acts_as_list&lt;/a&gt;というリストのソートや順序付けを簡易にするgemをいれます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;acts_as_list&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Bundlerを実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bundle &lt;span class=&quot;synStatement&quot;&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、&lt;code&gt;acts_as_list&lt;/code&gt;は&lt;code&gt;position&lt;/code&gt;カラムを使い、順序番号を保持することを前提に動くので、&lt;code&gt;position&lt;/code&gt;カラムをTodoに追加するマイグレーションファイルを作成し、実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bin/rails g migration add_position_to_todos position:&lt;span class=&quot;synStatement&quot;&gt;integer&lt;/span&gt;
bin/rake db:migrate
&lt;/pre&gt;&lt;p&gt;&lt;i&gt;もちろんモデル内で&lt;code&gt;acts_as_list&lt;/code&gt;を呼び出すときに&lt;code&gt;:column&lt;/code&gt;オプションを指定することで、別のカラム名を使うことも可能です&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、モデルに&lt;code&gt;acts_as_list&lt;/code&gt;メソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;  &lt;span class=&quot;synComment&quot;&gt;# app/models/todo_list.rb&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# todosの順序をpositionの昇順にする(1, 2, 3, ...)&lt;/span&gt;
*   has_many &lt;span class=&quot;synConstant&quot;&gt;:todos&lt;/span&gt;, -&amp;gt; { order &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }, &lt;span class=&quot;synConstant&quot;&gt;dependent&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;

    validates &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;


  &lt;span class=&quot;synComment&quot;&gt;# app/models/todo.rb&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
    paginates_per &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;

    belongs_to &lt;span class=&quot;synConstant&quot;&gt;:todo_list&lt;/span&gt;

    &lt;span class=&quot;synComment&quot;&gt;# scope: :todo_list - todo_list内でTodoをリスト操作する&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# add_new_at: :top - 新規のTodoを一番上に追加する(defult: :bottom (一番下))&lt;/span&gt;
+   acts_as_list &lt;span class=&quot;synConstant&quot;&gt;scope&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:todo_list&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;add_new_at&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:top&lt;/span&gt;

    validates &lt;span class=&quot;synConstant&quot;&gt;:todo_list_id&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    validates &lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;,  &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;length&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;maximum&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;255&lt;/span&gt; }
    validates &lt;span class=&quot;synConstant&quot;&gt;:completed&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;inclusion&lt;/span&gt;: { &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;] }

    &lt;span class=&quot;synComment&quot;&gt;# AngularJSからtarget_postionとして値が送られてくるのでゲッターメソッドを定義する&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# 内部的には、acts_as_listのinsert_at(integer)メソッドを呼ぶ&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# insert_atメソッドはTodoをリスト内の特定の箇所に移動し、それ以外のTodoのpositionをいい感じに更新してくれる&lt;/span&gt;
+   &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;target_position=&lt;/span&gt;(value)
+     insert_at(value.to_i)
+   &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
これで、たくさんのpositionを自動的に更新してくれるメソッドが使えるようになります。&lt;br /&gt;
挙動を確認してみましょう。少し複雑なので理解できなくても問題ありません。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ bin/rails c -s
&lt;span class=&quot;synComment&quot;&gt;# リストを作成&lt;/span&gt;
list = &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.create(&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sample todo&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;)


&lt;span class=&quot;synComment&quot;&gt;## 作成時の acts_as_listの挙動 ##&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# 3つTodoを作成する&lt;/span&gt;
list.todos.create(&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)
list.todos.create(&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo2&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)
list.todos.create(&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo3&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)

&lt;span class=&quot;synComment&quot;&gt;# todoを確認する&lt;/span&gt;
list.todos
&lt;span class=&quot;synComment&quot;&gt;#=&amp;gt; &amp;lt;ActiveRecord::Associations::CollectionProxy&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#   [#&amp;lt;Todo description: &amp;quot;todo3&amp;quot;, position: 1, ...&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#    #&amp;lt;Todo description: &amp;quot;todo2&amp;quot;, position: 2, ...&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#    #&amp;lt;Todo description: &amp;quot;todo1&amp;quot;, position: 3, ...&amp;gt;]&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# 自動的に良い感じにpositionが更新されています。&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# これは、createメソッドでTodoをINSERTする前に、acts_as_listが次のUPDATE文も実行しているためです。&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# UPDATE &amp;quot;todos&amp;quot; SET position = (position + 1) WHERE (&amp;quot;todos&amp;quot;.&amp;quot;todo_list_id&amp;quot; = 1)&lt;/span&gt;



&lt;span class=&quot;synComment&quot;&gt;## 更新時の acts_as_listの挙動 ##&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# 1番目(todo3)を3番目に移動させます&lt;/span&gt;
list.todos.first.insert_at(&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;)

&lt;span class=&quot;synComment&quot;&gt;# todoを確認する&lt;/span&gt;
list.todos
&lt;span class=&quot;synComment&quot;&gt;#=&amp;gt; &amp;lt;ActiveRecord::Associations::CollectionProxy&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#   [#&amp;lt;Todo description: &amp;quot;todo2&amp;quot;, position: 1, ...&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#    #&amp;lt;Todo description: &amp;quot;todo1&amp;quot;, position: 2, ...&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#    #&amp;lt;Todo description: &amp;quot;todo3&amp;quot;, position: 3, ...&amp;gt;]&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# todo3のpositionが3になり、他の2つが1,2になっています。&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# これも自動的にacts_as_listにより次のようなUPDATE文が走っているため、いい感じになっています。&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# UPDATE &amp;quot;todos&amp;quot; SET position = (position - 1) WHERE (&amp;quot;todos&amp;quot;.&amp;quot;todo_list_id&amp;quot; = 1 AND position &amp;gt; 1 AND position &amp;lt;= 3)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;少しわかりづらいですが、&lt;code&gt;acts_as_list&lt;/code&gt;により自動的にpositionがいい感じに更新されるということです。&lt;br /&gt;
今回はこのぐらいしかメソッドを使わないので上記が理解できれば問題ありません。&lt;br /&gt;
他にも&lt;code&gt;acts_as_list&lt;/code&gt;にはメソッドがたくさん定義されているので気になる方は、&lt;a href=&quot;https://github.com/swanandp/acts_as_list&quot; target=&quot;_blank&quot;&gt;acts_as_list - GitHub&lt;/a&gt;を参照してください。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、TodosControllerのStrongParmetersで&lt;code&gt;target_position&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/api/todos_controller.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;todo_params&lt;/span&gt;
  params.require(&lt;span class=&quot;synConstant&quot;&gt;:todo&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:completed&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:target_position&lt;/span&gt;)
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
最後にjbuilderでAnguarJSに返しているJSONの内容に&lt;code&gt;position&lt;/code&gt;も返すように追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/api/todo_lists/show.json.jbuilder&lt;/span&gt;
  json.id    &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.id
  json.name  &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.name
  json.todos &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.page(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;todo&lt;/span&gt;|
    json.id          todo.id
    json.description todo.description
    json.completed   todo.completed
+   json.position    todo.position
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  json.totalTodos  &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.count


&lt;span class=&quot;synComment&quot;&gt;# app/views/api/todo_lists/show.json.jbuilder&lt;/span&gt;
  json.name &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.name
  json.todos &lt;span class=&quot;synIdentifier&quot;&gt;@todos&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;todo&lt;/span&gt;|
    json.id          todo.id
    json.description todo.description
    json.completed   todo.completed
+   json.position    todo.position
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  json.totalTodos  &lt;span class=&quot;synIdentifier&quot;&gt;@total_todos&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;これで、クライアント側も、サーバー側も一通り実装ができましたので、動作確認をしましょう。&lt;br /&gt;
Todoのpositionの値がすべて0だと思いますので、一度&lt;code&gt;bin/rake db:migrate:reset&lt;/code&gt;などしてDBを綺麗な状態にしてから実施してください。&lt;/p&gt;&lt;p&gt;Todoをソートした後に、画面をリロードしてもソート順が保持されているのでうまくいっています。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;i&gt;うまく動かない場合は、Javascriptコンソールを開き、AngularJS側でエラーが出ていないこと、サーバーのupdateメソッドにbyebugを記載し、paramsでtarget_positionが取得できて、Todoの更新に成功していることといった処理の流れを追いながら順に確認してみてください。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-angularjs-positions&quot;&gt;5. AngularJS側で各Todoのポジションを更新する&lt;/h3&gt;見た目上はうまく更新できてましたが、実は問題があります。&lt;br /&gt;
画面にAngularJSのモデルの&lt;code&gt;position&lt;/code&gt;の値を表示させてみましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-buttons pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
+   ({{ todo.position }})
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ...&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
新規にTodoを追加したり、ソートさせたり、削除させたりすると、positionの値(右側の()の内容)が正しくないこと見てわかると思います。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150124/20150124181724.jpg&quot; alt=&quot;f:id:nipe880324:20150124181724j:plain:w480&quot; title=&quot;f:id:nipe880324:20150124181724j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;これは、サーバー側で&lt;code&gt;acts_as_list&lt;/code&gt;が&lt;code&gt;position&lt;/code&gt;の値をよしなに更新してますが、それをAngularJS側に返していないためです。&lt;br /&gt;
毎回サーバーからデータを返すと画面がちらつき動作ももっさりしてしまい、せっかくのAngularJSの良さが失われてしまうので、AngularJS側でもTodoの追加、ソート、削除のときに適切にpositionを更新するようにします。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;まずは、Todoの追加をやります。&lt;br /&gt;
作成前に全てのTodoのpositionを&lt;code&gt;+1&lt;/code&gt;します。そして、作成したTodoは一番上に追加されるので、positionを&lt;code&gt;1&lt;/code&gt;にセットします。（リストはpositionの昇順にならんでいる）&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.addTodo = (todoDescription) -&amp;gt;
  raisePositions(&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list)
  todo = &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.create(&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: todoDescription, &lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)
  todo.position = &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.unshift(todo)
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.todoDescription = &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;


raisePositions = (list) -&amp;gt;
  angular.forEach list.todos, (todo) -&amp;gt;
    todo.position += &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;動作確認すると、todoを追加した場合でも、positionの値がうまく更新されているがわかると思います。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;次に、Todo削除をやります。&lt;br /&gt;
削除前に、削除するTodoより下にあるTodosのpositionを&lt;code&gt;-1&lt;/code&gt;します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.deleteTodo = (todo) -&amp;gt;
  lowerPositionsBelow(&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list, todo)
  &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.delete(todo)
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.splice(&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.indexOf(todo), &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)

&lt;span class=&quot;synComment&quot;&gt;# list内の指定したtodoより下のtodosのpositionを-1する&lt;/span&gt;
lowerPositionsBelow = (list, todo) -&amp;gt;
  angular.forEach todosBelow(list, todo), (todo) -&amp;gt;
    todo.position -= &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# list内の指定したtodoより下にあるtodosを取得する&lt;/span&gt;
todosBelow = (list, todo) -&amp;gt;
  list.todos.slice(list.todos.indexOf(todo), list.todos.length)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
動作確認すると、削除した場合でも、positionの値がうまく更新されていると思います。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;最後にソートを行います。&lt;br /&gt;
AngularJSのリスト(ng-repeat)は内部的にindexという値を持っているのでその値をソート後に使います。&lt;br /&gt;
具体的には、ソート後に全てのTodoのpositionにAnguarJSのアイテムのindex値+1(0から始まるので+1する)を設定します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.positionChanged = (todo) -&amp;gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.update(todo, &lt;span class=&quot;synConstant&quot;&gt;target_position&lt;/span&gt;: todo.position)
  updatePositions(&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list)

updatePositions = (list) -&amp;gt;
  angular.forEach list.todos, (todo, index) -&amp;gt;
    todo.position = index + &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;動作確認すると、ソートした場合でも、positionの値がうまく更新されていると思います。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、position確認用の次の記述を削除します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;

- ({{ todo.position }})
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
以上です。&lt;/p&gt;&lt;p&gt;これで、この連載もおわりです。&lt;br /&gt;
長々とここまでお付き合いくださりありがとうございました。&lt;/p&gt;&lt;p&gt;これで、あなたは、RailsとAngularJSを使ってそこそこのアプリケーションを作れるようになったと思います。&lt;br /&gt;
あとは、公式ドキュメントやリファレンス本などで適宜知識を補っていけば良いのではないかと思います。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Tue, 27 Jan 2015 20:12:43 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450081244551</guid>
          
            <category>AngularJS</category>
          
            <category>Rails中級</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 8. AngularJSで編集可能(Editable)なフィールドを作成する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150126/1422276839</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載8回目です。&lt;br /&gt;
今回は、AngularJSで編集可能(Editable)なフィールドを作成し、Todoリスト名とTodoの内容を更新できるようにします。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;テキストをクリックすると変更可能になり、OK/キャンセルボタンで変更を確定/キャンセルできるようにします。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;Editableなライブラリは幾つかあるのですが、マイナーですがUI的に&lt;code&gt;editablespan&lt;/code&gt;を使います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mkwidzinska/editablespan&quot; target=&quot;_blank&quot;&gt;editablespan&lt;/a&gt; - Angular用に作られているが、Star数やコミット数からマイナー。UIは悪くはない。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vitalets.github.io/angular-xeditable/&quot; target=&quot;_blank&quot;&gt;Angular-xeditable&lt;/a&gt; - Angualr用に作られているので、AngularJSで使いやすい。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;i&gt;仕事で使う場合は、&lt;code&gt;angularjs-xeditable&lt;/code&gt;など他のメジャーなものやコミュニティが活発なものを使い、UIはCSSで変えた方が良いです。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;連載記事一覧&lt;/h3&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;li&gt;ransack  1.6.2&lt;/li&gt;
&lt;li&gt;kaminari 0.16.1&lt;/li&gt;
&lt;li&gt;mk-eitablespan 1.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-anguarljs-install&quot;&gt;mk-editablespanのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-anguarljs-usage&quot;&gt;mk-editablespanの使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-anguarljs-editable-list-name&quot;&gt;Todoリスト名を編集可能にする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-anguarljs-editable-todo-desc&quot;&gt;Todo内容を編集可能にする&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-anguarljs-install&quot;&gt;1. mk-editablespanのインストール&lt;/h3&gt;&lt;a href=&quot;https://github.com/mkwidzinska/editablespan&quot; target=&quot;_blank&quot;&gt;mk-editablespan - GitHub&lt;/a&gt;からソースを取得します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;curl https://raw.githubusercontent.com/mkwidzinska/editablespan/master/build/mk-editable-span.min.js &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/mk-editable-span.min.js
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、Railsが&lt;code&gt;mk-eitable-span.min&lt;/code&gt;を読み込むようにします。&lt;br /&gt;
&lt;i&gt;依存関係により&lt;code&gt;angularjs.min&lt;/code&gt;より後ろであり、&lt;code&gt;app&lt;/code&gt;より前である必要があります。&lt;/i&gt;&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;// app/assets/javascripts/application.js&lt;/span&gt;
...
&lt;span class=&quot;synComment&quot;&gt;//= require mk-editable-span.min&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、AngularJSの依存リストに&lt;code&gt;mk.editablespan&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/app.coffee&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# AngularJSの設定ファイル&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# 依存ライブラリを記述する&lt;/span&gt;
app = angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, [&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ui.bootstrap&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ngResource&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ngRoute&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;mk.editablespan&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;])
...
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-anguarljs-usage&quot;&gt;2. mk-editablespanの使い方&lt;/h3&gt;実際に実装する前に、使い方や指定できる属性を確認します。&lt;/p&gt;&lt;p&gt;変更可能なinput要素を配置したい場所に次のようにHTMLを記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;editablespan
&lt;span class=&quot;synIdentifier&quot;&gt;  model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;item.description&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;  on-ready=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;onReady(item)&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;info&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;  input-&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;info-input&amp;quot;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;  input-&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;editablespan&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
使える属性とその説明は次の通りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;model - 表示したいテキストの変数名を指定&lt;/li&gt;
&lt;li&gt;on-ready - テキストを保存後に呼ばれるコールバック関数を指定（ENTERキーを押すと保存にされます）&lt;/li&gt;
&lt;li&gt;span-class - &lt;code&gt;span&lt;/code&gt;要素に適用されるCSSクラス名を指定&lt;/li&gt;
&lt;li&gt;input-class - &lt;code&gt;input&lt;/code&gt;要素に適用されるCSSクラス名を指定&lt;/li&gt;
&lt;li&gt;input-type - &lt;code&gt;input&lt;/code&gt;要素のtype属性の値をHTML5で指定（デフォルトは&lt;code&gt;text&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-anguarljs-editable-list-name&quot;&gt;3. Todoリスト名を編集可能にする&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、&lt;code&gt;mk-editablespan&lt;/code&gt;を使ってTodoリスト名を編集可能にします。&lt;br /&gt;
Todoリスト名({{list.name}})と記載されている箇所を&lt;code&gt;editablespan&lt;/code&gt;を使うように修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel panel-success&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel-heading&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
*    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;editablespan&lt;span class=&quot;synIdentifier&quot;&gt; model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list.name&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; on-ready=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;listNameEdited(list.name)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;editablespan&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Enterキーが押された(保存された)ときのイベントも定義しておきます。&lt;br /&gt;
一応なんの値が渡されるか確認するために、&lt;code&gt;console.log&lt;/code&gt;で&lt;code&gt;listName&lt;/code&gt;を表示するだけにしておきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controlelrs/TodoListCtrl.coffee&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.listNameEdited = (listName) -&amp;gt;
  console.log(listName)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、Todoリスト画面を表示し、タイトルをクリックすると次のように編集ができます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150123/20150123232256.jpg&quot; alt=&quot;f:id:nipe880324:20150123232256j:plain:w480&quot; title=&quot;f:id:nipe880324:20150123232256j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;Enterキーを押すと、&lt;code&gt;on-ready&lt;/code&gt;に指定したメソッドが呼ばれ、今の所は&lt;code&gt;console.log&lt;/code&gt;により、 &lt;b&gt;変更後のTodoリスト名&lt;/b&gt;がJavascriptコンソールに表示されます。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;では、実際にサーバーのDBを更新するようにしていきます。&lt;/p&gt;&lt;p&gt;まず、TodoListサービスクラスの&lt;code&gt;update&lt;/code&gt;メソッドを呼び出すようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controlelrs/TodoListCtrl.coffee&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.listNameEdited = (listName) -&amp;gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@todoListService&lt;/span&gt;.update(&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list, &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: listName)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
TodoListサービスクラスに&lt;code&gt;update&lt;/code&gt;メソッドの中身を実装します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/services/TodoListService.coffee&lt;/span&gt;
...
&lt;span class=&quot;synConstant&quot;&gt;update&lt;/span&gt;: (list, attrs) -&amp;gt;
  new &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;todo_list&lt;/span&gt;: attrs).&lt;span class=&quot;synIdentifier&quot;&gt;$update&lt;/span&gt; {&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: list.id}, (-&amp;gt; null), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# attrs = { name: listName } なので、todo_list: attrs は { todo_list: { name: listName } } となる&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Controller側で params = { todo_list: { name: listName } } となる&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、Railsのコントローラーで&lt;code&gt;update&lt;/code&gt;メソッドを実装します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/api/todo_lists_controller.rb&lt;/span&gt;

before_action &lt;span class=&quot;synConstant&quot;&gt;:set_todo_list&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:update&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;]

...

&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;update&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.update(todo_list_params)
  render &lt;span class=&quot;synConstant&quot;&gt;nothing&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Railsの&lt;code&gt;todo_lists&lt;/code&gt;の&lt;code&gt;update&lt;/code&gt;のルーティングがないので、ルーティングを修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# 変更前&lt;/span&gt;
resources &lt;span class=&quot;synConstant&quot;&gt;:todo_lists&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:create&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# 変更後&lt;/span&gt;
resources &lt;span class=&quot;synConstant&quot;&gt;:todo_lists&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;except&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:edit&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
また、Todoリストを表示するときにtodo_listのIDを返していないので、IDを返すようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/api/todo_lists/show.json.jbuilder&lt;/span&gt;
json.id    &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.id
...
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;では、サーバーを再起動し、動作を確認します。&lt;br /&gt;
先ほどのようにTodoリストのタイトルが変更でき、画面を更新しても値が同じなので、値がサーバーのDBに保存されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150123/20150123232328.jpg&quot; alt=&quot;f:id:nipe880324:20150123232328j:plain:w480&quot; title=&quot;f:id:nipe880324:20150123232328j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-anguarljs-editable-todo-desc&quot;&gt;4. Todo内容を編集可能にする&lt;/h3&gt;Todoリスト名と同様にTodoの内容も編集可能にします。1度実施したのでサクッと行っていきます。&lt;/p&gt;&lt;p&gt;まずは、Todoリスト画面のHTMLを修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-description&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
*  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;editablespan&lt;span class=&quot;synIdentifier&quot;&gt; model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo.description&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; on-ready=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todoDescriptionEdited(todo)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;editablespan&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、TodoListCtrl.coffeeにメソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.todoDescriptionEdited = (todo) -&amp;gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.update(todo, &lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: todo.description)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
TodoService.coffeeには既に&lt;code&gt;update&lt;/code&gt;メソッドが定義されており、RailsのTodosControllerにも&lt;code&gt;update&lt;/code&gt;メソッドが定義されているので完了です。&lt;/p&gt;&lt;p&gt;では、動作を確認してみます。&lt;br /&gt;
次のように、Todoの内容も編集可能になりました。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150123/20150123232414.jpg&quot; alt=&quot;f:id:nipe880324:20150123232414j:plain:w480&quot; title=&quot;f:id:nipe880324:20150123232414j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Mon, 26 Jan 2015 21:53:59 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450081190739</guid>
          
            <category>AngularJS</category>
          
            <category>Rails中級</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 7. AngularJS + Kaminariでページネーション機能を実装</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150123/1422016597</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載7回目です。&lt;br /&gt;
前回は、AngularJSと&lt;a href=&quot;https://github.com/activerecord-hackery/ransack&quot; target=&quot;_blank&quot;&gt;Ransack&lt;/a&gt;を一緒に使い検索機能を実装しました。&lt;/p&gt;&lt;p&gt;今回は、AngularJSと&lt;a href=&quot;https://github.com/amatsuda/kaminari&quot; target=&quot;_blank&quot;&gt;Kaminari&lt;/a&gt;を使い、ページネーションを実装します。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;連載記事一覧&lt;/h3&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;li&gt;ransack  1.6.2&lt;/li&gt;
&lt;li&gt;kaminari 0.16.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-kaminari-install&quot;&gt;kaminariのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-kaminari-pagination&quot;&gt;ページネーションの実装&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-kaminari-install&quot;&gt;1. kaminariのインストール&lt;/h3&gt;&lt;a href=&quot;https://github.com/amatsuda/kaminari&quot; target=&quot;_blank&quot;&gt;Kaminari&lt;/a&gt;をインストールします。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;に&lt;code&gt;kaminari&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# ページネーション機能を追加&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;kaminari&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;bundle install&lt;/code&gt;を実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bundle &lt;span class=&quot;synStatement&quot;&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-kaminari-pagination&quot;&gt;2. ページネーションの実装&lt;/h3&gt;Todoリスト画面の一番下にページネーションを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;
     ...

     &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所　開始 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;pagination&lt;span class=&quot;synIdentifier&quot;&gt; total-items=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;totalTodos&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;currentPage&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-change=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;search()&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;pagination&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所　終了 --&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;dashboard&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-default&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synUnderlined&quot;&gt;戻る&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;ページネーションには、UI Bootstrapを使っています。&lt;br /&gt;
&lt;code&gt;toal-items&lt;/code&gt;には「アイテムの合計数」、&lt;code&gt;currentPage&lt;/code&gt;には「現在のページ番号」、&lt;code&gt;ng-change&lt;/code&gt;は「番号がクリックされたときのイベント」を定義します。また、1ページあたり10アイテムがデフォルトになっています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;詳細は、「&lt;a href=&quot;http://angular-ui.github.io/bootstrap/#/pagination&quot; target=&quot;_blank&quot;&gt;Pagination - UI Bootstrap&lt;/a&gt;」を参照してください。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;次に、&lt;code&gt;totalTodos&lt;/code&gt;(アイテムの合計値)をサーバー側から取得し、設定するようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# 初期データを用意するメソッド&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    ....
    &lt;span class=&quot;synComment&quot;&gt;# データを取得する(GET /api/todo_lists/:id =&amp;gt; Api::TodoLists#show)&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list = &lt;span class=&quot;synIdentifier&quot;&gt;@todoListService&lt;/span&gt;.find(&lt;span class=&quot;synIdentifier&quot;&gt;$routeParams&lt;/span&gt;.list_id, (res)-&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.totalTodos = res.totalTodos)
 ...
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;find&lt;/code&gt;メソッドの第2引数にコールバック関数を記載することで、&lt;code&gt;totalTodos&lt;/code&gt;に値を設定しています。&lt;br /&gt;
これは、ng-resourceのメソッドはサーバーからの結果をまたず次の処理を行うように設計されているので、ng-resourceのブロック内で処理を行わないと正しい値が設定されないためです。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;次にkaminariの１ページのアイテム数のデフォルトが&lt;b&gt;25&lt;/b&gt;ですが、UI Bootstrapのページネーションのデフォルトの&lt;b&gt;10&lt;/b&gt;と合わせておきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/todo.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  paginates_per &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;
  ...
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、&lt;code&gt;page&lt;/code&gt;メソッドを呼び出し１ページのアイテム（10件）しか返さないようにします。&lt;br /&gt;
また、&lt;code&gt;totalTodos&lt;/code&gt;というキーで「アイテムの合計数」も返すようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/api/todo_lists/show.json.jbuilder&lt;/span&gt;
json.name  &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.name
json.todos &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.page(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;todo&lt;/span&gt;|
  json.id          todo.id
  json.description todo.description
  json.completed   todo.completed
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
json.totalTodos  &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.count
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;今度は、検索メソッドを修正します。検索ボタンを押したときだけでなく、ページネーションのリンクをクリックしたときも呼ばれるので、サーバー側に現在のページ番号(currentPage)を送信するようにしておきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.search = -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# Ransackに対応したparamsを作成する&lt;/span&gt;
    params = {
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;q[description_cont]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.descriptionCont,
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;q[completed_true]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;   : &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.completedTrue,
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;                : &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.currentPage
    }

    &lt;span class=&quot;synComment&quot;&gt;# init()と同様にtotalTodosに正しい値が入るように第2引数にコールバック関数を渡す&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list = &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.all(params, (res)-&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.totalTodos = res.totalTodos)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
上記でコールバック関数を渡しているので、Todoサービスクラスの&lt;code&gt;all&lt;/code&gt;メソッドにハンドラーを追加しておきます。&lt;br /&gt;
また、&lt;code&gt;all&lt;/code&gt;メソッド内の&lt;code&gt;query&lt;/code&gt;メソッドが配列を返さないようになるので、&lt;code&gt;isArray: false&lt;/code&gt;も追加する必要があります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/services/TodoService.coffee&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;constructor&lt;/span&gt;: (todoListId, errorHandler) -&amp;gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;$resource&lt;/span&gt;(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/api/todo_lists/:todo_list_id/todos/:id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,
    { &lt;span class=&quot;synConstant&quot;&gt;todo_list_id&lt;/span&gt;: todoListId },
    { &lt;span class=&quot;synConstant&quot;&gt;query&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;isArray&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; }, &lt;span class=&quot;synConstant&quot;&gt;update&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;PUT&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }})
   &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt; = errorHandler

&lt;span class=&quot;synConstant&quot;&gt;all&lt;/span&gt;: (params, successHandler) -&amp;gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;.query(params,((list)-&amp;gt;
    successHandler?(list)
    list),
    &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、TodosControllerのindexメソッドの修正をします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/api/todos_controller.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@q&lt;/span&gt;            = &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.ransack(params[&lt;span class=&quot;synConstant&quot;&gt;:q&lt;/span&gt;]).result &lt;span class=&quot;synComment&quot;&gt;# ransackの検索&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@todos&lt;/span&gt;        = &lt;span class=&quot;synIdentifier&quot;&gt;@q&lt;/span&gt;.page(params[&lt;span class=&quot;synConstant&quot;&gt;:page&lt;/span&gt;])  &lt;span class=&quot;synComment&quot;&gt;# kaminariのページネーション&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@total_todos&lt;/span&gt;  = &lt;span class=&quot;synIdentifier&quot;&gt;@q&lt;/span&gt;.count
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、&lt;code&gt;index.josn.jbuilder&lt;/code&gt;を作成し、アイテムの合計数を&lt;code&gt;totalTodos&lt;/code&gt;で返すようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/views/api/todos/index.json.jbuilder&lt;/span&gt;
json.name &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.name
json.todos &lt;span class=&quot;synIdentifier&quot;&gt;@todos&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;todo&lt;/span&gt;|
  json.id          todo.id
  json.description todo.description
  json.completed   todo.completed
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
json.totalTodos  &lt;span class=&quot;synIdentifier&quot;&gt;@total_todos&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、サーバーを起動して、動作を確認します。&lt;br /&gt;
10件以上だとページネーションが分けられています。検索やページネーションのリンクを押しても問題なく動きます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150123/20150123213547.jpg&quot; alt=&quot;f:id:nipe880324:20150123213547j:plain:w480&quot; title=&quot;f:id:nipe880324:20150123213547j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Fri, 23 Jan 2015 21:36:37 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450081183050</guid>
          
            <category>AngularJS</category>
          
            <category>Rails中級</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 6. AngularJS + Ransackで検索機能を実装</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150122/1421904614</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載６回目です。&lt;br /&gt;
前回は、&lt;code&gt;ng-route&lt;/code&gt;をいれることで、複数のビューファイルをシングルページとして遷移できるようにします。&lt;br /&gt;
前回までで、Todoアプリの基本的な最低限の機能は作成できたので、今回からは使いやすさを改善するための機能を追加していきます。&lt;/p&gt;&lt;p&gt;今回は、検索機能を追加するRansackというgemを使って、AngularJSを使ったTodoの検索機能を追加します。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;連載記事一覧&lt;/h3&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;li&gt;ransack 1.6.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-ransack-install&quot;&gt;ransackのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-ransack-form&quot;&gt;検索フォームとイベントの追加&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-ransack-api&quot;&gt;Rails側で検索APIを実装&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ransack-install&quot;&gt;1. ransackのインストール&lt;/h3&gt;まず、&lt;a href=&quot;https://github.com/activerecord-hackery/ransack&quot; target=&quot;_blank&quot;&gt;ransack&lt;/a&gt;をインストールします。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt;に&lt;code&gt;ransack&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ransack&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;bundle install&lt;/code&gt;を実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bundle &lt;span class=&quot;synStatement&quot;&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ransack-form&quot;&gt;2. 検索フォームとイベントの追加&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;次に、検索フォームを作成します。TodoのDescriptionと完了/未完了で検索できる入力フィールドを追加します。&lt;br /&gt;
AnguarJSのControllerから各入力フィールドの値を取得するため、&lt;code&gt;ng-model&lt;/code&gt;を追加しておきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-init=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;init()&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-cloak&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Todo リスト&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所　開始 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel panel-default&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel-body&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; role=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-submit=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;search()&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-sm-2 control-label&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Description:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-sm-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;descriptionCont&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-sm-2 control-label&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Completed:&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-sm-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;completedTrue&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-sm-offset-2 col-sm-10&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-default&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Search&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所　終了 --&amp;gt;&lt;/span&gt;


  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel panel-success&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel-heading&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;{{list.name}}&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;検索フォームの検索ボタンを押したときに呼ばれる、&lt;code&gt;search()&lt;/code&gt;メソッドをAngularJSのControllerに定義します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.search = -&amp;gt;
  &lt;span class=&quot;synComment&quot;&gt;# Ransackに対応したparamsを作成する&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# description_cont =&amp;gt; descriptionカラムが特定の値を含む(like句に変換される)&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# completed_true   =&amp;gt; completedカラムがtrueか&lt;/span&gt;
  params = {
    &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;q[description_cont]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.descriptionCont,
    &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;q[completed_true]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;   : &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.completedTrue
  }

  &lt;span class=&quot;synComment&quot;&gt;# 検索結果を $scope.list.todos にセットする&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos = &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.all(params)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、TodoServiceクラスに&lt;code&gt;all&lt;/code&gt;メソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/services/TodoService.coffee&lt;/span&gt;

&lt;span class=&quot;synConstant&quot;&gt;all&lt;/span&gt;: (params)-&amp;gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;.query(params, (-&amp;gt; null), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ransack-api&quot;&gt;3. Rails側で検索APIを実装&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;AngularJSのTodoServiceの&lt;code&gt;all&lt;/code&gt;メソッドに対応したRailsの検索APIを追加します。&lt;/p&gt;&lt;p&gt;まずは、ルートを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;
...
namespace &lt;span class=&quot;synConstant&quot;&gt;:api&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;defaults&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;format&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:json&lt;/span&gt; } &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  resources &lt;span class=&quot;synConstant&quot;&gt;:todo_lists&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:create&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# except: [:index] を削除する&lt;/span&gt;
    resources &lt;span class=&quot;synConstant&quot;&gt;:todos&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;except&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:edit&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;]
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;ransack&lt;/code&gt;のgemを入れると、各モデルに&lt;code&gt;ransack&lt;/code&gt;メソッド(別名で&lt;code&gt;search&lt;/code&gt;メソッドもある)が追加されます。&lt;br /&gt;
そのため、TodosControllerに&lt;code&gt;index&lt;/code&gt;メソッドを追加し、その中で&lt;code&gt;ransack&lt;/code&gt;メソッドを使うようにします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/api/todos_controller.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
  render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.ransack(params[&lt;span class=&quot;synConstant&quot;&gt;:q&lt;/span&gt;]).result
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;ransack&lt;/code&gt;メソッドにハッシュでカラム名と値を渡すことでransackの検索モデルが生成されます。&lt;br /&gt;
そして、&lt;code&gt;result&lt;/code&gt;メソッドで検索が実行され、その結果がActiveRecord::Relationで返されます。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;挙動がわかりづらい場合は次のようにいろいろとコンソールから実行してみることをお勧めします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# ransack - ransackの検索モデルを作成する&lt;/span&gt;
&amp;gt; &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;.ransack(&lt;span class=&quot;synConstant&quot;&gt;description_cont&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo 1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;synComment&quot;&gt;# =&amp;gt; Ransack::Search&amp;lt;class: Todo, base: Grouping &amp;lt;conditions: [Condition &amp;lt;attributes: [&amp;quot;description&amp;quot;], predicate: cont, values: [&amp;quot;todo 1&amp;quot;]&amp;gt;], combinator: and&amp;gt;&amp;gt;&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# result - ransackで検索を実施する&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;.ransack(&lt;span class=&quot;synConstant&quot;&gt;description_cont&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo 1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;).result
&lt;span class=&quot;synComment&quot;&gt;#  Todo Load (0.5ms)  SELECT &amp;quot;todos&amp;quot;.* FROM &amp;quot;todos&amp;quot; WHERE (&amp;quot;todos&amp;quot;.&amp;quot;description&amp;quot; LIKE &#39;%todo 1%&#39;)&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# =&amp;gt; #&amp;lt;ActiveRecord::Relation [#&amp;lt;Todo id: 9, todo_list_id: 10, description: &amp;quot;todo 1&amp;quot;, completed: true, created_at: &amp;quot;2015-01-14 10:10:01&amp;quot;, updated_at: &amp;quot;2015-01-14 10:10:09&amp;quot;&amp;gt;, #&amp;lt;Todo id: 18, todo_list_id: 10, description: &amp;quot;todo 10&amp;quot;,  ...]&amp;gt;&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# to_sql - 検索で発行されるSQLを確認することができます。&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;.ransack(&lt;span class=&quot;synConstant&quot;&gt;description_cont&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo 1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;).result.to_sql
&lt;span class=&quot;synComment&quot;&gt;# =&amp;gt; &amp;quot;SELECT \&amp;quot;todos\&amp;quot;.* FROM \&amp;quot;todos\&amp;quot; WHERE (\&amp;quot;todos\&amp;quot;.\&amp;quot;description\&amp;quot; LIKE &#39;%todo 1%&#39;)&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
より詳しく&lt;code&gt;ransack&lt;/code&gt;について知りたい場合は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20141008/1412774436&quot; target=&quot;_blank&quot;&gt;ransackを使って検索機能を作成&lt;/a&gt;」を参考にしてみてください。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、動作を確認します。&lt;br /&gt;
サーバーを起動し、TodoList画面を開きます。検索フォームが追加されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150120/20150120235606.jpg&quot; alt=&quot;f:id:nipe880324:20150120235606j:plain:w480&quot; title=&quot;f:id:nipe880324:20150120235606j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、検索フォームに適当に値を入力し、「検索」ボタンを押すと、検索結果が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150120/20150120235607.jpg&quot; alt=&quot;f:id:nipe880324:20150120235607j:plain:w480&quot; title=&quot;f:id:nipe880324:20150120235607j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Thu, 22 Jan 2015 14:30:14 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450080886605</guid>
          
            <category>Rails中級</category>
          
            <category>AngularJS</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 5. ngRouteでシングルページにする</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150120/1421761471</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載５回目です。&lt;br /&gt;
前回は、RailsでAPIを作成し、AngularJSの&lt;code&gt;ngResource&lt;/code&gt;を使い、そのAPIにアクセスし、Todoリストを作成/更新/削除を永続化できるようにしました。&lt;/p&gt;&lt;p&gt;今回は、&lt;code&gt;ng-route&lt;/code&gt;をいれることで、複数のビューファイルをシングルページとして遷移できるようにします。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;連載記事一覧&lt;/h3&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5. ngRouteでシングルページにする&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;#rails-with-angularjs-ng-route-dashboard&quot;&gt;ダッシュボード画面を作成する&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#rails-with-angularjs-ng-route-install&quot;&gt;ng-routeをインストールする&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#rails-with-angularjs-ng-route-single-page&quot;&gt;ダッシュボード画面とTodoリスト画面をシングルページにする&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#rails-with-angularjs-ng-route-kwsk&quot;&gt;ng-routeとRailsの処理の流れを詳しく&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route-dashboard&quot;&gt;ダッシュボード画面を作成する&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;3回目の記事と4回目の記事の復習も兼ねて、全てのTodoリストを表示するダッシュボード画面を作成します。&lt;br /&gt;
（本来は、ユーザーモデルを作成し、ユーザーごとにダッシュボードを用意するのが普通です。）&lt;/p&gt;&lt;p&gt;まず、ルートを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;

get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/templates/dashboard&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#dashboard&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/templates/todo_list&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#todo_list&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
root &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、このルートから呼ばれる、viewファイルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  app/views/templates/task_list.html.erb&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  仮でhtmlを作成しておく&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;This is index.html.erb&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;



&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  app/views/templates/task_list.html.erb&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  templates/index.html.erb の内容ををごそっと移動させる&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;--&amp;gt;&lt;/span&gt;

... templates/index.html.erb



&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  app/views/templates/task_list.html.erb&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  ダッシュボード画面を作成する&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-controller=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;DashboardCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-init=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;init()&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;ダッシュボード - Dashboard&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel panel-success dashboard-list&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel-heading&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;すべての Todoリスト&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-show=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;lists == 0&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        リストはまだ作成されていません
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;new_list&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-submit=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;createList(listName)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todoDescription&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-control input-lg&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; autofocus=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;autofocus&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; placeholder=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;リスト名&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;255&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;listName&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-group-btn&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-success btn-lg&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;作成&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-repeat=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list in lists&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-list-description&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;/todo_lists/{{ list.id }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synUnderlined&quot;&gt;            {{ list.name }}&lt;/span&gt;
&lt;span class=&quot;synUnderlined&quot;&gt;          &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-list-buttons pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-danger btn-xs pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-click=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;deleteList(list, $index)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;glyphicon glyphicon-ban-circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- /.panel.panel-success.dashboard-list --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に&lt;code&gt;DashboardCtrl&lt;/code&gt;を作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/DashboardCtrl.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;DashboardCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@listsService&lt;/span&gt; = new TodoList(serverErrorHandler)
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.lists = &lt;span class=&quot;synIdentifier&quot;&gt;@listsService&lt;/span&gt;.all()

  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.createList = (listName) -&amp;gt;
    list = &lt;span class=&quot;synIdentifier&quot;&gt;@listsService&lt;/span&gt;.create(&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: listName)
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.lists.push(list)
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.listName = &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.deleteList = (list, index) -&amp;gt;
    &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; confirm &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;リストを削除しますか?&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@listsService&lt;/span&gt;.delete(list)
      &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.lists.splice(index, &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)

  serverErrorHandler = -&amp;gt;
    alert(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;サーバーでエラーが発生しました。画面を更新し、もう一度試してください。&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;AngularJSのTodoListサービスクラスに&lt;code&gt;all, create, delete&lt;/code&gt;メソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/services/TodoListService.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).factory &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoList&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$resource&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;$http&lt;/span&gt;) -&amp;gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;constructor&lt;/span&gt;: (errorHandler) -&amp;gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;$resource&lt;/span&gt;(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/api/todo_lists/:id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,
        { &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;@id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; },
        { &lt;span class=&quot;synConstant&quot;&gt;update&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;PUT&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }})
      &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt; = errorHandler

    &lt;span class=&quot;synConstant&quot;&gt;all&lt;/span&gt;: -&amp;gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;.query((-&amp;gt; null), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;)

    &lt;span class=&quot;synConstant&quot;&gt;find&lt;/span&gt;: (id, successHandler) -&amp;gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;.get(&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: id, ((list)-&amp;gt;
        successHandler?(list)
        list),
        &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;)

    &lt;span class=&quot;synConstant&quot;&gt;create&lt;/span&gt;: (attrs) -&amp;gt;
      new &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;todo_list&lt;/span&gt;: attrs).&lt;span class=&quot;synIdentifier&quot;&gt;$save&lt;/span&gt; ((list) -&amp;gt; attrs.id = list.id), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;
      attrs

    &lt;span class=&quot;synConstant&quot;&gt;delete&lt;/span&gt;: (list) -&amp;gt;
      new &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;().&lt;span class=&quot;synIdentifier&quot;&gt;$delete&lt;/span&gt; { &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: list.id }, (-&amp;gt; null), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次は、TodoListサービスからアクセスするAPIをRails側で作成します。&lt;br /&gt;
&lt;code&gt;routes.rb&lt;/code&gt;に&lt;code&gt;index, create, destroy&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;

namespace &lt;span class=&quot;synConstant&quot;&gt;:api&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;defaults&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;format&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:json&lt;/span&gt; } &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  resources &lt;span class=&quot;synConstant&quot;&gt;:todo_lists&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:create&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    resources &lt;span class=&quot;synConstant&quot;&gt;:todos&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;except&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:edit&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;]
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、&lt;code&gt;TodoListsController&lt;/code&gt;にメソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/todo_lists_controller.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Api&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodoListsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
    before_action &lt;span class=&quot;synConstant&quot;&gt;:set_todo_list&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;]

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
      render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.all
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
      list = &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.create!(todo_list_params)
      render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: list, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;201&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;destroy&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.destroy
      render &lt;span class=&quot;synConstant&quot;&gt;nothing&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synStatement&quot;&gt;private&lt;/span&gt;

      &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;set_todo_list&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt; ||= &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
      &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

      &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;todo_list_params&lt;/span&gt;
        params.require(&lt;span class=&quot;synConstant&quot;&gt;:todo_list&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;)
      &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;では、動作確認をします。ダッシュボードが表示され、TodoListの追加と削除ができることを確認してください。&lt;br /&gt;
img 2&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route-install&quot;&gt;ng-routeをインストールする&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;AngularJSでシングルページのルーティングを行うには、&lt;code&gt;ng-route&lt;/code&gt;モジュールが必要です。まずは、プロジェクトにインストールしていきます。&lt;/p&gt;&lt;p&gt;まず、&lt;a href=&quot;https://angularjs.org/&quot; target=&quot;_blank&quot;&gt;AngularJS 公式ページ&lt;/a&gt;から以下の２つのファイルをダウンロードし、&lt;code&gt;vendor/assets/javascripts/&lt;/code&gt;配下に配置します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;angular-route.min.js&lt;/li&gt;
&lt;li&gt;angular-route.min.js.map&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;curl https://ajax.googleapis.com/ajax/libs/angularjs/1.3.8/angular-route.min.js &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/angular-route.min.js
curl https://ajax.googleapis.com/ajax/libs/angularjs/1.3.8/angular-route.min.js.map &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/angular-route.min.js.map
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、&lt;code&gt;application.js&lt;/code&gt;の&lt;code&gt;angular-resource.min&lt;/code&gt;の後に、下記&lt;code&gt;angular-route.min&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/application.js

&lt;span class=&quot;synComment&quot;&gt;//= require angular-route.min&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、&lt;code&gt;sampleApp&lt;/code&gt;の依存関係に&lt;code&gt;ngResource&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/app.coffee

# AngularJSの設定ファイル
# 依存ライブラリを記述する
app = angular.module(&lt;span class=&quot;synConstant&quot;&gt;&#39;sampleApp&#39;&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;ui.bootstrap&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;ngResource&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;ngRoute&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;)

...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
モジュールが正しくインクルードされていることを確認するために、画面を開き、JavaScriptコンソールにエラーが表示されていないことを確認してください。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114195415.jpg&quot; alt=&quot;f:id:nipe880324:20150114195415j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114195415j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route-single-page&quot;&gt;ダッシュボード画面とTodoリスト画面をシングルページにする&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、&lt;code&gt;ngRoute&lt;/code&gt;を使い、「ダッシュボード画面」と「Todoリスト画面」をシングルページにしていきます。&lt;/p&gt;&lt;p&gt;まず、&lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/provider/$routeProvider&quot; target=&quot;_blank&quot;&gt;$routeProvidor&lt;/a&gt;でルートの設定を記載します&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/app.coffee
...

# ルートの設定
app.config ($routeProvider, $locationProvider) -&amp;gt;
  # html5モードを有効にする
  # / にアクセスすると、 /dashboard にリダイレクトする
  # /dashboard にアクセスすると、 /templates/dashboard.html を表示する（合わせてDashboardCtrlを読み込む)
  # /todo_lists/:list_id にアクセスすると、 /templates/task_list.html を表示する（合わせてTodoListCtrlを読み込む)
  $locationProvider.html5Mode &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
  $routeProvider.when &lt;span class=&quot;synConstant&quot;&gt;&#39;/&#39;&lt;/span&gt;,                    redirectTo:  &lt;span class=&quot;synConstant&quot;&gt;&#39;/dashboard&#39;&lt;/span&gt;
  $routeProvider.when &lt;span class=&quot;synConstant&quot;&gt;&#39;/dashboard&#39;&lt;/span&gt;,           templateUrl: &lt;span class=&quot;synConstant&quot;&gt;&#39;/templates/dashboard.html&#39;&lt;/span&gt;, controller: &lt;span class=&quot;synConstant&quot;&gt;&#39;DashboardCtrl&#39;&lt;/span&gt;
  $routeProvider.when &lt;span class=&quot;synConstant&quot;&gt;&#39;/todo_lists/:list_id&#39;&lt;/span&gt;, templateUrl: &lt;span class=&quot;synConstant&quot;&gt;&#39;/templates/todo_list.html&#39;&lt;/span&gt;, controller: &lt;span class=&quot;synConstant&quot;&gt;&#39;TodoListCtrl&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
html5Modeをtrueにした場合、&lt;code&gt;base&lt;/code&gt;タグが必要になるので、&lt;code&gt;bash href=&quot;/&quot;&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/layouts/application.html.erb

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-app=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;sampleApp&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;AngularjsTest&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  ...&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に&lt;code&gt;index.html.erb&lt;/code&gt;に&lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/directive/ngView&quot; target=&quot;_blank&quot;&gt;ng-view&lt;/a&gt;ディレクティブを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/index.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-view&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;ng-view&lt;/code&gt;をメインの(&lt;code&gt;index.html&lt;/code&gt;)ファイルに記載することで、上記の&lt;code&gt;$routeProvider&lt;/code&gt;で設定したルート通りのテンプレートが表示されたり、リダイレクトが行われたりするようになります&lt;br /&gt;
&lt;code&gt;ng-view&lt;/code&gt;と&lt;code&gt;$routeProvider&lt;/code&gt;はAngularJSでシングルページアプリとしてルーティングするには必須の機能ですので忘れないようにしといてください。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、今度はAngularJSが&lt;code&gt;$routeProvider&lt;/code&gt;での設定に則って、&lt;code&gt;templateUrl&lt;/code&gt;のHTMLにアクセスできるようにRailsのルーティングを修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;

&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.application.routes.draw &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  namespace &lt;span class=&quot;synConstant&quot;&gt;:api&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;defaults&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;format&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:json&lt;/span&gt; } &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    resources &lt;span class=&quot;synConstant&quot;&gt;:todo_lists&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:create&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
      resources &lt;span class=&quot;synConstant&quot;&gt;:todos&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;except&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:edit&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;]
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# 修正箇所 開始&lt;/span&gt;
  get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/dashboard&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;      =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
  get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/todo_lists/:id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
  get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/templates/:path.html&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#template&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;constraints&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;path&lt;/span&gt;: /.+/ }
  &lt;span class=&quot;synComment&quot;&gt;# 修正箇所 終了&lt;/span&gt;

  root &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、Templatesコントローラーに&lt;code&gt;template&lt;/code&gt;メソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/templates_controller.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TemplatesController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
  ...

  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;template&lt;/span&gt;
    render &lt;span class=&quot;synConstant&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;params[&lt;span class=&quot;synConstant&quot;&gt;:path&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;layout&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
ダッシュボート画面とTodoリスト画面から&lt;code&gt;ng-contoller&lt;/code&gt;ディレクティブを削除します。&lt;br /&gt;
(&lt;code&gt;$routeProvider&lt;/code&gt;によりコントローラーを既に指定しているので画面で指定しなくてもよいため。)&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/dashboard.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-init=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;init()&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;ダッシュボード - Dashboard&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...


&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-init=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;init()&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Todo リスト&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
最後に、Todoリスト画面の一番下に「戻る」ボタンを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/todo_list.html.erb --&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;dashboard&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-default&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synUnderlined&quot;&gt;戻る&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 一番下のdiv要素 --&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では画面を確認してみましょう。&lt;br /&gt;
&lt;code&gt;http://localhost:3000/&lt;/code&gt;にアクセスすると、自動的に&lt;code&gt;http://localhost:30000/dashboard&lt;/code&gt;にリダイレクトされ、ダッシュボード画面が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114195434.jpg&quot; alt=&quot;f:id:nipe880324:20150114195434j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114195434j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、todoリストのリンクをクリックすると、&lt;code&gt;http://localhost:30000/todo_lists/:id&lt;/code&gt;に遷移し、Todoリスト画面が表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114195446.jpg&quot; alt=&quot;f:id:nipe880324:20150114195446j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114195446j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;下にある「戻る」ボタンを押せば、ダッシュボード画面に戻れます。&lt;br /&gt;
この間、画面のリロードは行われていないので、シングルページで実装できました。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route-kwsk&quot;&gt;ng-routeとRailsの処理の流れを詳しく&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;上記でダッシュボード画面、Todoリスト画面と画面遷移を確認できましたので、これが裏側でどうなっているかを詳しく流れを追ってみます。&lt;br /&gt;
まず、&lt;code&gt;config/routes.rb&lt;/code&gt;で&lt;code&gt;/, /dashboard, /todo_list/:id&lt;/code&gt;といったこのアプリで使うURLほとんどのURLを&lt;code&gt;tempaltes/index.html.erb&lt;/code&gt;に遷移するようにしています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;

root &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/dashboard&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;      =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/todo_lists/:id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/templates/:path.html&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#template&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;constraints&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;path&lt;/span&gt;: /.+/ }
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;/&lt;/code&gt;にアクセスすると、&lt;code&gt;templates#index.html.erb&lt;/code&gt;が表示されます。&lt;br /&gt;
ここには、&lt;code&gt;ng-view&lt;/code&gt;ディレクティブが記載されていて、これは、&lt;code&gt;$routeProvider&lt;/code&gt;で設定したルートに合わせた画面を表示します(templateToで指定したhtmlファイルを表示したり、redirectToで指定したURLにリダイレクトする)&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/index.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-view&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;/&lt;/code&gt;の場合は、&lt;code&gt;/dashboard&lt;/code&gt;にリダイレクトされると記載されているので、自動的に&lt;code&gt;/dashboard&lt;/code&gt;にリダイレクトされます。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/app.coffee

app.config ($routeProvider, $locationProvider) -&amp;gt;
  $locationProvider.html5Mode &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
  $routeProvider.when &lt;span class=&quot;synConstant&quot;&gt;&#39;/&#39;&lt;/span&gt;,                    redirectTo:  &lt;span class=&quot;synConstant&quot;&gt;&#39;/dashboard&#39;&lt;/span&gt;
  $routeProvider.when &lt;span class=&quot;synConstant&quot;&gt;&#39;/dashboard&#39;&lt;/span&gt;,           templateUrl: &lt;span class=&quot;synConstant&quot;&gt;&#39;/templates/dashboard.html&#39;&lt;/span&gt;, controller: &lt;span class=&quot;synConstant&quot;&gt;&#39;DashboardCtrl&#39;&lt;/span&gt;
  $routeProvider.when &lt;span class=&quot;synConstant&quot;&gt;&#39;/todo_lists/:list_id&#39;&lt;/span&gt;, templateUrl: &lt;span class=&quot;synConstant&quot;&gt;&#39;/templates/todo_list.html&#39;&lt;/span&gt;, controller: &lt;span class=&quot;synConstant&quot;&gt;&#39;TodoListCtrl&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
すると、&lt;code&gt;config/routes.rb&lt;/code&gt;により、また、&lt;code&gt;templates#index.html.erb&lt;/code&gt;が表示されます。&lt;br /&gt;
その中の&lt;code&gt;ng-view&lt;/code&gt;と&lt;code&gt;$routeProvider&lt;/code&gt;の設定により、AngularJSは&lt;code&gt;/templates/dashboard.html&lt;/code&gt;を表示しようとします。&lt;/p&gt;&lt;p&gt;ここで、&lt;code&gt;config/routes.rb&lt;/code&gt;に記載して、次のルートとコントローラーによりより、&lt;code&gt;dashboard.html.erb&lt;/code&gt;が画面に表示されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;
get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/templates/:path.html&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates#template&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;constraints&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;path&lt;/span&gt;: /.+/ }

&lt;span class=&quot;synComment&quot;&gt;# app/controllers/templates_controller.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;template&lt;/span&gt;
  render &lt;span class=&quot;synConstant&quot;&gt;template&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates/&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;#{&lt;/span&gt;params[&lt;span class=&quot;synConstant&quot;&gt;:path&lt;/span&gt;]&lt;span class=&quot;synSpecial&quot;&gt;}&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;layout&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
というように、&lt;code&gt;ng-view&lt;/code&gt;と&lt;code&gt;$routeProvider&lt;/code&gt;の設定により基本的なシングルページのアクセスを行い、そこからのアクセスのために、Railsの&lt;code&gt;config/routes.rb&lt;/code&gt;でルートを通しておくという流れになると思います。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;&lt;p&gt;本連載で、RailsにAngularJSをインストールする箇所から、Controller、Service、ルーティングとAngularJSの機能を一通り使ってきました。&lt;br /&gt;
また、filter, directiveの作成というところはやっていませんが、RailsとAngularJSをどう使ったら良いかというのが少しでもわかっていただけたら幸いです。&lt;/p&gt;&lt;p&gt;他にも良く使うディレクティブがありますので、リファレンスなどを眺めて便利な機能を確認すると良いと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://js.studio-kingdom.com/angularjs&quot;&gt;AngularJS 1.2 &amp;#x65E5;&amp;#x672C;&amp;#x8A9E;&amp;#x30EA;&amp;#x30D5;&amp;#x30A1;&amp;#x30EC;&amp;#x30F3;&amp;#x30B9; | js STUDIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS &amp;mdash; Superheroic JavaScript MVW Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
          <pubDate>Tue, 20 Jan 2015 22:44:31 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450080235956</guid>
          
            <category>Rails中級</category>
          
            <category>AngularJS</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 4. ngResource + Rails API化</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150119/1421666497</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載４回目です。&lt;br /&gt;
前回はAngularJSのコントローラーを作成することで、タスクの追加、削除、完了をしました。&lt;/p&gt;&lt;p&gt;今回は、RailsでAPIを作成します。(モデルやコントローラーなどの作成)&lt;br /&gt;
そして、AngularJSの&lt;code&gt;ngResource&lt;/code&gt;を使い、そのAPIにアクセスし、Todoリストを作成/更新/削除を永続化できるようにします。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt; * 連載記事一覧&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4. ngResource + RailsでAPI作成&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot; target=&quot;_blank&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;#rails-with-angularjs-api&quot;&gt;1. RailsでTodoリストのAPIを作成する&lt;/a&gt;&lt;/h4&gt;
    
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;a href=&quot;#rails-with-angularjs-api-model&quot;&gt;1.1. モデルの追加&lt;/a&gt;&lt;/h5&gt;
    
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;a href=&quot;#rails-with-angularjs-api-route&quot;&gt;1.2. ルーティングの追加&lt;/a&gt;&lt;/h5&gt;
    
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;a href=&quot;#rails-with-angularjs-api-todo_list&quot;&gt;1.3. TodoListの名前とTodoの一覧取得API&lt;/a&gt;&lt;/h5&gt;
    
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;a href=&quot;#rails-with-angularjs-api-todo&quot;&gt;1.4. Todoの追加/更新/削除API&lt;/a&gt;&lt;/h5&gt;
    
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;#rails-with-angularjs-ng-route&quot;&gt;2. AngularJSからAPIにアクセスする&lt;/a&gt;&lt;/h4&gt;
    
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;a href=&quot;#rails-with-angularjs-ng-route-install&quot;&gt;2.1. ng-resourceのインストール&lt;/a&gt;&lt;/h5&gt;
    
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;a href=&quot;#rails-with-angularjs-ng-route-service&quot;&gt;2.2. RailsのAPIにアクセスするサービスクラス(factory)の作成&lt;/a&gt;&lt;/h5&gt;
    
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h5&gt;&lt;a href=&quot;#rails-with-angularjs-ng-route-controller&quot;&gt;2.3. AngularJSのコントローラーからServiceクラスを使う&lt;/a&gt;&lt;/h5&gt;
    &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-api&quot;&gt;1. RailsでTodoリストのAPIを作成する&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まずTodoリストのAPIで必要となる機能を洗い出します。&lt;/p&gt;&lt;p&gt;&lt;tabel&gt;&lt;br /&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;概要&lt;/th&gt;&lt;th&gt;API URL&lt;/th&gt;&lt;th&gt;Railsのコントローラー名#アクション名&lt;/th&gt;&lt;th&gt;対応するAngularJSのメソッド&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;&lt;br /&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TodoListの名前とTodoの一覧取得API&lt;/td&gt;&lt;td&gt;GET /api/todo_lists/:id&lt;/td&gt;&lt;td&gt;TodoLists#show&lt;/td&gt;&lt;th&gt;init()&lt;/th&gt;
      &lt;td&gt;Todoの追加API&lt;/td&gt;&lt;td&gt;POST /api/todo_lists/:todo_list_id/todos&lt;/td&gt;&lt;td&gt;Todos#create&lt;/td&gt;&lt;th&gt;addTodo(todoDescription)&lt;/th&gt;
      &lt;td&gt;Todoの削除API&lt;/td&gt;&lt;td&gt;DELETE /api/todo_lists/:todo_list_id/todo/:id&lt;/td&gt;&lt;td&gt;Todos#destroy&lt;/td&gt;&lt;th&gt;deleteTodo(todo)&lt;/th&gt;
      &lt;td&gt;Todoの更新API(completedなどを更新)&lt;/td&gt;&lt;td&gt;PATCH /api/todo_lists/:todo_list_id/todo/:id&lt;/td&gt;&lt;td&gt;Todos#update&lt;/td&gt;&lt;th&gt;toggleTodo(todo)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;&lt;br /&gt;
&lt;/tabel&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;toggleTodo&lt;/code&gt;メソッド以外は、第3回目で作ったメソッドと対応しています。後ほど、&lt;code&gt;toggleTodo&lt;/code&gt;は作成します。&lt;/p&gt;&lt;p&gt;では、これらを実装していきます。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-api-model&quot;&gt;1.1. モデルの追加&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、TodoListモデルとTodoモデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bin/rails g model TodoList name
bin/rails g model Todo todo_list_id:&lt;span class=&quot;synStatement&quot;&gt;integer&lt;/span&gt; description completed:boolean
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
NOT NULL制約とデフォルト値を設定してきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# db/migrate/yyyymmddhhMMss_create_todo_lists.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;CreateTodoLists&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;change&lt;/span&gt;
    create_table &lt;span class=&quot;synConstant&quot;&gt;:todo_lists&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;t&lt;/span&gt;|
      t.string &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;   &lt;span class=&quot;synComment&quot;&gt;# NOT NULL制約を追加&lt;/span&gt;

      t.timestamps &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# db/migrate/yyyymmddhhMMss_create_todos.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;CreateTodos&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;change&lt;/span&gt;
    create_table &lt;span class=&quot;synConstant&quot;&gt;:todos&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;t&lt;/span&gt;|
      t.integer &lt;span class=&quot;synConstant&quot;&gt;:todo_list_id&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# NOT NULL制約を追加&lt;/span&gt;
      t.string &lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;,   &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# NOT NULL制約を追加&lt;/span&gt;
      t.boolean &lt;span class=&quot;synConstant&quot;&gt;:completed&lt;/span&gt;,    &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;synComment&quot;&gt;# NOT NULL制約とデフォルト値を追加&lt;/span&gt;

      t.timestamps &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
マイグレートを実行します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bin/rake db:migrate
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、モデルファイルに「&lt;b&gt;リレーション&lt;/b&gt;」と「&lt;b&gt;バリデーション&lt;/b&gt;」を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/models/todo_list.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# Todoの作成日の新しい順に取得する&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:todos&lt;/span&gt;, -&amp;gt; { order &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;created_at DESC&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt; }, &lt;span class=&quot;synConstant&quot;&gt;dependent&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;

  validates &lt;span class=&quot;synConstant&quot;&gt;:name&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;# app/models/todo.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:todo_list&lt;/span&gt;

  validates &lt;span class=&quot;synConstant&quot;&gt;:todo_list_id&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;
  validates &lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;,  &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;length&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;maximum&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;255&lt;/span&gt; }
  validates &lt;span class=&quot;synConstant&quot;&gt;:completed&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;inclusion&lt;/span&gt;: { &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;] }
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-api-route&quot;&gt;1.2. ルーティングの追加&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;APIのルーティングを追加します。&lt;br /&gt;
APIなので、ネームスペースに&lt;code&gt;api&lt;/code&gt;にし、デフォルトのフォーマットも&lt;code&gt;json&lt;/code&gt;を指定しています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/rouets.rb&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.application.routes.draw &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;templates/index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

  namespace &lt;span class=&quot;synConstant&quot;&gt;:api&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;defaults&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;format&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:json&lt;/span&gt; } &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
    resources &lt;span class=&quot;synConstant&quot;&gt;:todo_lists&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
      resources &lt;span class=&quot;synConstant&quot;&gt;:todos&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;except&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:edit&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;]
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
上記の設定で作成されたルートを&lt;code&gt;bin/rake routes&lt;/code&gt;で確認します。&lt;br /&gt;
&lt;code&gt;/api/&lt;/code&gt;配下のURIパターンになっていることが確認できます。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ bin/rake routes
             Prefix Verb   URI Pattern                                       Controller#Action
    templates_index GET    /templates/index&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.:format&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;                        templates#index
api_todo_list_todos POST   /api/todo_lists/:todo_list_id/todos&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.:format&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;     api/todos#create &lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt;:&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;:json&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
 api_todo_list_todo PATCH  /api/todo_lists/:todo_list_id/todos/:id&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.:format&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt; api/todos#update &lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt;:&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;:json&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
                    PUT    /api/todo_lists/:todo_list_id/todos/:id&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.:format&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt; api/todos#update &lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt;:&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;:json&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
                    DELETE /api/todo_lists/:todo_list_id/todos/:id&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.:format&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt; api/todos#destroy &lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt;:&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;:json&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
      api_todo_list GET    v&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.:format&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;                     api/todo_lists#show &lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt;:&lt;span class=&quot;synIdentifier&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;:json&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-api-todo_list&quot;&gt;1.3. TodoListの名前とTodoの一覧取得API&lt;/h3&gt;&lt;code&gt;Api::TodoListsController&lt;/code&gt;の&lt;code&gt;show&lt;/code&gt;アクションを作成します。&lt;br /&gt;
&lt;i&gt;ファイルの配置場所は&lt;code&gt;api&lt;/code&gt;ディレクトリ配下であること、コントローラーのソースは&lt;code&gt;module Api&lt;/code&gt;内であることに注意してください。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/api/todo_lists_controller.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Api&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;synTodo&quot;&gt;NOTE&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt; 本来はApi::BaseControllerのようなAPIの共通コントローラーを継承すべき&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodoListsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に&lt;a href=&quot;https://github.com/rails/jbuilder&quot; target=&quot;_blank&quot;&gt;jbuilder&lt;/a&gt;を使ってshowアクションのJSONを実装します。&lt;br /&gt;
JSONの階層構造は、次のように&lt;code&gt;list&lt;/code&gt;に代入する値を返す必要があります。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;$scope.init = -&amp;gt;
  $scope.list = &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;  : &lt;span class=&quot;synConstant&quot;&gt;&#39;Todoリスト1&#39;&lt;/span&gt;,
    &lt;span class=&quot;synConstant&quot;&gt;&#39;todos&#39;&lt;/span&gt; : &lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;description&#39;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;&#39;todo description1&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;completed&#39;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;description&#39;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;&#39;todo description2&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;completed&#39;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;app/views/api/todo_lists/show.json.jbuilder&lt;/code&gt;を作成し、下記を追加してください。(idだけ新たに追加しています)&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;json.name  &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.name
json.todos &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;todo&lt;/span&gt;|
  json.id          todo.id
  json.description todo.description
  json.completed   todo.completed
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、テストのために、&lt;code&gt;bin/rails c&lt;/code&gt;でTodoListとTodoを1つずつ作成しておきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ bin/rails c
&amp;gt; &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.create &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;first todo list&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;  &lt;span class=&quot;synComment&quot;&gt;# id: 1&lt;/span&gt;
&amp;gt; &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.first.todos.create &lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo desc 1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
サーバーを再起動し、&lt;code&gt;localhost:3000/api/todo_lists/1&lt;/code&gt;にアクセスすると次のようにJSONを取得できます。（initメソッドで定義しているデータと同じ階層構造）&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150113/20150113213057.jpg&quot; alt=&quot;f:id:nipe880324:20150113213057j:plain:w480&quot; title=&quot;f:id:nipe880324:20150113213057j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-api-todo&quot;&gt;1.4. Todoの追加/更新/削除API&lt;/h3&gt;&lt;code&gt;TodoListsContoller&lt;/code&gt;と同じように、&lt;code&gt;TodosController&lt;/code&gt;を作成します。&lt;br /&gt;
Todosコントローラーには、Todoの追加/更新/削除を行うために、&lt;code&gt;create / update / destroy&lt;/code&gt;メソッドを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/api/todos_controller.rb&lt;/span&gt;

&lt;span class=&quot;synPreProc&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Api&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodosController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:todo_list_id&lt;/span&gt;])
      todo = &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.create!(todo_params)
      render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: todo, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;201&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;update&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:todo_list_id&lt;/span&gt;])
      todo = &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
      todo.update!(todo_params)
      render &lt;span class=&quot;synConstant&quot;&gt;nothing&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;204&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;destroy&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:todo_list_id&lt;/span&gt;])
      todo = &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
      todo.destroy
      render &lt;span class=&quot;synConstant&quot;&gt;nothing&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;204&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synStatement&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;safe_params&lt;/span&gt;
      params.require(&lt;span class=&quot;synConstant&quot;&gt;:todo&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:completed&lt;/span&gt;)
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;重複しているコードがあるので、リファクタリングをします。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Api&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodosController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
    before_action &lt;span class=&quot;synConstant&quot;&gt;:set_todo_list&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
      todo = &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.create!(todo_params)
      render &lt;span class=&quot;synConstant&quot;&gt;json&lt;/span&gt;: todo, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;201&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;update&lt;/span&gt;
      todo.update!(todo_params)
      render &lt;span class=&quot;synConstant&quot;&gt;nothing&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;204&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;destroy&lt;/span&gt;
      todo.destroy
      render &lt;span class=&quot;synConstant&quot;&gt;nothing&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;204&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synStatement&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;set_todo_list&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:todo_list_id&lt;/span&gt;])
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;todo&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@todo&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;@todo_list&lt;/span&gt;.todos.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;todo_params&lt;/span&gt;
      params.require(&lt;span class=&quot;synConstant&quot;&gt;:todo&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:description&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:completed&lt;/span&gt;)
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
これで一通りAPIが実装できました。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route&quot;&gt;2. AngularJSからAPIにアクセスする&lt;/h3&gt;では、今作成したRailsのAPIにAngularJSからアクセスするようにします。&lt;br /&gt;
&lt;code&gt;angular-resource&lt;/code&gt;というモジュールを使うことで、AngularJSから比較的簡単にAPIにアクセスすることが可能になります。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route-install&quot;&gt;2.1. ng-resourceのインストール&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://angularjs.org/&quot; target=&quot;_blank&quot;&gt;AngularJS 公式ページ&lt;/a&gt;から以下の２つのファイルをダウンロードし、&lt;code&gt;vendor/assets/javascripts/&lt;/code&gt;配下に配置します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;angular-resource.min.js&lt;/li&gt;
&lt;li&gt;angular-resource.min.js.map&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;curl https://ajax.googleapis.com/ajax/libs/angularjs/1.3.8/angular-resource.min.js &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/angular-resource.min.js
curl https://ajax.googleapis.com/ajax/libs/angularjs/1.3.8/angular-resource.min.js.map &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/angular-resource.min.js.map
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、&lt;code&gt;application.js&lt;/code&gt;の&lt;code&gt;angular.min&lt;/code&gt;の後に、下記&lt;code&gt;angular-resource.min&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/application.js

&lt;span class=&quot;synComment&quot;&gt;//= require angular-resource.min&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
そして、&lt;code&gt;sampleApp&lt;/code&gt;の依存関係に&lt;code&gt;ngResource&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/app.coffee

# AngularJSの設定ファイル
# 依存ライブラリを記述する
app = angular.module(&lt;span class=&quot;synConstant&quot;&gt;&#39;sampleApp&#39;&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;ui.bootstrap&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;ngResource&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;)

...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、&lt;code&gt;http://localhost:3000/templates/index&lt;/code&gt;を開き、JavaScriptコンソールでエラーメッセージが発生していないか確認してください。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route-service&quot;&gt;2.2. RailsのAPIにアクセスするサービスクラス(factory)の作成&lt;/h3&gt;RailsのTodoListとTodoのAPIにアクセスするサービスクラスを作成します。&lt;br /&gt;
サービスクラスの作り方には3種類ほどあり、今回はその中の1つのfactoryメソッドを使って作ります。&lt;/p&gt;&lt;p&gt;サービスクラスは、&lt;code&gt;app/assets/javascripts/services/&lt;/code&gt;配下に作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;mkdir&lt;/span&gt; app/assets/javascripts/services
&lt;span class=&quot;synStatement&quot;&gt;touch&lt;/span&gt; app/assets/javascripts/services/TodoListService.coffee
&lt;span class=&quot;synStatement&quot;&gt;touch&lt;/span&gt; app/assets/javascripts/services/TodoService.coffee
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
まずは、TodoListクラス(TodoListのAPIにアクセスするサービスクラス)を作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/services/TodoListService.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).factory &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoList&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$resource&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;$http&lt;/span&gt;) -&amp;gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;constructor&lt;/span&gt;: (errorHandler) -&amp;gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;$resource&lt;/span&gt;(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/api/todo_lists/:id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,
        { &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;@id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; },
        { &lt;span class=&quot;synConstant&quot;&gt;update&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;PUT&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }})
      &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt; = errorHandler

    &lt;span class=&quot;synConstant&quot;&gt;find&lt;/span&gt;: (id, successHandler) -&amp;gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;.get(&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: id, ((list)-&amp;gt;
        successHandler?(list)
        list),
        &lt;span class=&quot;synIdentifier&quot;&gt;@@errorHandler&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、Todoクラス（TodoのAPIにアクセスするサービスクラス）を作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/services/TodoService.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).factory &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$resource&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;$http&lt;/span&gt;) -&amp;gt;
  &lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;
    &lt;span class=&quot;synConstant&quot;&gt;constructor&lt;/span&gt;: (todoListId, errorHandler) -&amp;gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;$resource&lt;/span&gt;(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/api/todo_lists/:todo_list_id/todos/:id&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,
        { &lt;span class=&quot;synConstant&quot;&gt;todo_list_id&lt;/span&gt;: todoListId },
        { &lt;span class=&quot;synConstant&quot;&gt;update&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;method&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;PUT&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; }})
      &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt; = errorHandler

    &lt;span class=&quot;synConstant&quot;&gt;create&lt;/span&gt;: (attrs) -&amp;gt;
      new &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;todo&lt;/span&gt;: attrs).&lt;span class=&quot;synIdentifier&quot;&gt;$save&lt;/span&gt; ((todo) -&amp;gt; attrs.id = todo.id), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;
      attrs

    &lt;span class=&quot;synConstant&quot;&gt;delete&lt;/span&gt;: (todo) -&amp;gt;
      new &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;().&lt;span class=&quot;synIdentifier&quot;&gt;$delete&lt;/span&gt; { &lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: todo.id }, (-&amp;gt; null), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;

    &lt;span class=&quot;synConstant&quot;&gt;update&lt;/span&gt;: (todo, attrs) -&amp;gt;
      new &lt;span class=&quot;synIdentifier&quot;&gt;@service&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;todo&lt;/span&gt;: attrs).&lt;span class=&quot;synIdentifier&quot;&gt;$update&lt;/span&gt; {&lt;span class=&quot;synConstant&quot;&gt;id&lt;/span&gt;: todo.id}, (-&amp;gt; null), &lt;span class=&quot;synIdentifier&quot;&gt;@errorHandler&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;ngResouce&lt;/code&gt;モジュールをインクルードすると、&lt;code&gt;$resouce&lt;/code&gt;メソッドが使えるようになります。&lt;br /&gt;
&lt;code&gt;$resouce&lt;/code&gt;にはURLを指定します。すると、メソッドの返り値では、次のメソッドが使えます。各メソッドを呼ぶと、&lt;code&gt;$resouce&lt;/code&gt;で指定したURLを元にしたRESTfulなHTTPメソッドとURLでアクセスしてくれます。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;get&#39;&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;method:&lt;span class=&quot;synConstant&quot;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;,   &lt;span class=&quot;synComment&quot;&gt;// Railsのshow&lt;/span&gt;
 &lt;span class=&quot;synConstant&quot;&gt;&#39;save&#39;&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;method:&lt;span class=&quot;synConstant&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;,  &lt;span class=&quot;synComment&quot;&gt;// Railsのcreate&lt;/span&gt;
 &lt;span class=&quot;synConstant&quot;&gt;&#39;query&#39;&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;method:&lt;span class=&quot;synConstant&quot;&gt;&#39;GET&#39;&lt;/span&gt;, isArray:&lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;, &lt;span class=&quot;synComment&quot;&gt;// Railsのindex&lt;/span&gt;
 &lt;span class=&quot;synConstant&quot;&gt;&#39;remove&#39;&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;method:&lt;span class=&quot;synConstant&quot;&gt;&#39;DELETE&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;, &lt;span class=&quot;synComment&quot;&gt;// Railsのdelete&lt;/span&gt;
 &lt;span class=&quot;synConstant&quot;&gt;&#39;delete&#39;&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;method:&lt;span class=&quot;synConstant&quot;&gt;&#39;DELETE&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;; &lt;span class=&quot;synComment&quot;&gt;// Railsのdelete&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;// Railsのupdateに対応するメソッドは定義されていないので、&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;// $resouceの第3引数に次のようにしていることで使えるようになる。&lt;/span&gt;
 &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt; update: &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt; method: &lt;span class=&quot;synConstant&quot;&gt;&#39;PUT&#39;&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;}}&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
詳細については、&lt;a href=&quot;http://js.studio-kingdom.com/angularjs/ngresource_service/$resource&quot; target=&quot;_blank&quot;&gt;ng-resource v1.2 - 公式ドキュメント(日本語)&lt;/a&gt;を参照ください。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ng-route-controller&quot;&gt;2.3. AngularJSのコントローラーからServiceクラスを使う&lt;/h3&gt;まずは、&lt;code&gt;init&lt;/code&gt;メソッドを修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# コントローラーを定義する。今はこのように記載すると覚えておけば良い。&lt;/span&gt;
angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synComment&quot;&gt;# 初期データを用意するメソッド&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# TodoListとTodoのサービスオブジェクトを作成&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;synTodo&quot;&gt;TODO&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt; todo_listのidを動的に取得する(次の連載記事で対処)&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@todoListService&lt;/span&gt; = new TodoList()
    &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;     = new Todo(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)
    &lt;span class=&quot;synComment&quot;&gt;# データを取得する(GET /api/todo_lists/:id =&amp;gt; Api::TodoLists#show)&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list = &lt;span class=&quot;synIdentifier&quot;&gt;@todoListService&lt;/span&gt;.find(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)

  ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
一番上の行の&lt;code&gt;TodoListCtrl&lt;/code&gt;のmodule定義の、依存するモジュールを記載する箇所に&lt;code&gt;TodoList&lt;/code&gt;と&lt;code&gt;Todo&lt;/code&gt;を追加します。&lt;br /&gt;
そして、&lt;code&gt;init&lt;/code&gt;メソッド内で、サービスオブジェクトを作成し、サーバーからデータを取得しています。&lt;/p&gt;&lt;p&gt;では、動作を確認してみましょう。&lt;br /&gt;
&lt;code&gt;rails c&lt;/code&gt;で作成したデータが表示されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150113/20150113213217.jpg&quot; alt=&quot;f:id:nipe880324:20150113213217j:plain:w480&quot; title=&quot;f:id:nipe880324:20150113213217j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;他のメソッドも修正する前に、エラーハンドラを追加しておきます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# コントローラーを定義する。今はこのように記載すると覚えておけば良い。&lt;/span&gt;
angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synComment&quot;&gt;# 初期データを用意するメソッド&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# Todoサービスクラスを作成&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;synTodo&quot;&gt;TODO&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt; todo_listのidを動的に取得する&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@todoListService&lt;/span&gt; = new TodoList(serverErrorHandler)
    &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;     = new Todo(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, serverErrorHandler)
    ...

  ...

  serverErrorHandler = -&amp;gt;
    alert(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;サーバーでエラーが発生しました。画面を更新し、もう一度試してください。&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
このエラーハンドラは、サービスクラス内で呼ばれており、サーバーへのアクセスが失敗した時に、アラートを表示するようにしています。&lt;br /&gt;
[&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150113/20150113213314.jpg&quot; alt=&quot;f:id:nipe880324:20150113213314j:plain&quot; title=&quot;f:id:nipe880324:20150113213314j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;:380]&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;code&gt;addTodo&lt;/code&gt;と&lt;code&gt;deleteTodo&lt;/code&gt;メソッドを修正します。&lt;br /&gt;
修正箇所はサービスオブジェクトを使って、サーバーにもアクセスするようにしただけです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# コントローラーを定義する。今はこのように記載すると覚えておけば良い。&lt;/span&gt;
angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    ...

  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.addTodo = (todoDescription) -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# todoを追加する(POST /api/todo_lists/:todo_lsit_id/todos =&amp;gt; Api::Todo#destroy)&lt;/span&gt;
    todo = &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.create(&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;: todoDescription, &lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)
    &lt;span class=&quot;synComment&quot;&gt;# initメソッドで用意したtodosの一番最初にtodoを追加する&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.unshift(todo)
    &lt;span class=&quot;synComment&quot;&gt;# todo入力テキストフィールドを空にする&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.todoDescription = &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;


  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.deleteTodo = (todo) -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# todoをサーバーから削除する(DELETE /api/todo_lists/todo_list_id/todos/:id =&amp;gt; Api::Todo#destroy)&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.delete(todo)
    &lt;span class=&quot;synComment&quot;&gt;# todoをangularjsのlistデータから削除する(indexOfメソッドでtodoのindexを探し、spliceメソッドで削除する)&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.splice(&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.indexOf(todo), &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)

  ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、動作確認をしてみましょう。&lt;br /&gt;
Todoの追加やTodoの削除ができると思います。&lt;br /&gt;
また、画面を更新しても、表示され続けています。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;最後に、Todoを完了にさせます。&lt;br /&gt;
チェックボタンをクリックした時に、&lt;code&gt;toggleTodo&lt;/code&gt;メソッドを呼ぶように、&lt;code&gt;ng-click&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/index.html.erb --&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo.completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-click=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;toggleTodo(todo)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;コントローラー内で&lt;code&gt;toggleTodo&lt;/code&gt;を定義します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;TodoList&lt;/span&gt;, &lt;span class=&quot;synType&quot;&gt;Todo&lt;/span&gt;) -&amp;gt;

  ...

  &lt;span class=&quot;synComment&quot;&gt;# todoの完了カラムをON/OFFするメソッド&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.toggleTodo = (todo) -&amp;gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@todoService&lt;/span&gt;.update(todo, &lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;: todo.completed)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
これで、完了のON/OFFも永続化されるようになりました。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150113/20150113213353.jpg&quot; alt=&quot;f:id:nipe880324:20150113213353j:plain:w480&quot; title=&quot;f:id:nipe880324:20150113213353j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;今回は、RailsのAPIを作成、AngularJSでサービスクラスの作成と、コントローラーの修正をしたので長くなりました。&lt;br /&gt;
Rails with AngularJSのメインとなる山場なので是非ここは理解出来るようにしてください。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
          <pubDate>Mon, 19 Jan 2015 20:21:37 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450080150234</guid>
          
            <category>Rails中級</category>
          
            <category>AngularJS</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 3. AngularJSのコントローラーの作成</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150116/1421407124</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載３回目です。&lt;br /&gt;
前回までは、RailsにAngularJSを導入したり、UI Bootstrapの導入を行いました。&lt;/p&gt;&lt;p&gt;これから本格的にTodoアプリを作っていきます。&lt;br /&gt;
今回は、AngularJSのコントローラーを作成することで、Todoの追加、削除、完了機能を作成します。&lt;br /&gt;
&lt;i&gt;（データの永続化はRailsのAPIと連携する必要があるので、第４回目で説明します）&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt; * 連載記事一覧&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3. AngularJSのコントローラーの作成&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot; target=&quot;_blank&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-controller-html&quot;&gt;Todoリストの雛形を作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-controller-controller&quot;&gt;AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-controller-add_todo&quot;&gt;Todoの追加機能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-controller-remove_todo&quot;&gt;Todoの削除機能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-controller-complete_todo&quot;&gt;Todoの完了機能&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-controller-html&quot;&gt;1. Todoリストの雛形を作成&lt;/h3&gt;では、まず、Todoリストの雛形となるHTMLを作成していきます。&lt;code&gt;index.html.erb&lt;/code&gt;をごそっと下記の内容と入れ替えます。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/index.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-controller=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;TodoListCtrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-init=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;init()&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Todo リスト&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel panel-success&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;panel-heading&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;{{list.name}}&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;new_todo&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todoDescription&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-control input-lg&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; autofocus=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;autofocus&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;255&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-success btn-lg&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;追加&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-repeat=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo in list.todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-description&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;{{todo.description}}&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-buttons pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-danger btn-xs pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;glyphicon glyphicon-ban-circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;ng-controller&lt;/code&gt;ディレクティブは、AngularJSのコントローラーとHTML要素を紐づけることができます。ここでは、&lt;code&gt;TodoListCtrl&lt;/code&gt;とこのHTMLを紐付けています。&lt;br /&gt;
&lt;code&gt;ng-init&lt;/code&gt;は、ページがロードされたときに呼ばれます。TodoListCtrl内の&lt;code&gt;init()&lt;/code&gt;メソッドを呼ぶように設定しています。&lt;br /&gt;
&lt;code&gt;ng-repeta&lt;/code&gt;は、配列などを繰り返しすることができます。&lt;code&gt;li&lt;/code&gt;要素内を&lt;code&gt;list.todos&lt;/code&gt;分だけ繰り返し作成します。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;デザインも追加しておきます。&lt;code&gt;app/assets/stylesheets/todo_list.sass&lt;/code&gt;を作成し、以下の内容をコピーします。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;#new_todo&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;.input-group&lt;/span&gt;
    width: 100%
    display: inline-flex

  &lt;span class=&quot;synIdentifier&quot;&gt;.form-control&lt;/span&gt;:&lt;span class=&quot;synPreProc&quot;&gt;focus&lt;/span&gt;
    z-index: 2

  &lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;[&lt;/span&gt;type&lt;span class=&quot;synSpecial&quot;&gt;=&lt;/span&gt;text&lt;span class=&quot;synSpecial&quot;&gt;]&lt;/span&gt;
    height: auto
    border-radius: 0

  &lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;[&lt;/span&gt;type&lt;span class=&quot;synSpecial&quot;&gt;=&lt;/span&gt;submit&lt;span class=&quot;synSpecial&quot;&gt;]&lt;/span&gt;
    width: 140px
    border-radius: 0

&lt;span class=&quot;synIdentifier&quot;&gt;.list-group-item&lt;/span&gt;
  width: 100%
  display: inline-flex

  &amp;amp;:&lt;span class=&quot;synPreProc&quot;&gt;first-child&lt;/span&gt;
    border-top-left-radius: 0
    border-top-right-radius: 0

  &amp;amp;&lt;span class=&quot;synIdentifier&quot;&gt;.completed&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;.todo-description&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;
      color: &lt;span class=&quot;synIdentifier&quot;&gt;#a9a9a9&lt;/span&gt;
      &lt;span class=&quot;synType&quot;&gt;text-decoration&lt;/span&gt;: line-through

  &lt;span class=&quot;synIdentifier&quot;&gt;.todo-completed&lt;/span&gt;
    display: inline-block
    &lt;span class=&quot;synType&quot;&gt;vertical-align&lt;/span&gt;: top
    margin-top: 7px

  &lt;span class=&quot;synIdentifier&quot;&gt;.todo-list-description&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;.todo-description&lt;/span&gt;
    width: 90%
    margin-left: 10px
    &lt;span class=&quot;synType&quot;&gt;line-height&lt;/span&gt;: 2&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;45em

  &lt;span class=&quot;synIdentifier&quot;&gt;.todo-list-buttons&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;.todo-buttons&lt;/span&gt;
    margin-top: 5px
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-controller-controller&quot;&gt;2. AngularJSのコントローラーの作成&lt;/h3&gt;次にAngularJSのコントローラーを作成します。&lt;br /&gt;
まず、&lt;code&gt;app/assets/javascripts/controllers&lt;/code&gt;というフォルダを作成します。&lt;br /&gt;
そして、&lt;code&gt;TodoListCtrl.coffee&lt;/code&gt;というファイルを作ります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# コントローラーを定義する。今はこのように記載すると覚えておけば良い。&lt;/span&gt;
angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synComment&quot;&gt;# 初期データを用意するメソッド&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# $scope.list.name  としてアクセスできる&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# $scope.list.todos としてアクセスできる&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list = {
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Todoリスト1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : [
        { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo description1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;},
        { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo description2&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;}
      ]
    }
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、ここで画面を表示してみましょう。&lt;br /&gt;
&lt;code&gt;init&lt;/code&gt;メソッドで定義したTodoリスト名(list.name)とTodoの概要(list.todos[x].description)が表示されています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112204901.jpg&quot; alt=&quot;f:id:nipe880324:20150112204901j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112204901j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-controller-add_todo&quot;&gt;3. Todoの追加機能&lt;/h3&gt;では、この調子でコントローラーにメソッドを定義していきましょう。&lt;br /&gt;
テキストフィールドにTodo概要を入力し、「追加」ボタンを押すとTodoをリストに追加するようにします。&lt;/p&gt;&lt;p&gt;まず、Todo概要を&lt;code&gt;ng-model&lt;/code&gt;に紐付け、「追加」ボタンが押された時にTodoListCtrlのメソッドを呼び出すように&lt;code&gt;ng-submit&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/index.html.erb --&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;new_todo&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-submit=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;addTodo(todoDescription)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todoDescription&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-control input-lg&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; autofocus=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;autofocus&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;255&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todoDescription&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-success btn-lg&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;追加&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;ng-submit&lt;/code&gt;はフォームのサブミットボタン（今回は追加ボタン）が押された時に設定しているメソッドが呼び出されるAngularJSのディレクティブです。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;では、TodoListCtrlに&lt;code&gt;ng-submit&lt;/code&gt;によって呼ばれる&lt;code&gt;addTodo(todoDescription)&lt;/code&gt;を定義します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synComment&quot;&gt;# 初期データを用意するメソッド&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# $scope.list.name  としてアクセスできる&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# $scope.list.todos としてアクセスできる&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list = {
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Todoリスト1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : [
        { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo description1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;},
        { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo description2&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;}
      ]
    }


  &lt;span class=&quot;synComment&quot;&gt;# todoを追加する&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.addTodo = (todoDescription) -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# 新しいtodoを作成する&lt;/span&gt;
    todo = { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : todoDescription }

    &lt;span class=&quot;synComment&quot;&gt;# initメソッドで用意したtodosの一番最初にtodoを追加する&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.unshift(todo)

    &lt;span class=&quot;synComment&quot;&gt;# Todo入力テキストフィールドを空にする&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.todoDescription = &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、Todoを追加できることを確認します。&lt;br /&gt;
テキストフィールドにTodo概要を入力します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112204858.jpg&quot; alt=&quot;f:id:nipe880324:20150112204858j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112204858j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;そして、「追加」ボタンを押すと、リストにTodoが追加されました。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112204859.jpg&quot; alt=&quot;f:id:nipe880324:20150112204859j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112204859j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-controller-remove_todo&quot;&gt;4. Todoの削除機能&lt;/h3&gt;今度は、Todoの削除を行います。&lt;br /&gt;
各Todoの右側の赤いボタンを押すとTodoを削除するようにします。&lt;br /&gt;
Todoの追加と同じで、HTMLにディレクティブを追加し、コントローラーにメソッドを追加していきます。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;削除ボタン（各Todoの右側の赤いボタン）に&lt;code&gt;ng-click&lt;/code&gt;ディレクティブを追記します。&lt;br /&gt;
これは、&lt;code&gt;ng-submit&lt;/code&gt;のように、リンクやボタンを押した時に、設定したメソッドを呼び出します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/index.html.erb --&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;btn btn-danger btn-xs pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-click=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;deleteTodo(todo)&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;glyphicon glyphicon-ban-circle&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、TodoListCtrlに&lt;code&gt;ng-click&lt;/code&gt;によって呼ばれる&lt;code&gt;deleteTodo(todo)&lt;/code&gt;を定義します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synComment&quot;&gt;# 初期データを用意するメソッド&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    ...

  &lt;span class=&quot;synComment&quot;&gt;# todoを追加する&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.addTodo = (todoDescription) -&amp;gt;
    ...

  &lt;span class=&quot;synComment&quot;&gt;# todoを削除する&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.deleteTodo = (todo) -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# indexOfメソッドでtodoのindexを探し、spliceメソッドで削除する&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.splice(&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list.todos.indexOf(todo), &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、Todoを削除できることを確認します。&lt;br /&gt;
削除ボタンを押すとTodoが削除されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112204856.jpg&quot; alt=&quot;f:id:nipe880324:20150112204856j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112204856j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-controller-complete_todo&quot;&gt;5. Todoの完了機能&lt;/h3&gt;次はTodoの完了機能を実装していきます。&lt;br /&gt;
Doneチェック(各Todoの左側のチェックボックス)をクリックすることでTodoの完了のON/OFF(表示が変わる)をできるようにします。&lt;/p&gt;&lt;p&gt;チェックボックスに&lt;code&gt;ng-model=&quot;todo.completed&quot;&lt;/code&gt;を追加し、&lt;code&gt;todo.completed&lt;/code&gt;の値とチェックのON/OFFが紐づくようにします。(ON = true, OFF = false)&lt;br /&gt;
そして、&lt;code&gt;ng-class=&quot;{completed: todo.completed}&quot;&lt;/code&gt;により、&lt;code&gt;todo.compled&lt;/code&gt;の値が&lt;code&gt;true&lt;/code&gt;の場合、&lt;code&gt;completed&lt;/code&gt;というclass属性が追加され、&lt;code&gt;false&lt;/code&gt;のときになくなります。&lt;br /&gt;
ちなみに、既に&lt;code&gt;completed&lt;/code&gt;というclass属性にTodoが完了したスタイリングをしています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app/views/templates/index.html.erb --&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;list-group-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-repeat=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo in list.todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;{completed: todo.completed}&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo-completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-model=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;todo.completed&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、TodoListCtrlで作成しているTodoに&lt;code&gt;completed&lt;/code&gt;という属性を&lt;code&gt;false&lt;/code&gt;という値で追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/controllers/TodoListCtrl.coffee&lt;/span&gt;

angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).controller &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;TodoListCtrl&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;) -&amp;gt;

  &lt;span class=&quot;synComment&quot;&gt;# 初期データを用意するメソッド&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.init = -&amp;gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.list = {
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;  : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Todoリスト1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;,
      &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : [
        { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo description1&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; },
        { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;todo description2&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; }
      ]
    }

  &lt;span class=&quot;synIdentifier&quot;&gt;$scope&lt;/span&gt;.addTodo = (todoDescription) -&amp;gt;
    &lt;span class=&quot;synComment&quot;&gt;# todoを作成する&lt;/span&gt;
    todo = { &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : todoDescription, &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt; }
    ...

  ...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、Todoを完了できることを確認します。&lt;br /&gt;
チェックボックスを押すと、Todoが完了になります（スタイリングが変化します）&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112204855.jpg&quot; alt=&quot;f:id:nipe880324:20150112204855j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112204855j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Fri, 16 Jan 2015 20:18:44 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450080047064</guid>
          
            <category>AngularJS</category>
          
            <category>Rails中級</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 2. UI Bootstrapのインストール方法</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150115/1421316461</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載２回目です。&lt;br /&gt;
Todoアプリを作成していく前に、&lt;a href=&quot;http://angular-ui.github.io/bootstrap/&quot; target=&quot;_blank&quot;&gt;AngularJS用のBootstrap(UI Bootstrap)&lt;/a&gt;を導入しましょう。&lt;/p&gt;&lt;p&gt;これを導入することで、タブ、モーダル、ページネーションなどの&lt;b&gt;Bootstrapが提供している機能がAngularJSで使いやすく&lt;/b&gt;なります。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt; * 連載記事一覧&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150114/1421235346&quot;&gt;1. AngularJSのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2. UI Bootstrapのインストール方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot; target=&quot;_blank&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails        4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS    1.3.8&lt;/li&gt;
&lt;li&gt;Bootstrap    3.3.1&lt;/li&gt;
&lt;li&gt;UI Bootstrap 0.12.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-ui-bootstrap-install&quot;&gt;UI Bootstrap のインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-ui-bootstrap-test&quot;&gt;UI Bootstrap の動作確認&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ui-bootstrap-install&quot;&gt;UI Bootstrap のインストール方法&lt;/h3&gt;UI Bootstrapを入れるためには、AngularJSとBootstrap CSSが必要です。&lt;br /&gt;
AngularJSは導入済みのため、Bootstrap CSSを取得します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;curl https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/stylesheets/bootstrap.min.css
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
RailsからBootstrap CSSを読み込むようにするために、&lt;code&gt;application.css&lt;/code&gt;に&lt;code&gt;Bootstrap CSS&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;# app/assets/stylesheets/application&lt;span class=&quot;synIdentifier&quot;&gt;.css&lt;/span&gt;
 &lt;span class=&quot;synStatement&quot;&gt;*&lt;/span&gt;= require bootstrap&lt;span class=&quot;synIdentifier&quot;&gt;.min&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
BootstrapのGlyphiconsも使えるようにしたいので、&lt;a href=&quot;http://getbootstrap.com/getting-started/#download&quot; target=&quot;_blank&quot;&gt;Bootstrap - Download&lt;/a&gt;からzip形式でファイルをダウンロードし、&lt;code&gt;dist/font&lt;/code&gt;を&lt;code&gt;vendor/assets/&lt;/code&gt;に配置します。&lt;/p&gt;&lt;p&gt;そして、&lt;code&gt;applciation.css&lt;/code&gt;に下記を追加します。こうすることで、BootstrapのGlyphiconsが使えるようになります。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;# app/assets/stylesheets/application&lt;span class=&quot;synIdentifier&quot;&gt;.css&lt;/span&gt;
&lt;span class=&quot;synSpecial&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;Glyphicons Halflings&#39;&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;url(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;/assets/glyphicons-halflings-regular.eot&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;synIdentifier&quot;&gt;url(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;/assets/glyphicons-halflings-regular.eot?#iefix&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;format(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;embedded-opentype&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;url(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;/assets/glyphicons-halflings-regular.woff&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;format(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;url(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;/assets/glyphicons-halflings-regular.ttf&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;format(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;truetype&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;url(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;/assets/glyphicons-halflings-regular.svg#glyphicons_halflingsregular&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;format(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;svg&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;)&lt;/span&gt;;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、UI Bootstrapファイルを取得します。&lt;br /&gt;
UI Bootstrapには、２つのファイルが用意されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ui-bootstrap-[version].min.js      - 表示をカスタマイズする必要がある場合。テンプレートを別途用意する必要がある。&lt;/li&gt;
&lt;li&gt;ui-bootstrap-tpls-[version].min.js - 表示をカスタマイズする必要がない場合。Bootstrapのデフォルトのテンプレートが同梱されている。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;今回は、カスタマイズをしなくて良いので、&lt;code&gt;ui-bootstrap-tpls-[version].min.js&lt;/code&gt;を取得します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;curl https://raw.githubusercontent.com/angular-ui/bootstrap/gh-pages/ui-bootstrap-tpls-0.12.0.min.js &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/ui-bootstrap-tpls-0.12.0.min.js
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
こちらも、RailsからUI Bootstrapを読み込むようにするために、&lt;code&gt;application.js&lt;/code&gt;に&lt;code&gt;ui-bootstrap-tpls-0.12.0.min&lt;/code&gt;を追加します。&lt;br /&gt;
（順番が重要です。AngularJSに依存しているので、angular.minの後ろであり、appに依存されているので appの前である必要があります。）&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/application.js
...
&lt;span class=&quot;synComment&quot;&gt;//= require angular.min&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require ui-bootstrap-tpls-0.12.0.min&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require app&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require_tree .&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
アプリがUI Bootstrapを読み込むようにするために、&lt;code&gt;app.coffee&lt;/code&gt;に&lt;code&gt;ui.bootstrap&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/app.coffee
app = angular.module(&lt;span class=&quot;synConstant&quot;&gt;&#39;sampleApp&#39;&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;ui.bootstrap&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;)
&lt;/pre&gt;&lt;p&gt;BootstrapとAngularJSで競合があり、CSSのスタイリングが適用されない問題があるので、次のスタイリングを&lt;code&gt;application.css&lt;/code&gt;に追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;# app/assets/stylesheets/application&lt;span class=&quot;synIdentifier&quot;&gt;.css&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;.nav&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;.pagination&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;.carousel&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;.panel-title&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;cursor&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;pointer&lt;/span&gt;; &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-ui-bootstrap-test&quot;&gt;UI Bootstrap の動作確認&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;動作確認として、ツールチップを使ってみます。&lt;br /&gt;
ページネーション、モーダルなどその他のUI Bootstrapの機能の使い方は、&lt;a href=&quot;http://angular-ui.github.io/bootstrap/&quot; target=&quot;_blank&quot;&gt;UI Bootstrap - 公式ページ&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/templates/index.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Templates#index&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-horizontal&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; label_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;テキスト&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-md-3 control-label&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-md-5&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; text_field_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ng-model&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &amp;quot;text&amp;quot;, class: &amp;quot;form-control&amp;quot; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;form-group&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; label_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :tooltipText, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ツールチップのテキスト&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-md-3 control-label&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;col-md-5&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; text_field_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :tooltipText, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ng-model&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &amp;quot;tooltipText&amp;quot;, class: &amp;quot;form-control&amp;quot; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; tooltip=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;{{tooltipText}}&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;control-label&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synUnderlined&quot;&gt;{{text}}&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
「文字列」と「ツールチップの文字列」を動的にできます。それぞれテキストフィールドに入力した値を表示するようにしています。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112195029.jpg&quot; alt=&quot;f:id:nipe880324:20150112195029j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112195029j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Thu, 15 Jan 2015 19:07:41 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450079862500</guid>
          
            <category>Rails中級</category>
          
            <category>AngularJS</category>
          
            <category>連載</category>
          
        </item>
      
    
      
      
        <item>
          <title>RailsでAngularJSを使ってTodoアプリを作成 - 1. AngularJSのインストール方法</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20150114/1421235346</link>
          <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194806.png&quot; alt=&quot;f:id:nipe880324:20150112194806p:plain&quot; title=&quot;f:id:nipe880324:20150112194806p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」する連載記事を書いてみました。&lt;/p&gt;&lt;p&gt;「RailsでAngularJSを使ってTodoアプリを作成」の連載１回目です。&lt;br /&gt;
まずは、Getting Startedとして、RailsプロジェクトにAngularJSを導入する方法を説明します。&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;連載記事一覧&lt;/h3&gt;
    &lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150114/20150114203508.jpg&quot; alt=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; title=&quot;f:id:nipe880324:20150114203508j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;&lt;a href=&quot;https://rails42-with-angularjs13.herokuapp.com&quot; target=&quot;_blank&quot;&gt;Demo - Todoアプリケーション&lt;/a&gt;&lt;/h4&gt;
    
&lt;ul&gt;
&lt;li&gt;1. AngularJSのインストール方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150115/1421316461&quot;&gt;2. UI Bootstrapのインストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150116/1421407124&quot;&gt;3. AngularJSのコントローラーの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150119/1421666497&quot;&gt;4. ngResource + RailsでAPI作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150120/1421761471&quot;&gt;5. ngRouteでシングルページにする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150122/1421904614&quot;&gt;6. AngularJS + Ransackで検索機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150123/1422016597&quot; target=&quot;_blank&quot;&gt;7. AngularJS + Kaminariでページネーション機能を実装する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150126/1422276839&quot;&gt;8. AngularJSで編集可能(Editable)なフィールドを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20150127/1422357163&quot;&gt;9. AngularJS + Railsでソート可能(Sortable)なリストを作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;AngularJSのディレクティブ、コントローラー、データバインティングなどついて基本的なことを知っていることが前提です。&lt;br /&gt;
もし、AngularJSについて何もわからない場合は、次のサイトを軽くみてAngularJSについて簡単に学んでください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dotinstall.com/lessons/basic_angularjs&quot;&gt;AngularJS&amp;#x5165;&amp;#x9580; (&amp;#x5168;12&amp;#x56DE;) - &amp;#x30D7;&amp;#x30ED;&amp;#x30B0;&amp;#x30E9;&amp;#x30DF;&amp;#x30F3;&amp;#x30B0;&amp;#x306A;&amp;#x3089;&amp;#x30C9;&amp;#x30C3;&amp;#x30C8;&amp;#x30A4;&amp;#x30F3;&amp;#x30B9;&amp;#x30C8;&amp;#x30FC;&amp;#x30EB;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://js.studio-kingdom.com/angularjs/guide/introduction&quot;&gt;AngularJS&amp;#x5165;&amp;#x9580; | AngularJS 1.2 &amp;#x65E5;&amp;#x672C;&amp;#x8A9E;&amp;#x30EA;&amp;#x30D5;&amp;#x30A1;&amp;#x30EC;&amp;#x30F3;&amp;#x30B9; | js STUDIO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;Rails          4.2.0&lt;/li&gt;
&lt;li&gt;AngularJS 1.3.8&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-getting-started-install&quot;&gt;AngularJSの導入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rails-with-angularjs-getting-started-test&quot;&gt;動作確認&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-getting-started-install&quot;&gt;AngularJSの導入&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;まず、Railsプロジェクトを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;rails new angualrjs_test
&lt;span class=&quot;synStatement&quot;&gt;cd&lt;/span&gt; angualrjs_test
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次に、&lt;a href=&quot;https://angularjs.org/&quot; target=&quot;_blank&quot;&gt;AngularJS - 公式ページ&lt;/a&gt;からAngularJSの本体のファイル(angular.min.js)を取得し、&lt;code&gt;vendor/assets/javascripts/&lt;/code&gt;に配置&lt;/p&gt;
&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;curl https://ajax.googleapis.com/ajax/libs/angularjs/1.3.8/angular.min.js &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/angular.min.js
curl https://ajax.googleapis.com/ajax/libs/angularjs/1.3.8/angular.min.js.map &lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt; vendor/assets/javascripts/angular.min.js.map
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
AngularJSの設定ファイルとなる&lt;code&gt;app.coffee&lt;/code&gt;を作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/assets/javascripts/app.coffee&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# AngularJSの設定ファイル&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# 依存ライブラリを記述する&lt;/span&gt;
app = angular.module(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sampleApp&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, [])

&lt;span class=&quot;synComment&quot;&gt;# CSRFのトークンを設定するようにする&lt;/span&gt;
app.config (&lt;span class=&quot;synIdentifier&quot;&gt;$httpProvider&lt;/span&gt;) -&amp;gt;
  authToken = &lt;span class=&quot;synError&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;meta[name=\&amp;quot;csrf-token\&amp;quot;]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;).attr(&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;)
  &lt;span class=&quot;synIdentifier&quot;&gt;$httpProvider&lt;/span&gt;.defaults.headers.common[&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;X-CSRF-TOKEN&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;] = authToken

&lt;span class=&quot;synComment&quot;&gt;# AngularJSがturbolinksと一緒に動くようにする&lt;/span&gt;
&lt;span class=&quot;synError&quot;&gt;$(&lt;/span&gt;document).on &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;page:load&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;, -&amp;gt;
  &lt;span class=&quot;synError&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;[ng-app]&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;).each -&amp;gt;
    &lt;span class=&quot;synPreProc&quot;&gt;module&lt;/span&gt; = &lt;span class=&quot;synError&quot;&gt;$(&lt;/span&gt;this).attr(&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ng-app&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;)
    angular.bootstrap(this, [&lt;span class=&quot;synPreProc&quot;&gt;module&lt;/span&gt;])
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
jqueryとturbolinksも一緒に動くようにするために、&lt;code&gt;jquery-turbolinks&lt;/code&gt;を入れます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# Gemfile&lt;/span&gt;
gem &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;jquery-turbolinks&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;bundle &lt;span class=&quot;synStatement&quot;&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;jquery.turbolinks&lt;/code&gt;、&lt;code&gt;angular.min&lt;/code&gt;、&lt;code&gt;app&lt;/code&gt;を&lt;code&gt;application.js&lt;/code&gt;に追記します。&lt;br /&gt;
（Railsが記載したjsファイルを読み込むようになります）&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;# app/assets/javascripts/application.js
&lt;span class=&quot;synComment&quot;&gt;//= require jquery&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require jquery.turbolinks&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require jquery_ujs&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require turbolinks&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require angular.min&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require app&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;//= require_tree .&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
&lt;code&gt;application.html.erb&lt;/code&gt;に&lt;code&gt;ng-app&lt;/code&gt;ディレクティブを追加します。&lt;br /&gt;
（&lt;code&gt;ng-app&lt;/code&gt;ディレクティブ内がAngularJSにより解析されるので、その中でAngularJSが使えるようになります）&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/layouts/application.html.erb
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- app.coffee の戦闘のangular.moduleで宣言した名前にする --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ng-app=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;sampleApp&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
Railsはproducton環境の場合、アセットをコンパイルすることによりAngularJSが動かなくなります。そのため、&lt;code&gt;production.rb&lt;/code&gt;に&lt;code&gt;config.assets.js_compressor = Uglifier.new(mangle: false)&lt;/code&gt;を追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/developments/production.rb&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# Compress JavaScripts and CSS.&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# config.assets.js_compressor = :uglifier&lt;/span&gt;
config.assets.js_compressor = &lt;span class=&quot;synType&quot;&gt;Uglifier&lt;/span&gt;.new(&lt;span class=&quot;synConstant&quot;&gt;mangle&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;false&lt;/span&gt;)
&lt;span class=&quot;synComment&quot;&gt;# config.assets.css_compressor = :sass&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;rails-with-angularjs-getting-started-test&quot;&gt;2. 動作確認&lt;/h3&gt;&lt;/p&gt;&lt;p&gt;では、動作確認のために、コントローラーを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;rails g controller &lt;span class=&quot;synType&quot;&gt;Templates&lt;/span&gt; index --skip-assets
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
次のように記載します。&lt;br /&gt;
テキストフィールドに&lt;code&gt;ng-model&lt;/code&gt;で&lt;code&gt;name&lt;/code&gt;を定義し、それを、&lt;code&gt;{{name}}&lt;/code&gt;でデータバインティングして動的に表示するようにしています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;# app/views/templates/index.html.erb
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Templates#index&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; label_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :naem, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;名前&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; text_field_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ng-model&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt; &amp;quot;name&amp;quot; %&lt;span class=&quot;synError&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;こんにちは、「{{name}}」さん。&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
テキストフィールドに値をいれると、&lt;b&gt;{{}}で囲んだ箇所&lt;/b&gt;が動的に変化することがわかるとおもいます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194833.jpg&quot; alt=&quot;f:id:nipe880324:20150112194833j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112194833j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;もし、うまく動かない場合は、JavaScriptコンソール(Chromeの場合)を開き、エラーが発生していないか確認してください。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20150112/20150112194844.jpg&quot; alt=&quot;f:id:nipe880324:20150112194844j:plain:w480&quot; title=&quot;f:id:nipe880324:20150112194844j:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;以上です。&lt;/p&gt;

&lt;/div&gt;</description>
          <pubDate>Wed, 14 Jan 2015 20:35:46 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/8454420450079854340</guid>
          
            <category>Rails中級</category>
          
            <category>AngularJS</category>
          
            <category>連載</category>
          
        </item>
      
    
  </channel>
</rss>
