<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>作ってみよう - Rails Webook</title>
    <link>http://ruby-rails.hatenadiary.com/category/%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86</link>
    <description>自社のECを開発している会社で働いています。Rails情報やサービスを成長させる方法を書いていきます</description>
    <lastBuildDate>Fri, 18 Dec 2015 02:44:31 +0900</lastBuildDate>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <generator>Hatena::Blog</generator>
    
      
      
        <item>
          <title>Railsを始めたばかりの人向け！Railsの仕組みを一から理解しながらブログを作成する</title>
          <link>http://ruby-rails.hatenadiary.com/entry/20140813/1407915718</link>
          <description>&lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;初心者が&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の一通りの仕組みを理解できることをために、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の仕組みを一つ一つ理解しながらブログを作成していきます。&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;でのルーティング、コントローラー、モデル、ビューの規約や使い方、Scssでのスタイリングや&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CoffeeScript&quot;&gt;CoffeeScript&lt;/a&gt;での&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Javascript&quot;&gt;Javascript&lt;/a&gt;の記述なども説明します。&lt;/p&gt;&lt;p&gt;&lt;i&gt;&lt;a href=&quot;http://guides.rubyonrails.org/v4.0.6/getting_started.html&quot; target=&quot;_blank&quot;&gt;Rails Guide - Getting Started with Rails&lt;/a&gt;をベースにしました。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;まずは、完成させるブログアプリケーションの画面です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813160348.png&quot; alt=&quot;f:id:nipe880324:20140813160348p:plain:w320&quot; title=&quot;f:id:nipe880324:20140813160348p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;動作確認&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt; 2.0&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt; 4.1&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Mac%20OS%20X&quot;&gt;Mac OS X&lt;/a&gt; 10.9 &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;前提条件&lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt; がインストール済み&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt; 4 がインストール済み&lt;/li&gt;
&lt;li&gt;SQLite3データベースがインストール済み&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;i&gt;※もしインストールされていない場合は、「Rails4 インストール」などで&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Google&quot;&gt;Google&lt;/a&gt;検索してインストールしてください&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h3&gt;目次&lt;/h3&gt;
    
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#what-is-rails&quot;&gt;Railsとは&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#create-new-rails-project&quot;&gt;新しいRailsプロジェクトを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hello-rails&quot;&gt;Hello, Rails! を表示する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#getting-up-and-running&quot;&gt;投稿機能を作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#adding-a-second-model&quot;&gt;コメントを追加する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#refactoring&quot;&gt;リファクタリング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#deleting-comments&quot;&gt;コメントを削除する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#security&quot;&gt;HTTP認証を追加する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#styling&quot;&gt;画面のスタイリングをする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#coffee-script&quot;&gt;CoffeeScriptでJavaScriptを使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#what-is-next&quot;&gt;次は？&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;what-is-rails&quot;&gt;1. &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;とは&lt;/h3&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0%B8%C0%B8%EC&quot;&gt;プログラミング言語&lt;/a&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt;で書かれたWebアプリケーション開発&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%D5%A5%EC%A1%BC%A5%E0%A5%EF%A1%BC%A5%AF&quot;&gt;フレームワーク&lt;/a&gt;です。&lt;br /&gt;
「設定よりも規約」とい考えで、いろいろとルールを決めることでWebアプリケーションを簡易に開発できようにするという設計思想のもとに作られています。このため、この規約を守ることで、他の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0%B8%C0%B8%EC&quot;&gt;プログラミング言語&lt;/a&gt;や&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%D5%A5%EC%A1%BC%A5%E0%A5%EF%A1%BC%A5%AF&quot;&gt;フレームワーク&lt;/a&gt;よりも少ない&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;（生産性が高い）でWebアプリケーションを開発できます。&lt;br /&gt;
これにより、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;開発者の多くは、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;でのWebアプリケーション開発は楽しいものであると感じています。&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の規約に基づいた開発を学ぶことで、素晴らしい生産性の向上を体感するでしょう。他の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0%B8%C0%B8%EC&quot;&gt;プログラミング言語&lt;/a&gt;での古い考え方にいつまでも固執していると、Webアプリケーション開発が楽しくないものになってしまうかもれません。&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の主要な２つの原則&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DRY（Don&#39;t Repeat Yourself）- 同じコードを何度も書くことは良くないという考え&lt;/li&gt;
&lt;li&gt;設定より規約（Convention Over Configuration）- 設定ファイルに細かな設定情報を記載するのではなく、ファイル名やクラス名などの規約があらかじめ&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;によって決められている&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;
&lt;h3 id=&quot;#create-new-rails-project&quot;&gt;2. 新しい&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;プロジェクトを作成する&lt;/h3&gt;実際に手を動かしながら以降の説明を実施していくと理解が深まるのでお勧めです。&lt;br /&gt;
この記事では、「簡単なブログアプリケーションを作成」していきます。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;2.1. ブログアプリケーションの作成&lt;/h4&gt;
    &lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;には「ジェネレーター」と呼ばれる&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8&quot;&gt;スクリプト&lt;/a&gt;があり、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;でなにか作業を始めるときの最初のステップとしてよく使う&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8&quot;&gt;スクリプト&lt;/a&gt;郡ですので覚えておいてください。&lt;br /&gt;
新しい&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;アプリケーションを作成するときもこの「ジェネレーター」を使うことができます。&lt;/p&gt;&lt;p&gt;ターミナルを開いて、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;アプリケーションを作成したいフォルダに移動して、次のコマンドを実行してください。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails new blog&lt;/pre&gt;&lt;p&gt;このコマンドは内部的に、&lt;code&gt;blog&lt;/code&gt;フォルダを作成し、そのフォルダ内に「Blog」という&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;アプリケーションに必要なファイルを作成しています。その後、&lt;code&gt;bundle install&lt;/code&gt;を行い&lt;code&gt;Gemfile&lt;/code&gt;内に記載されているgemをインストールしています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;code&gt;rails new -h&lt;/code&gt;コマンドで全ての&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%E9%A5%A4%A5%F3&quot;&gt;コマンドライン&lt;/a&gt;オプションを確認できます。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;ブログアプリケーションで作業をするために作成したblogフォルダに移動します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ cd blog&lt;/pre&gt;&lt;p&gt;&lt;code&gt;rails new blog&lt;/code&gt;コマンドは、自動で&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;のフォルダ構成、ファイルを作成します。この&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C1%A5%E5%A1%BC%A5%C8%A5%EA%A5%A2%A5%EB&quot;&gt;チュートリアル&lt;/a&gt;では、&lt;code&gt;app/&lt;/code&gt;配下のファイルを修正することが多くなりますが、その他のフォルダも重要です。そのため、デフォルトで作成されるフォルダとファイルの基礎をまとめておきました。&lt;br /&gt;
&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140709/1404912093&quot; target=&quot;_blank&quot;&gt;Railsのフォルダ構造の説明&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;hello-rails&quot;&gt;3. Hello, &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;! を表示する&lt;/h3&gt;まずは、画面にテキストを表示させてみましょう。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;3.1. Webサーバーを起動する&lt;/h4&gt;
    &lt;p&gt;実は今の段階で既に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;アプリケーションは機能します。開発マシン上でWebサーバーを起動させましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails server&lt;/pre&gt;&lt;p&gt;&lt;i&gt;※&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CoffeeScript&quot;&gt;CoffeeScript&lt;/a&gt;を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB&quot;&gt;コンパイル&lt;/a&gt;するために「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;ランタイム」が必要です。もし、「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;ランタイム」が存在しない場合、&lt;code&gt;execjs error&lt;/code&gt;が発生します。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Mac%20OS%20X&quot;&gt;Mac OS X&lt;/a&gt;や&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Windows&quot;&gt;Windows&lt;/a&gt;では「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;ランタイム」は通常はインストールされているので問題ありません。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;コマンドを実行すると、Webサーバーの&lt;code&gt;WeBrick&lt;/code&gt;が起動します。動作を確認するために、ブラウザを開き、&lt;code&gt;http://localhost:3000&lt;/code&gt;にアクセスしてください。デフォルトのインフォページが表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812025948.png&quot; alt=&quot;f:id:nipe880324:20140812025948p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812025948p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;※Webサーバーを止めるには、ターミナル内で&lt;code&gt;Ctrl+C&lt;/code&gt;を押して下さい。&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;を変更したときにサーバーが自動的に読み込むを行うのでサーバーの再起動は必要ありません。ルーティングなどの設定ファイルを変更した場合はサーバーの再起動が必要です。変更したのに画面上で変化がないときはサーバーの再起動をするようにしてみてください。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;画面にインフォページが表示されるということは、画面を表示するために十分な設定が正しく行われているという証拠です。また、この画面上部にある&quot;About your application’s environment&quot;リンクをクリックすることでアプリケーション環境を確認することができます。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;3.2. &quot;Hello, &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;&quot;を画面表示&lt;/h4&gt;
    &lt;p&gt;&quot;Hello, &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;&quot;を画面表示するためには、少なくともコントローラーとビューを作成する必要があります。&lt;/p&gt;&lt;p&gt;コントローラーの目的は、アプリケーションへのリクエストを処理することです。ルーティングは、どのコントローラーがどのリクエストを処理するかを決めます。つまり、リクエストされたURLとコントローラーの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0&quot;&gt;マッピング&lt;/a&gt;を行っています。たいていは、コントローラーは&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4&quot;&gt;複数&lt;/a&gt;のルートを処理できるので、それぞれのルートはコントローラー内のそれぞれのアクション（コントローラーの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;のことをアクションと呼ぶ）に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0&quot;&gt;マッピング&lt;/a&gt;されます。アクション内では、情報を集め、それをビューに渡しています。&lt;/p&gt;&lt;p&gt;ビューの目的は、人間が読める形式で情報を表示することです。重要なことは、表示する情報を集めるのはコントローラーであり、ビューではないということです。ビューはコントローラーが集めた情報を表示することに専念すべきです。デフォルトでは、ビューテンプレートはERB(組み込み&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt;)という言語で書かれています。&lt;/p&gt;&lt;p&gt;コントローラーを作成するために、「ジェネレーター」に&lt;code&gt;controller&lt;/code&gt;を指定し、&lt;code&gt;welcome&lt;/code&gt;というコントローラ名、そして、&lt;code&gt;index&lt;/code&gt;というアクションを指定します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails generate controller welcome index&lt;/pre&gt;&lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;はいくつかのファイルと１つのルートを追加します。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;    create  app/controllers/welcome_controller.rb
     route  get &amp;#39;welcome/index&amp;#39;
    invoke  erb
    create    app/views/welcome
    create    app/views/welcome/index.html.erb
    invoke  test_unit
    create    test/controllers/welcome_controller_test.rb
    invoke  helper
    create    app/helpers/welcome_helper.rb
    invoke    test_unit
    create      test/helpers/welcome_helper_test.rb
    invoke  assets
    invoke    coffee
    create      app/assets/javascripts/welcome.js.coffee
    invoke    scss
    create      app/assets/stylesheets/welcome.css.scss&lt;/pre&gt;&lt;p&gt;これらのファイルのなかで一番重要なのは、&lt;br /&gt;
「コントローラー(&lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt;)」と&lt;br /&gt;
「ビュー(&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;)」です。&lt;/p&gt;&lt;p&gt;&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C6%A5%AD%A5%B9%A5%C8%A5%A8%A5%C7%A5%A3%A5%BF&quot;&gt;テキストエディタ&lt;/a&gt;で開きましょう。&lt;br /&gt;
全てのコードを削除し、次のコードを記載して保存してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Hello, Rails!&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;3.3. アプリケーションのルート画面を設定&lt;/h4&gt;
    &lt;p&gt;さて、私たちは今コントローラーとビューを作成しました。ルートURL(&lt;code&gt;http://localhost:3000&lt;/code&gt;)にアクセスしたときに、&quot;Hello, &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;!&quot;を画面に表示させたいです。しかし、今は&quot;Welcome Aboard&quot;のインフォページが表示されてしまいます。&lt;/p&gt;&lt;p&gt;これを解消するために、ルートを指定する必要があります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;Rails&lt;/span&gt;.application.routes.draw &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  get &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;welcome/index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# The priority is based upon order of creation: first created -&amp;gt; highest priority.&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# See how all your routes lay out with &amp;quot;rake routes&amp;quot;.&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# You can have the root of your site routed with &amp;quot;root&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# root &#39;welcome#index&#39;&lt;/span&gt;
  ...
&lt;/pre&gt;&lt;p&gt;これはアプリケーションのルーティングファイルです。特殊な&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/DSL&quot;&gt;DSL&lt;/a&gt;(Domain-Specific-Language)で書かれており、アプリケーションへのリクエストをコントローラーとアクションに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0&quot;&gt;マッピング&lt;/a&gt;しています。このファイル内には既にいくつかのサンプルが&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B3%A5%E1%A5%F3%A5%C8%A5%A2%A5%A6%A5%C8&quot;&gt;コメントアウト&lt;/a&gt;されて記載されています。その中の一つに、ルートURLをコントローラーとアクションに結びつけている記載があります。&lt;code&gt;root&lt;/code&gt;から始まる&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B3%A5%E1%A5%F3%A5%C8%A5%A2%A5%A6%A5%C8&quot;&gt;コメントアウト&lt;/a&gt;されている行を探して、コメントを外して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# config/routes.rb&lt;/span&gt;
  root &lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;welcome#index&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&#39;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;root &#39;welcome#index&#39;&lt;/code&gt;はルートへのリクエストを&lt;code&gt;Welcome&lt;/code&gt;コントローラーの&lt;code&gt;index&lt;/code&gt;アクションに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0&quot;&gt;マッピング&lt;/a&gt;させることを意味しています。&lt;br /&gt;
また、&lt;code&gt;get &#39;welcome/index&#39;&lt;/code&gt;は&lt;code&gt;http://localhost:3000/welcome/index&lt;/code&gt;へのリクエストを&lt;code&gt;Welcome&lt;/code&gt;コントローラーの&lt;code&gt;index&lt;/code&gt;アクションに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0&quot;&gt;マッピング&lt;/a&gt;させることを意味しています。これは、&lt;code&gt;rails generate controller welcome index&lt;/code&gt;コマンドを実行したときに作られたルートです。&lt;/p&gt;&lt;p&gt;ブラウザで&lt;code&gt;http://localhost:3000&lt;/code&gt;にアクセスしましょう。&lt;br /&gt;
すると、&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;に記載された&quot;Hello, &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;!&quot;メッセージが表示されるます。&lt;br /&gt;
これは、&lt;code&gt;config/routes.rb&lt;/code&gt;内に追加したルートが&lt;code&gt;Welcome&lt;/code&gt;コントローラーの&lt;code&gt;index&lt;/code&gt;アクションに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0&quot;&gt;マッピング&lt;/a&gt;され、&lt;code&gt;index&lt;/code&gt;アクションが&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;したからです。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;code&gt;index&lt;/code&gt;アクションを確認すると、アクション内に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;が記載されていません。しかし、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;はビューを&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;の&lt;code&gt;render&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;が呼ばれていないときは、暗黙でコントローラー名とアクション名から&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;するビューファイルを推測します。今回の場合、コントローラ名が&lt;code&gt;Welcome&lt;/code&gt;でアクション名が&lt;code&gt;index&lt;/code&gt;なので、&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;が&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;されます。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812031054.png&quot; alt=&quot;f:id:nipe880324:20140812031054p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812031054p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;getting-up-and-running&quot;&gt;4. 投稿機能を作成する&lt;/h3&gt;さて、あなたはもうすでに「コントローラー、アクション、ビューの作成方法」を知ることができました。&lt;br /&gt;
それでは、ブログの投稿機能を作っていきましょう。&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;では、標準的なRESTリソースを宣言するために使われる&lt;code&gt;resources&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;が定義されています。&gt;|&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/ruby&quot;&gt;ruby&lt;/a&gt;|&lt;br /&gt;
# config/routes.rb&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;.application.routes.draw do&lt;/p&gt;&lt;p&gt;  resources :posts&lt;/p&gt;&lt;p&gt;  root &#39;welcome#index&#39;&lt;br /&gt;
end&lt;br /&gt;
|&lt;/p&gt;

&lt;/div&gt;&lt;p&gt;ターミナルで&lt;code&gt;rake routes&lt;/code&gt;を実行すると、標準のRESTfulアクションのルートを確認することができます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake routes
   &lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;               &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
    posts &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;          posts#index&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;          POST   &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;posts(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)          posts&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
 new_post &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/ne&lt;/span&gt;w(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      posts&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
edit_post &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;/edit(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;) posts&lt;span class=&quot;synComment&quot;&gt;#edit&lt;/span&gt;
     post &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      posts&lt;span class=&quot;synComment&quot;&gt;#show&lt;/span&gt;
          &lt;span class=&quot;synType&quot;&gt;PATCH&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      posts&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
          &lt;span class=&quot;synType&quot;&gt;PUT&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      posts&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
          &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      posts&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
     root &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    /                         welcome&lt;span class=&quot;synComment&quot;&gt;#index&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;それでは、新しい投稿(&lt;code&gt;Post&lt;/code&gt;)を作成する機能とフォームを追加します。&lt;br /&gt;
これは、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CRUD&quot;&gt;CRUD&lt;/a&gt;操作の&lt;code&gt;作成(Create)&lt;/code&gt;と&lt;code&gt;検索(Read)&lt;/code&gt;に当てはまります。これから作成するフォームは次のようになります。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812034136.png&quot; alt=&quot;f:id:nipe880324:20140812034136p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812034136p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;今のところ見た目がもっさいですが、まあいいでしょう。最後の方の９番目の大項目でスタイリングを改善していきます。&lt;/p&gt;

&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.1. 前準備の実施&lt;/h4&gt;
    &lt;p&gt;アプリケーションに新しい投稿を作成する最初のステップは、「ルーティング」です。&lt;br /&gt;
&lt;code&gt;/posts/new&lt;/code&gt;のURLにアクセスすることで投稿を作成します。しかし、&lt;code&gt;resouces&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;により既にそのルートは定義されています。&lt;/p&gt;&lt;p&gt;画面から&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;にアクセスしてください。ルーティングエラーが発生するでしょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812032446.png&quot; alt=&quot;f:id:nipe880324:20140812032446p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812032446p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;このエラーの原因は、「リクエストを処理するためのコントローラーを必要としているが、そのコントローラーが存在していなかった」ためです。&lt;br /&gt;
そのため&lt;code&gt;PostsController&lt;/code&gt;を作成すれば解決します。次のコマンドでコントローラーを作成しましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rails generate controller posts&lt;/pre&gt;&lt;p&gt;空のコントローラーが表示されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# app/controllers/posts_controller.rb&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;PostsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;コントローラーは&lt;code&gt;ApplicationController&lt;/code&gt;を継承したクラスです。コントローラークラス内に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を定義することで、それがコントローラーのアクションとなります。通常そのアクションはPostに対する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CRUD&quot;&gt;CRUD&lt;/a&gt;操作を行います。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt;にはpublic, private, protected&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;があります。public&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;だけがコントローラーのアクションとなります。privateやprotected&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;はアクションにはならないことに注意して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;にアクセスし直すと、新しいエラーが表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812032733.png&quot; alt=&quot;f:id:nipe880324:20140812032733p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812032733p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;このエラーは、「&lt;code&gt;PostsController&lt;/code&gt;内に&lt;code&gt;new&lt;/code&gt;アクションを見つからなかった」ということを表しています。&lt;/p&gt;&lt;p&gt;&lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt;をエディタで開き、&lt;code&gt;PostsController&lt;/code&gt;クラス内に&lt;code&gt;new&lt;/code&gt;アクションを定義しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;PostsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /posts/new&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;new&lt;/span&gt; 
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;new&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を定義したので、&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;にアクセスし直しましょう。また新しいエラーが発生します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812032951.png&quot; alt=&quot;f:id:nipe880324:20140812032951p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812032951p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;「アクションを処理した後にビュー（テンプレート）を表示しようとしたが、それが存在しなかった」ためエラーが発生しています。&lt;/p&gt;&lt;p&gt;上記の画像のエラー文を細かく見てみましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Missing&lt;/span&gt; template posts/new, application/new
with {&lt;span class=&quot;synConstant&quot;&gt;locale&lt;/span&gt;:[&lt;span class=&quot;synConstant&quot;&gt;:en&lt;/span&gt;], &lt;span class=&quot;synConstant&quot;&gt;formats&lt;/span&gt;:[&lt;span class=&quot;synConstant&quot;&gt;:html&lt;/span&gt;], &lt;span class=&quot;synConstant&quot;&gt;handlers&lt;/span&gt;:[&lt;span class=&quot;synConstant&quot;&gt;:erb&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:builder&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:coffee&lt;/span&gt;]}.
&lt;span class=&quot;synType&quot;&gt;Searched&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt;: * &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/path/to/blog/app/views&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;それぞれの部分が何を意味しているかささっと確認しましょう。&lt;/p&gt;&lt;p&gt;最初の部分は、何のテンプレートが存在しなかったかを示しています。今回の場合、&lt;code&gt;posts/new&lt;/code&gt;テンプレートです。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は最初にこのテンプレートを探します。そしてもし見つけれなかった場合、今度は&lt;code&gt;application/new&lt;/code&gt;テンプレートを表示しようと試みます。これは、&lt;code&gt;PostsControler&lt;/code&gt;が&lt;code&gt;ApplicationController&lt;/code&gt;を継承しているためです。&lt;/p&gt;&lt;p&gt;次の部分は、ハッシュです。&lt;code&gt;locale&lt;/code&gt;キーはテンプレートがどの言語を使うべきかを示しいます。デフォルトは「&lt;code&gt;英語(:en)&lt;/code&gt;」です。&lt;br /&gt;
次の&lt;code&gt;formats&lt;/code&gt;キーはテンプレートの形式を表しています。デフォルトは「&lt;code&gt;HTML(html)&lt;/code&gt;」のため、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;はHTMLテンプレートを探します。&lt;br /&gt;
最後の&lt;code&gt;handlers&lt;/code&gt;キーはテンプレートを&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;するためにどのテンプレートハンドラーを使えるか表しています。今回の場合で言うと、&lt;code&gt;erb&lt;/code&gt;はHTMLテンプレート用、&lt;code&gt;builder&lt;/code&gt;は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/XML&quot;&gt;XML&lt;/a&gt;テンプレート用に使われ、&lt;code&gt;coffee&lt;/code&gt;は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CoffeeScript&quot;&gt;CoffeeScript&lt;/a&gt;を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;テンプレートに変換するために使われます。&lt;/p&gt;&lt;p&gt;最後の部分は、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;がテンプレートファイルを探すパスを表しています。&lt;/p&gt;&lt;p&gt;今回のエラーを解消するための一番簡単なテンプレートは、&lt;code&gt;app/views/posts/new.html.erb&lt;/code&gt;ファイルを作成することです。１つ目の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2&quot;&gt;拡張子&lt;/a&gt;(html)がテンプレートのフォーマットであり、２つ目の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2&quot;&gt;拡張子&lt;/a&gt;(erb)がテンプレートのハンドラーを表します。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は&lt;code&gt;app/views/&lt;/code&gt;配下から&lt;code&gt;posts/new&lt;/code&gt;テンプレートを探します。&lt;br /&gt;
今私たちはHTMLフォームを作りたいので、フォーマットは&lt;code&gt;html&lt;/code&gt;、そして、ハンドラーは&lt;code&gt;erb&lt;/code&gt;としました。そのため、ファイルは&lt;code&gt;app/views/posts/new.html.erb&lt;/code&gt;にするべきです。&lt;/p&gt;&lt;p&gt;エラーを解消するために、&lt;code&gt;app/views/posts/new.html.erb&lt;/code&gt;を新たに作成し、次の内容を記載してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;新しい投稿&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;にアクセスすると画面が表示されるはずです。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812033848.png&quot; alt=&quot;f:id:nipe880324:20140812033848p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812033848p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;ルート、コントローラー、アクションそしてビューが連動して上手く動いています。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.2. 最初のフォーム&lt;/h4&gt;
    &lt;p&gt;さて、「投稿を作成するフォーム」を作っていきましょう。&lt;br /&gt;
テンプレートでフォームを作るためには、&lt;code&gt;form_for&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;と呼ばれるヘルパー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使います。&lt;code&gt;app/views/posts/new.html.erb&lt;/code&gt;を次のように修正しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;新しい投稿&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :post, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: posts_path do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :title, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;タイトル&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :title %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;内容&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;画面を更新すると、この章の始めにお見せした画面とまったく同じ画面が表示されるでしょう。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;でフォームを作ることは本当に簡単ですね。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812034136.png&quot; alt=&quot;f:id:nipe880324:20140812034136p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812034136p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;form_for&lt;/code&gt;では、どのオブジェクトを作成するためのフォームを作成するかを明示するために引数にオブジェクトを渡す必要があります。今回の場合&lt;code&gt;:post&lt;/code&gt;を渡すことで、&lt;code&gt;Post&lt;/code&gt;オブジェクトを作成するためのフォームを作るように指定しています。&lt;br /&gt;
&lt;code&gt;form_for&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;のブロック内では、&lt;code&gt;FormBuilder&lt;/code&gt;オブジェクト(&lt;code&gt;f&lt;/code&gt;で表されている)は、投稿の「タイトル(title)」と「内容(text)」のためにラベルとテキストフィールド、テキストエリアを作成しています。そして、最後に&lt;code&gt;submit&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;により、登録ボタンを作成しています。&lt;/p&gt;&lt;p&gt;しかし、このフォームには１つ問題があります。フォームのHTMLソースを確認すれば分かると思いますが、フォーム要素のaction属性の値が&lt;code&gt;/posts/new&lt;/code&gt;になっています。このURLは、&lt;code&gt;resouces&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;で自動的に作成されるルートではないため、フォームの登録ボタンを押したときにルーティングエラーになってしまいます。&lt;/p&gt;&lt;p&gt;そのため、&lt;code&gt;form_for&lt;/code&gt;の行を次のように修正してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&amp;lt;%= form_for &lt;span class=&quot;synConstant&quot;&gt;:post&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;url&lt;/span&gt;: posts_path &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;f&lt;/span&gt;| %&amp;gt;
&lt;/pre&gt;&lt;p&gt;今回は、&lt;code&gt;url&lt;/code&gt;オプションに&lt;code&gt;posts_path&lt;/code&gt;ヘルパーを追加しました。&lt;br /&gt;
こうすることにより&lt;code&gt;PostsController&lt;/code&gt;の&lt;code&gt;create&lt;/code&gt;アクションが呼び出されます。ちなみに、Webの世界では一般的にフォームでサーバーにデータを送信するときにはHTTPの&lt;code&gt;GET&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;ではなく&lt;code&gt;POST&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;が使われます。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;でも自動的に&lt;code&gt;POST&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;が使われます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;code&gt;xxx_path&lt;/code&gt;や&lt;code&gt;xxx_url&lt;/code&gt;は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;が自動的に生成するヘルパー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;です。中身はURLであり、&lt;code&gt;xxx_path&lt;/code&gt;はルートのURLからの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%C1%EA%C2%D0%A5%D1%A5%B9&quot;&gt;相対パス&lt;/a&gt;、&lt;code&gt;xxx_url&lt;/code&gt;は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%C0%E4%C2%D0%A5%D1%A5%B9&quot;&gt;絶対パス&lt;/a&gt;です。&lt;br /&gt;
例えば、&lt;code&gt;posts_path&lt;/code&gt;の場合、&lt;code&gt;/posts&lt;/code&gt;に変換されます。&lt;br /&gt;
どのヘルパーが使えるかどうかは、&lt;code&gt;rake routes&lt;/code&gt;コマンドの結果の一番左側の&lt;code&gt;prefix&lt;/code&gt;の列を見て、それに&lt;code&gt;_path&lt;/code&gt;もしくは&lt;code&gt;_url&lt;/code&gt;を足したヘルパー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;が使用可能です。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;では、新しい投稿を作成するために、画面を更新してから、フォームに値を入力し、サブミットボタンを押して下さい。すると、次のようなエラーが発生します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812035717.png&quot; alt=&quot;f:id:nipe880324:20140812035717p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812035717p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;これは、「&lt;code&gt;PostsController&lt;/code&gt;に&lt;code&gt;create&lt;/code&gt;アクションがない」ため発生しています。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.3. 投稿の作成&lt;/h4&gt;
    &lt;p&gt;&lt;code&gt;Unknown action&lt;/code&gt;エラーが発生したので、&lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt;の&lt;code&gt;PostsController&lt;/code&gt;に&lt;code&gt;create&lt;/code&gt;アクションを定義します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;PostsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# GET /posts/new&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synComment&quot;&gt;# POST /posts&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;再び、画面を更新して、サブミットボタンを押すとテンプレートファイルがないというエラーが発生します。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812040412.png&quot; alt=&quot;f:id:nipe880324:20140812040412p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812040412p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;しかし、心配しないで下さい。今のところこのエラーを無視しましょう。&lt;code&gt;create&lt;/code&gt;アクションに「新しい投稿をデータベースに登録する処理」を追加しましょう。&lt;/p&gt;&lt;p&gt;登録ボタンを押してフォームのフィールドデータを送信すると、そのデータはパラメーターとして&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;に送られます。このパラメーターはコントローラーのアクション内で参照可能です。では、これらのパラメーターに含まれる値を確認するために、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;を少し修正しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;  &lt;span class=&quot;synComment&quot;&gt;# POST /posts&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    render &lt;span class=&quot;synConstant&quot;&gt;text&lt;/span&gt;: params[&lt;span class=&quot;synConstant&quot;&gt;:post&lt;/span&gt;].inspect
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;ここでは、&lt;code&gt;render&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;の&lt;code&gt;text:&lt;/code&gt;キーに&lt;code&gt;params[:post].inspect&lt;/code&gt;を渡しています。&lt;br /&gt;
&lt;code&gt;params&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;はフォームから送られてきたパラメーター（もしくは、フィールド）の値を保持しているオブジェクトです。&lt;code&gt;params&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;は、文字列かシンボルをキーとしてハッシュのようにアクセスできる&lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt;オブジェクトを返します。今回は、フォームで入力されたパラメーターのみ保持しています。&lt;/p&gt;&lt;p&gt;再びフォームに値を入力し、登録ボタンを押すと、&lt;code&gt;Template is missing&lt;/code&gt;エラーが発生する代わりに、画面に次のような出力がされます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;{&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;最初の投稿&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;これは最初の投稿です。&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;}
&lt;/pre&gt;&lt;p&gt;今この&lt;code&gt;create&lt;/code&gt;アクションはフォームから送られてきたパラメータを表示しています。しかし、パラメーターを確認できますが、実際にどこかにこのデータを保存しているわけではありません。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.4. Postモデルの作成&lt;/h4&gt;
    &lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;のモデル名は「単数系」、テーブル名はその&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4&quot;&gt;複数&lt;/a&gt;形で定義する必要があります。今回の場合で言うと、モデル名は&lt;code&gt;Post&lt;/code&gt;、テーブル名は&lt;code&gt;posts&lt;/code&gt;になります。&lt;br /&gt;
多くの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;開発者がモデルを作成するときに必ずといっていいほど使うモデルを生成ジェネレーターがあります。次のコマンドを実行し、新しいモデルを作成しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails generate model &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; title&lt;span class=&quot;synConstant&quot;&gt;:string&lt;/span&gt; text&lt;span class=&quot;synConstant&quot;&gt;:text&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このコマンドは、String型の&lt;code&gt;title&lt;/code&gt;属性、Text型の&lt;code&gt;text&lt;/code&gt;属性を持った&lt;code&gt;Post&lt;/code&gt;モデルを作成しています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※Active Recordは「テーブルの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%AB%A5%E9%A5%E0%CC%BE&quot;&gt;カラム名&lt;/a&gt;」から「モデルの属性」を自動的に作成してくれます。これは、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;のモデル内に属性を宣言する必要がなく、Active Recordが自動的にそれを行ってくれることを意味しています。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.5. &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;の実行&lt;/h4&gt;
    &lt;p&gt;&lt;code&gt;rails generate model&lt;/code&gt;コマンドにより&lt;code&gt;db/migrate&lt;/code&gt;ディレクトリ内にデータベースの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルが作成されました。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;はテーブル作成やテーブル変更などのデータベース操作を行うための&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Ruby&quot;&gt;Ruby&lt;/a&gt;のクラスです。&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;開発者は&lt;code&gt;rake&lt;/code&gt;コマンドを使ってその&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルを実施します。データベースに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;を適用した後にその変更を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%ED%A1%BC%A5%EB%A5%D0%A5%C3%A5%AF&quot;&gt;ロールバック&lt;/a&gt;をすることも可能です。&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルのファイル名は、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルが作成された順番で処理をさせるためにタイムスタンプを含んでいます。&lt;/p&gt;&lt;p&gt;作成された&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルの&lt;code&gt;db/migrate/20140811045600_create_posts.rb&lt;/code&gt;を確認しましょう。（タイムスタンプが含まれているのでファイル名は少し違うことに注意して下さい）&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;CreatePosts&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;change&lt;/span&gt;
    create_table &lt;span class=&quot;synConstant&quot;&gt;:posts&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;t&lt;/span&gt;|
      t.string &lt;span class=&quot;synConstant&quot;&gt;:title&lt;/span&gt;
      t.text &lt;span class=&quot;synConstant&quot;&gt;:text&lt;/span&gt;

      t.timestamps
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;change&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;が実行されるときに呼ばれます。この&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;内で定義されたコードは「逆実行が可能」です。つまり、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;による変更を逆実行（戻すこと）が可能ということです。&lt;br /&gt;
この&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルを実行すると、String型とText型のカラムをもった&lt;code&gt;posts&lt;/code&gt;テーブルが作成されます。また、postレコードの作成時間(&lt;code&gt;created_at&lt;/code&gt;)と更新時間(&lt;code&gt;updated_at&lt;/code&gt;)を保持する２つのタイムスタンプも作成されます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;についてより詳細を知りたい場合は、&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140810/1407634200&quot; target=&quot;_blank&quot;&gt;マイグレーションファイルの作り方&lt;/a&gt;や&lt;a href=&quot;http://guides.rubyonrails.org/migrations.html&quot; target=&quot;_blank&quot;&gt;Rails Guides - Rails Database Migrations&lt;/a&gt;を参照して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;では、&lt;code&gt;rake&lt;/code&gt;コマンドで&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;をしましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;が成功した場合、次のように&lt;code&gt;posts&lt;/code&gt;テーブルが作成された旨の表示がされるでしょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;== 20140811045600 CreatePosts: migrating ======================================
-- create_table(:posts)
   -&amp;gt; 0.0013s
== 20140811045600 CreatePosts: migrated (0.0014s) =============================&lt;/pre&gt;&lt;p&gt;&lt;i&gt;基本的には&lt;code&gt;development&lt;/code&gt;環境で作業をしています。そのため、このコマンド結果は、&lt;code&gt;config/database.yml&lt;/code&gt;ファイルの&lt;code&gt;development&lt;/code&gt;セクションで定義されているデータベースに適用されます。他の環境に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;を適用させたいときは、コマンド実行時に環境名を指定して下さい。&lt;br /&gt;
例：&lt;code&gt;rake db:migrate RAILS_ENV=production&lt;/code&gt;&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.6. コントローラー内でデータを保存する&lt;/h4&gt;
    &lt;p&gt;&lt;code&gt;PostsController&lt;/code&gt;に戻り、データベース内にデータを保存するために&lt;code&gt;create&lt;/code&gt;アクション内で&lt;code&gt;Post&lt;/code&gt;モデルを使うように変更しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;  &lt;span class=&quot;synComment&quot;&gt;# POST /posts&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.new(params[&lt;span class=&quot;synConstant&quot;&gt;:post&lt;/span&gt;])
    &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.save
    redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;全ての&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;のモデルは属性で初期化することができます。&lt;br /&gt;
最初の行では、&lt;code&gt;params[:post]&lt;/code&gt;はフォームからの属性を保持しているので、モデルの&lt;code&gt;new&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;にそのまま渡して、モデルを作成しています。&lt;br /&gt;
それから、&lt;code&gt;@post.save&lt;/code&gt;は、データベースにモデルを保存しています。後から確認しますが、&lt;code&gt;@post.save&lt;/code&gt;はモデルが保存できたか、できなかったというboolean値を返します。&lt;br /&gt;
最後に、後ほど実装予定の&lt;code&gt;show&lt;/code&gt;アクションにリダイレクトするようにしています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;code&gt;render、redirect_to&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;などでモデルクラスのオブジェクト(&lt;code&gt;@post&lt;/code&gt;など)を引数に渡すと、自動的に&lt;code&gt;/posts/1&lt;/code&gt;のようなURLに変換され、&lt;code&gt;show&lt;/code&gt;アクションが呼ばれます。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;さあ&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;にアクセスし、新しい投稿をしてみてください。次のエラーが発生するでしょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812042243.png&quot; alt=&quot;f:id:nipe880324:20140812042243p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812042243p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;ではセキュアなアプリケーションの開発を促すためにいくつかのセキュリティ機構が存在します。そして、今そのセキュリティ機構によりエラーが発生しました。この機構は、&lt;code&gt;Strong Parameters&lt;/code&gt;と呼ばれ、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は、私たちに「パラメーターのどの値を取得したいか」をコントローラー内に明示することを要求しています。今回の場合で言うと、パラメーター内の&lt;code&gt;title&lt;/code&gt;と&lt;code&gt;text&lt;/code&gt;の値を取得したいので、次のように変更して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;  &lt;span class=&quot;synComment&quot;&gt;# POST /posts&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.new(post_params)
    &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.save
    redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synStatement&quot;&gt;private&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;post_params&lt;/span&gt;
      params.require(&lt;span class=&quot;synConstant&quot;&gt;:post&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:title&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:text&lt;/span&gt;)
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;permit&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;は、私たちがアクション内で&lt;code&gt;title&lt;/code&gt;と&lt;code&gt;text&lt;/code&gt;を取得できるように&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;に明示しています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;code&gt;def post_params&lt;/code&gt;がプライベート&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;であることに注意して下さい。&lt;code&gt;Strong Parameters&lt;/code&gt;は、攻撃者がパラメーターの値を操作し、モデル内の属性を開発者側の意図しない値に設定することを防ぐRails4から導入されたセキュリティ機構です。より詳細については、&lt;a href=&quot;http://weblog.rubyonrails.org/2012/3/21/strong-parameters/&quot; target=&quot;_blank&quot;&gt;this blog post about Strong Parameters&lt;/a&gt;を参照ください。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.7. 投稿を確認する&lt;/h4&gt;
    &lt;p&gt;画面でフォームの登録ボタンを押すと、&lt;code&gt;show&lt;/code&gt;アクションが見つからないといったエラーが発生するでしょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812042621.png&quot; alt=&quot;f:id:nipe880324:20140812042621p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812042621p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;コントローラーに&lt;code&gt;show&lt;/code&gt;アクションを追加する前に、まずはルートを確認しましょう。&lt;br /&gt;
&lt;code&gt;rake routes&lt;/code&gt;コマンドの結果を見てみると、&lt;code&gt;show&lt;/code&gt;アクションのためのルートがあります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;               &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
  post &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      posts&lt;span class=&quot;synComment&quot;&gt;#show&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;この特殊な&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B7%A5%F3%A5%BF%A5%C3%A5%AF%A5%B9&quot;&gt;シンタックス&lt;/a&gt;の&lt;code&gt;:id&lt;/code&gt;は、このルートでは&lt;code&gt;id&lt;/code&gt;という名のパラメーターを使うことを意味しています。今回の場合は、&lt;code&gt;post&lt;/code&gt;クラスの&lt;code&gt;id&lt;/code&gt;を示しています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※全てのActive Recordを継承したクラスには&lt;code&gt;id&lt;/code&gt;という名の属性があります。これは、主キーであり、一意にレコードを特定することができます。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt;に&lt;code&gt;show&lt;/code&gt;アクションを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;  &lt;span class=&quot;synComment&quot;&gt;# GET /posts/:id&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;Post.find&lt;/code&gt;は、データベースから「指定した&lt;code&gt;id&lt;/code&gt;のpostレコード」を取得する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;です。そして、その値を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9&quot;&gt;インスタンス&lt;/a&gt;変数（&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9&quot;&gt;インスタンス&lt;/a&gt;変数は&lt;code&gt;@&lt;/code&gt;で始まる）に設定しています。なぜなら、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9&quot;&gt;インスタンス&lt;/a&gt;変数を使ってコントローラーからビューにデータを渡すからです。&lt;/p&gt;&lt;p&gt;さて、&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;を新たに作成しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;変更を加えたら、&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;にアクセスし、なにか新しく投稿してみましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812043231.png&quot; alt=&quot;f:id:nipe880324:20140812043231p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812043231p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.8. 投稿の一覧画面を表示する&lt;/h4&gt;
    &lt;p&gt;次は、全ての投稿を一覧表示するようにしてみましょう。&lt;code&gt;rake routes&lt;/code&gt;コマンドを実行し、一覧表示をするためのルートがあることを確認します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;               &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
 posts &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;          posts#index&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このルートから、&lt;code&gt;PostsController&lt;/code&gt;の&lt;code&gt;index&lt;/code&gt;アクションが呼ばれるため、現在は作成されていないので追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# GET /posts&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@posts&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.all
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;Post.all&lt;/code&gt;は、postsテーブル内の全てのpostレコードを取得する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;です。&lt;/p&gt;&lt;p&gt;そして、アクションの結果を表示する&lt;code&gt;app/views/posts/index.html.erb&lt;/code&gt;を新規で作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;全ての投稿一覧&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @posts.each do |post| %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;http://localhost:3000/posts&lt;/code&gt;にアクセスすれば、全ての投稿が一覧で表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140812/20140812043711.png&quot; alt=&quot;f:id:nipe880324:20140812043711p:plain:w480&quot; title=&quot;f:id:nipe880324:20140812043711p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.9. リンクを追加する&lt;/h4&gt;
    &lt;p&gt;さて、投稿を作成(new, create)、確認(show)、一覧表示(index)ができるようになりました。それらの画面間を遷移できるようにするためにリンクを追加しましょう。&lt;/p&gt;&lt;p&gt;&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;を開き、リンクを追加します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Hello, Rails!&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;私のブログ&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, controller: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;posts&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;link_to&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;は、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;に標準で使えるビューのヘルパー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;です。この&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;は、引数で渡したテキストでHTMLの&lt;code&gt;a要素&lt;/code&gt;を作成します。&quot;私のブログ&quot;という文字列の「投稿の一覧画面へ遷移する」aタグリンクが画面に表示されます。&lt;/p&gt;&lt;p&gt;同様に他の画面にもリンクを追加しましょう。&lt;code&gt;app/views/posts/index.html.erb&lt;/code&gt;の&lt;code&gt;tableタグ&lt;/code&gt;の下にリンクを追加して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;...
...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;新しい投稿&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_post_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このリンクは、&quot;新しい投稿&quot;という文字列で表示され、新しい投稿を作成するフォーム画面（&lt;code&gt;new&lt;/code&gt;アクションを呼び出す）に遷移します。&lt;/p&gt;&lt;p&gt;次は、&lt;code&gt;app/views/posts/new.html.erb&lt;/code&gt;の一番したの行に&lt;code&gt;index&lt;/code&gt;アクションに戻るためのリンクを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;新しい投稿&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :post, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: posts_path do |f| %&amp;gt;&lt;/span&gt;
  .....
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;最後に、&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;テンプレートの一番したの行に&lt;code&gt;index&lt;/code&gt;アクションに戻るリンクを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;.....

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;i&gt;※同じコントローラー内のアクションにリンクを貼りたい場合は、&lt;code&gt;:controller&lt;/code&gt;オプションを指定する必要はありません。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;のデフォルトでは現在のコントローラーに基づいて遷移を行うためです。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;code&gt;development&lt;/code&gt;環境（デフォルトの作業環境）では、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;がブラウザのリクエスト毎に自動で&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;をリロードするので、ソースを修正した後にサーバーの再起動は必要ありません。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.10. 少し休憩して、Postモデルの説明&lt;/h4&gt;
    &lt;p&gt;Postモデルの&lt;code&gt;app/models/post.rb&lt;/code&gt;は次のようになっています。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このファイルには特にこれといったコードは記載されていません。しいて言えば、&lt;code&gt;Post&lt;/code&gt;クラスでは&lt;code&gt;ActiveRecord::Base&lt;/code&gt;クラスを継承しています。しかしこれは非常に重要であり、Active Recordは非常の多くの機能を自分で作成したモデルクラスで使えるようにしてくれます。例えば、基本的なデータベースの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CRUD&quot;&gt;CRUD&lt;/a&gt;操作（作成 Create、検索 Read、更新 Update、削除 Destroy）、データのバリデーション（検証）、さらには、複雑な検索や他のモデルへのアソシエーション（リレーション）をサポートしています。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.11. バリデーションを追加する&lt;/h4&gt;
    &lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;では、モデルを扱うときにデータのバリデーションを行うことができます。&lt;br /&gt;
&lt;code&gt;app/models/post.rb&lt;/code&gt;を開いて、バリデーションのための&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を追加してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  validates &lt;span class=&quot;synConstant&quot;&gt;:title&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;length&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;minimum&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt; }
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;これは、全ての投稿が「&lt;code&gt;title&lt;/code&gt;の値を持っており、それは、少なくとも5文字以上の長さが必要」と制限をつけています。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;ではモデルのカラムの値の存在有無、一意性、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%D5%A5%A9%A1%BC%A5%DE%A5%C3%A5%C8%A5%C1%A5%A7%A5%C3%A5%AF&quot;&gt;フォーマットチェック&lt;/a&gt;など様々な状況を検証することができます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;バリデーションについてより詳しく知りたい場合は、「&lt;a href=&quot;/entry/20140724/1406145303&quot; target=&quot;_blank&quot;&gt;Railsのバリデーションと独自バリデート&lt;/a&gt;」や「&lt;a href=&quot;http://guides.rubyonrails.org/active_record_validations.html&quot; target=&quot;_blank&quot;&gt;Rails Guides - Active Record Validations&lt;/a&gt;」を参照して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;バリデーションを追加したので、無効なpostオブジェクトを&lt;code&gt;@post.save&lt;/code&gt;で保存したとき(今回の場合はタイトルが空か5文字以下の場合)に、バリデーションにより&lt;code&gt;false&lt;/code&gt;が返ってきます。&lt;br /&gt;
そのため、&lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt;を再び開き、&lt;code&gt;create&lt;/code&gt;アクションの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;を見て下さい。現在&lt;code&gt;@post.save&lt;/code&gt;の返り値を無視していますが、もし、返り値が&lt;code&gt;false&lt;/code&gt;（バリデーションが失敗する）場合は、ユーザーにフォームを再表示させるようにしましょう。&lt;br /&gt;
このためには、&lt;code&gt;new&lt;/code&gt;と&lt;code&gt;create&lt;/code&gt;アクション内を次のように修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# GET /posts/new&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.new
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;# POST /posts&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.new(post_params)

  &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.save
    redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
    render &lt;span class=&quot;synConstant&quot;&gt;:new&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:unprocessable_entity&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;new&lt;/code&gt;アクションでは、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9&quot;&gt;インスタンス&lt;/a&gt;変数の&lt;code&gt;@post&lt;/code&gt;に空のPostオブジェクトを設定しています。なぜそのようにしているかはすぐに分かるのでこのまま読み進めて下さい。&lt;/p&gt;&lt;p&gt;&lt;code&gt;create&lt;/code&gt;アクションでは、&lt;code&gt;save&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;が&lt;code&gt;false&lt;/code&gt;を返すときに&lt;code&gt;redirect_to&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;の代わりに&lt;code&gt;render&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使うように修正しました。&lt;code&gt;render&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;の引数に&lt;code&gt;&#39;new&#39;&lt;/code&gt;を渡すことで、&lt;code&gt;new&lt;/code&gt;テンプレートを表示するように指定しています。&lt;/p&gt;&lt;p&gt;&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;をリロードし、タイトルを空のまま登録ボタンを押して下さい。すると、同じ画面（フォームが表示されている画面）が表示されます。&lt;br /&gt;
しかし、エラーメッセージなどが表示されないのでユーザーにはなぜ同じ画面が表示されたか分からりません。そのため、&lt;code&gt;app/views/posts/new.html.erb&lt;/code&gt;を修正し、エラーメッセージを表示するように修正しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;新しい投稿&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :post, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: posts_path do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @post.errors.any? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error_explanation&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.errors.count&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;件のエラーが発生したため保存ができませんでした。&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @post.errors.full_messages.each do |msg| %&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; msg&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
  ...
  ...
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;@post.errors.any?&lt;/code&gt;で&lt;code&gt;@post&lt;/code＞にバリデーションエラーが発生しているかどうかを確認しています。
そして、エラーが発生している場合は、&lt;code&gt;@post.errors.full_messages&lt;/code&gt;で全てのエラーを表示しています。&lt;/p&gt;&lt;p&gt;さて、なぜコントローラーの&lt;code&gt;new&lt;/code&gt;アクションに&lt;code&gt;@post = Post.new&lt;/code&gt;を追加したか説明します。&lt;br /&gt;
もし、&lt;code&gt;@post = Post.new&lt;/code&gt;を追加しないと、&lt;code&gt;new.html.erb&lt;/code&gt;が表示されるときに、&lt;code&gt;@post&lt;/code&gt;は&lt;code&gt;nil&lt;/code&gt;なので、&lt;code&gt;@post.errors.any?&lt;/code&gt;を呼んだときに例外が発生してしまうからです。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;はバリデーションエラーが発生したフィールドを自動的に&lt;code&gt;&amp;lt;div class=&quot;field_with_errors&quot;&amp;gt;&lt;/code&gt;で囲みます。これを使い、エラーが発生したフィールドを目立たせるために&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/css&quot;&gt;css&lt;/a&gt;を定義することができます。是非バリデーションエラーが発生したHTMLソースを確認してみて下さい。&lt;/code&gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;さて、再度&lt;code&gt;http://localhost:3000/posts/new&lt;/code&gt;で、タイトルを空のままサブミットしてください。素敵なエラーメッセージが表示されるでしょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813135554.png&quot; alt=&quot;f:id:nipe880324:20140813135554p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813135554p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;エラーメッセージの日本語化などより詳細に知りたい場合は「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140810/1407623400&quot; target=&quot;_blank&quot;&gt;モデルのバリデーションエラーメッセージ errors や エラーメッセージの日本語化&lt;/a&gt;」を確認して下さい。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.12. 投稿を更新する&lt;/h4&gt;
    &lt;p&gt;現在、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CRUD&quot;&gt;CRUD&lt;/a&gt;の&quot;CR&quot;を実装しました。次は、&quot;U&quot;の部分である「投稿を更新」できるように実装していきましょう。&lt;/p&gt;&lt;p&gt;最初のステップは、&lt;code&gt;PostsController&lt;/code&gt;クラスに&lt;code&gt;edit&lt;/code&gt;アクションを追加することです。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# GET /posts/:id/edit&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;edit&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次のステップは、編集用の画面を作ります。内容は新しい投稿を作成する画面とほとんど同じです。&lt;br /&gt;
&lt;code&gt;app/views/posts/edit.html.erb&lt;/code&gt;テンプレートを作成し、次の内容を記載して下さい。&lt;br /&gt;
（&lt;code&gt;new.html.erb&lt;/code&gt;の内容をコピーし、違いを比較しながら編集するとそれぞれの差分がよく分かるのでお勧めです）&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;投稿を更新&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :post, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: posts_path, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :patch do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @post.errors.any? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error_explanation&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.errors.count&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;件のエラーが発生したため保存ができませんでした。&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @post.errors.full_messages.each do |msg| %&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; msg&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :title, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;タイトル&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :title %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;内容&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;form_for&lt;/code&gt;内の&lt;code&gt;method: :patch&lt;/code&gt;は、HTTPの&lt;code&gt;PATCH&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;でフォームの内容をアプリケーションに送信するように指定しています。RESTでは、リソースを更新するために&lt;code&gt;PATCH&lt;/code&gt;と&lt;code&gt;PUT&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使います。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;はどちらも同じように処理できますが、全体として&lt;code&gt;PATCH&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使おうという流れがあるので、ここではオプションに&lt;code&gt;:patch&lt;/code&gt;を指定しています。&lt;br /&gt;
&lt;code&gt;form_for&lt;/code&gt;ヘルパーで作成されるフォームのデフォルトの&lt;code&gt;method&lt;/code&gt;属性は&lt;code&gt;POST&lt;/code&gt;&lt;br /&gt;
のため、ここでは明示的にオプションで指定する必要があったわけです。&lt;/p&gt;&lt;p&gt;さて、&lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt;に&lt;code&gt;update&lt;/code&gt;アクションを作成しましょう。&lt;br /&gt;
こちらもほとんど、&lt;code&gt;create&lt;/code&gt;アクションと同じになります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# PATCH /posts/:id&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# PUT   /posts/:id&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;update&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])

  &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.update(post_params)
    redirect_to &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;
  &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;
    render &lt;span class=&quot;synConstant&quot;&gt;:edit&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;status&lt;/span&gt;: : unprocessable_entity
  &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;既に存在しているレコードを更新するときに、コントローラー内の&lt;code&gt;edit&lt;/code&gt;と&lt;code&gt;update&lt;/code&gt;アクションが使われます。&lt;br /&gt;
&lt;code&gt;update&lt;/code&gt;アクションでは、&lt;code&gt;create&lt;/code&gt;アクションと同様に、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;バリデーションエラーが発生した場合、ユーザーにエラーメッセージと共に編集画面(edit.html.erb)が表示されます。&lt;/li&gt;
&lt;li&gt;更新に成功した場合は、詳細画面(show.html.erb)が表示されます。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;最後に、投稿の一覧画面(index.html.erb)に&lt;code&gt;edit&lt;/code&gt;アクションへのリンクを追加しましょう。&lt;br /&gt;
&lt;code&gt;app/views/posts/index.html.erb&lt;/code&gt;を開き&lt;code&gt;link_to&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を追加します(&lt;code&gt;link_to &quot;編集&quot; ...&lt;/code&gt;)。ついでに、詳細画面(show.html.erb)へのリンク(&lt;code&gt;link_to &quot;詳細&quot; ...&lt;/code&gt;)も追加しています。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;全ての投稿一覧&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @posts.each do |post| %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;詳細&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, post %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(post) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;新しい投稿&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_post_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;テンプレートにも同様に、編集画面へのリンクを追加しておきましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;...
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
| &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(@post) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;現在の投稿一覧画面を確認しましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813140345.png&quot; alt=&quot;f:id:nipe880324:20140813140345p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813140345p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.13. 部分テンプレート（パーシャル）を使ってビューの重複箇所を削除する&lt;/h4&gt;
    &lt;p&gt;前にも触れたましたが、作成画面(&lt;code&gt;new.html.erb&lt;/code&gt;)と編集画面(&lt;code&gt;edit.html.erb&lt;/code&gt;)はとても似ています。部分テンプレートを使うことで重複部分を削除しましょう。&lt;br /&gt;
部分テンプレートの規約として、「ファイル名はアンダースコア(_)で始める必要」があります。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※部分テンプレートについてより詳しく知りたい場合は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140807/1407419013&quot; target=&quot;_blank&quot;&gt;Railsのrenderメソッドと部分テンプレート&lt;/a&gt;」や「&lt;a href=&quot;http://guides.rubyonrails.org/layouts_and_rendering.html&quot; target=&quot;_blank&quot;&gt;Rails Guides - Layouts and Rendering in Rails&lt;/a&gt;」を参照して下さい&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;app/views/posts/_form.html.erb&lt;/code&gt;という部分テンプレートを新しく作成して、次の内容を記載して下さい。&lt;br /&gt;
（&lt;code&gt;new.html.erb&lt;/code&gt; か &lt;code&gt;edit.html.erb&lt;/code&gt; のどちらからか&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;をコピーして、それを修正する形で&lt;code&gt;_form.html.erb&lt;/code&gt;を作ると理解が深まるのでお勧めです。&lt;br /&gt;
ちなみに、コピーした後の修正内容は、フォーム内は&lt;code&gt;form_for&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;の行以外はそのままです。あとは、最上部の&lt;code&gt;h1&lt;/code&gt;タグと最下部の&lt;code&gt;link_to&lt;/code&gt;を削除するだけです。）&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @post do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% if @post.errors.any? %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error_explanation&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.errors.count&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;件のエラーが発生したため保存ができませんでした。&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @post.errors.full_messages.each do |msg| %&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; msg&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :title, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;タイトル&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :title %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;内容&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;form_for&lt;/code&gt;はどのようにして正しいHTTP&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;とアクションを作成しているのでしょうか。&lt;br /&gt;
ということは後に回し、先に作成した部分テンプレートを使うために&lt;code&gt;app/views/posts/new.html.erb&lt;/code&gt;ビューを更新しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;新しい投稿&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では同じく、&lt;code&gt;app/views/posts/edit.html.erb&lt;/code&gt;ビューも更新しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;投稿を更新&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;form&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;画面を確認すると前と同じように動くでしょう。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;4.14. 投稿を削除する&lt;/h4&gt;
    &lt;p&gt;次は、&quot;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CRUD&quot;&gt;CRUD&lt;/a&gt;&quot;の&quot;D&quot;の部分である「投稿を削除する機能」を実装しましょう。&lt;br /&gt;
RESTの規約に従うと、リソースを削除するルートは次のようになります。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;               &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      posts&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;リソースを削除するために&lt;code&gt;destroy&lt;/code&gt;アクションを定義します。&lt;br /&gt;
&lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt;に&lt;code&gt;destroy&lt;/code&gt;アクションを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# DELETE /posts/:id&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;destroy&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
  &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.destroy

  redirect_to posts_path
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;データベースからレコードを削除したいときには、Active Recordの&lt;code&gt;destroy&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使います。&lt;br /&gt;
&lt;code&gt;destory&lt;/code&gt;アクションの後に、&lt;code&gt;posts_path&lt;/code&gt;にリダイレクトする（&lt;code&gt;index&lt;/code&gt;アクションが呼ばれる）のでビューを新たに作る必要はありません。&lt;/p&gt;&lt;p&gt;最後に、&lt;code&gt;destory&lt;/code&gt;アクションを呼び出すリンクを一覧画面に追加します。&lt;code&gt;app/views/posts/index.html.erb&lt;/code&gt;を開き、&lt;code&gt;link_to&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を追加してください。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;全ての投稿一覧&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @posts.each do |post| %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;詳細&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, post %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(post) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;削除&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, post_path(post),&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;削除しますか？&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;新しい投稿&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, new_post_path %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;削除するために&lt;code&gt;link_to&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を新しい使い方で使っています。&lt;code&gt;method&lt;/code&gt;オプションでHTTP&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を指定し、&lt;code&gt;data&lt;/code&gt;オプションで確認ダイアログを表示するように指定しています。&lt;br /&gt;
ユーザーが「削除」リンクを押すと、確認ダイアログが表示され、そこで「OK」ボタンを押すと、&lt;code&gt;DELTE /posts/:id&lt;/code&gt;がサーバー上に送信され、&lt;code&gt;destroy&lt;/code&gt;アクションが実行されることによりデータが削除されます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;この削除処理の多くは &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt; で実現されています。&lt;br /&gt;
アプリケーションのレイアウトファイル(&lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt;)の&lt;code&gt;head&lt;/code&gt;タグ内で自動的にインクルードされる&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;ファイル(&lt;code&gt;jquery_ujs&lt;/code&gt;)によって実現されています。この&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;のファイルがない場合、確認ダイアログは表示されず、&lt;code&gt;DELETE&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;もサーバーに送信されないため、リソースを削除することができません。&lt;/i&gt;&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813141050.png&quot; alt=&quot;f:id:nipe880324:20140813141050p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813141050p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;おめでとうございます！&lt;br /&gt;
あなたは、投稿を作成、詳細確認、一覧表示、更新、削除ができるようになりました。 :)&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 href=&quot;#adding-a-second-model&quot;&gt;5. コメントを追加する&lt;/h3&gt;では、アプリケーションに２つ目のモデルを追加するときが来ました。&lt;br /&gt;
２つ目のモデルは投稿の「コメント」です。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;5.1. モデルを生成する&lt;/h4&gt;
    &lt;p&gt;&lt;code&gt;Post&lt;/code&gt;モデルを生成するときに使ったときと同じジェネレーターを使い、&lt;code&gt;Comment&lt;/code&gt;モデルを作成します。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails generate model &lt;span class=&quot;synType&quot;&gt;Comment&lt;/span&gt; commenter&lt;span class=&quot;synConstant&quot;&gt;:string&lt;/span&gt; body&lt;span class=&quot;synConstant&quot;&gt;:text&lt;/span&gt; post&lt;span class=&quot;synConstant&quot;&gt;:references&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このコマンドで以下の４つのファイルが作成されます。&lt;table class=&quot;table striped&quot;&gt;
  &lt;tr&gt;&lt;th&gt;ファイル&lt;/th&gt;&lt;th&gt;目的&lt;/th&gt;&lt;/tr&gt;

  &lt;tr&gt;&lt;td&gt;db/migrate/20140811090504_create_comments.rb&lt;/td&gt;&lt;td&gt;&lt;code&gt;comments&lt;/code&gt;データベースにテーブルを作成する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイル&lt;br /&gt;（ファイル名のタイムスタンプは異なります）&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;app/models/comment.rb&lt;/td&gt;&lt;td&gt;&lt;code&gt;Comment&lt;/code&gt;モデルを記述するファイル&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;test/models/comment_test.rb&lt;/td&gt;&lt;td&gt;&lt;code&gt;Comment&lt;/code&gt;モデルのテストを記述するファイル&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;test/fixtures/comments.yml&lt;/td&gt;&lt;td&gt;テストで使用するサンプルの&lt;code&gt;Comment&lt;/code&gt;オブジェクトを定義するファイル&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;&lt;p&gt;最初に、&lt;code&gt;app/models/comment.rb&lt;/code&gt;のファイルの中身を確認しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Comment&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:post&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このファイルは、&lt;code&gt;post.rb&lt;/code&gt;ととてもよく似ています。主に違う点は、&lt;code&gt;belongs_to :post&lt;/code&gt;列です。これは、Active Recordのアソシエーション（関連 or リレーション）を設定するためのものです。&lt;/p&gt;&lt;p&gt;ジェネレーターにより、モデルに加え、データベースのテーブルを作成する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルも作成されます。&lt;code&gt;db/migrate/20140811090504_create_comments.rb&lt;/code&gt;の中身を確認しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;CreateComments&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Migration&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;change&lt;/span&gt;
    create_table &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;synIdentifier&quot;&gt;t&lt;/span&gt;|
      t.string &lt;span class=&quot;synConstant&quot;&gt;:commenter&lt;/span&gt;
      t.text &lt;span class=&quot;synConstant&quot;&gt;:body&lt;/span&gt;
      t.references &lt;span class=&quot;synConstant&quot;&gt;:post&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;index&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;

      t.timestamps
    &lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;create_table :comments&lt;/code&gt;が&lt;code&gt;comments&lt;/code&gt;テーブルを作成ことを意味しており、その内部のブロックで&lt;code&gt;comments&lt;/code&gt;テーブルのカラムを作成しています。&lt;br /&gt;
&lt;code&gt;t.string :commenter&lt;/code&gt;はString型の&lt;code&gt;commenter&lt;/code&gt;というカラムを作成するという意味です。&lt;br /&gt;
次の行も同じです。&lt;br /&gt;
&lt;code&gt;t.references&lt;/code&gt;行は「外部キー」定義しています。加えて、&lt;code&gt;index: true&lt;/code&gt;オプションによりその外部キーをインデックスにしています。&lt;br /&gt;
&lt;code&gt;t.timestamps&lt;/code&gt;は、レコードの作成日付(created_at)と更新日付(updated_at)を保持するカラムを作成します（Active Recordにより自動的に値が更新されるので、私たちが直接値を操作する必要はありません。作成順や更新順などにデータを表示したい場合などにソートで使ったりします。）&lt;/p&gt;&lt;p&gt;では、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;を実施しましょう。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;$ rake db:migrate&lt;/pre&gt;&lt;p&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は既にデータベースに適用済みの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルは実行しません。（&lt;code&gt;posts&lt;/code&gt;テーブルを作成する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;は実行されない）&lt;br /&gt;
そのため、次のように&lt;code&gt;comments&lt;/code&gt;テーブルを作成する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%B0%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3&quot;&gt;マイグレーション&lt;/a&gt;ファイルのみ実行されたます。&lt;/p&gt;
&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;== 20140811090504 CreateComments: migrating ===================================
-- create_table(:comments)
   -&amp;gt; 0.0054s
== 20140811090504 CreateComments: migrated (0.0055s) ==========================&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;5.2. モデル間に関連づける&lt;/h4&gt;
    &lt;p&gt;Active Recordアソシエーションはモデル間の関連を簡単に定義することができます。&lt;br /&gt;
今回の&lt;code&gt;Comment&lt;/code&gt;モデルと&lt;code&gt;Post&lt;/code&gt;モデルの場合、次のようにモデル間の関係を考えることができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each comment &lt;b&gt;belongs to&lt;/b&gt; one post.（各々の&lt;code&gt;comment&lt;/code&gt;は、１つの&lt;code&gt;post&lt;/code&gt;に属する）&lt;/li&gt;
&lt;li&gt;One post can &lt;b&gt;have many&lt;/b&gt; comments.（１つの&lt;code&gt;post&lt;/code&gt;は、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4&quot;&gt;複数&lt;/a&gt;の&lt;code&gt;comments&lt;/code&gt;を持てる）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;つまり、PostとCommentは「1対多関係」になっています。&lt;/p&gt;&lt;p&gt;この英語の書き方は、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;でのアソシエーションの定義の仕方にとても似ています。&lt;br /&gt;
&lt;code&gt;Comment&lt;/code&gt;モデル(&lt;code&gt;app/models/comment.rb&lt;/code&gt;)で先ほど確認したアソシエーションの定義は、「comment belongs to a post」と読めます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Comment&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  belongs_to &lt;span class=&quot;synConstant&quot;&gt;:post&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;Post&lt;/code&gt;モデル(&lt;code&gt;app/models/post.rb&lt;/code&gt;)側にアソシエーションを定義しましょう。&lt;br /&gt;
こちらは、「post has many comments」と読めます。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;

  validates &lt;span class=&quot;synConstant&quot;&gt;:title&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;length&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;minimum&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt; }
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;この２つの宣言を追加することで、それぞれのモデルクラスは自動的にモデル間のアソシエーションを認識します。&lt;br /&gt;
例えば、&lt;code&gt;@post&lt;/code&gt;という&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9&quot;&gt;インスタンス&lt;/a&gt;変数に&lt;code&gt;Post&lt;/code&gt;オブジェクトが設定されているとします。そのときに、&lt;code&gt;@post.comments&lt;/code&gt;にアクセスすることにより、その&lt;code&gt;Post&lt;/code&gt;オブジェクトに関連づく全ての&lt;code&gt;Comment&lt;/code&gt;オブジェクトにアクセスできます。&lt;/p&gt;&lt;p&gt;&lt;i&gt;Active Recordのアソシエーションについてより詳しく知りたい場合は、「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140810/1407617435&quot; target=&quot;_blank&quot;&gt;Railsのアソシエーションの作成方法&lt;/a&gt;」や「&lt;a href=&quot;http://guides.rubyonrails.org/association_basics.html&quot; target=&quot;_blank&quot;&gt;Rails Guides- Active Record Association&lt;/a&gt;」を参照して下さい。&lt;/i&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;5.3. Commentモデルにルートを追加する&lt;/h4&gt;
    &lt;p&gt;他のコントローラーと同じように、&lt;code&gt;Comment&lt;/code&gt;用にもルートを追加する必要があります。&lt;br /&gt;
&lt;code&gt;config/routes.rb&lt;/code&gt;ファイルを開き、次のように修正して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;resources &lt;span class=&quot;synConstant&quot;&gt;:posts&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;do&lt;/span&gt;
  resources &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;今回追加した&lt;code&gt;comments&lt;/code&gt;は&lt;code&gt;posts&lt;/code&gt;にネストされています。これは、「投稿」と「コメント」の間に意味的に存在する階層構造を表しています。「コメント」はコメント単体では存在せず、「投稿」に紐づいて「コメント」が存在するためです。&lt;/p&gt;&lt;p&gt;これを説明するために、現在のルートを表示してみましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rake routes
           &lt;span class=&quot;synType&quot;&gt;Prefix&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Verb&lt;/span&gt;   &lt;span class=&quot;synType&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Pattern&lt;/span&gt;                                 &lt;span class=&quot;synType&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;#Action&lt;/span&gt;
    post_comments &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)          comments&lt;span class=&quot;synComment&quot;&gt;#index&lt;/span&gt;
                  &lt;span class=&quot;synType&quot;&gt;POST&lt;/span&gt;   &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)          comments&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
 new_post_comment &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments/new(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      comments&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
edit_post_comment &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments/&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;/edit(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;) comments&lt;span class=&quot;synComment&quot;&gt;#edit&lt;/span&gt;
     post_comment &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments/&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      comments&lt;span class=&quot;synComment&quot;&gt;#show&lt;/span&gt;
                  &lt;span class=&quot;synType&quot;&gt;PATCH&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments/&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      comments&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                  &lt;span class=&quot;synType&quot;&gt;PUT&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments/&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      comments&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                  &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;/comments/&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)      comments&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
            posts &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;                            posts#index&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;                  POST   &lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;posts(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)                            posts&lt;span class=&quot;synComment&quot;&gt;#create&lt;/span&gt;
         new_post &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/ne&lt;/span&gt;w(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)                        posts&lt;span class=&quot;synComment&quot;&gt;#new&lt;/span&gt;
        edit_post &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;/edit(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)                   posts&lt;span class=&quot;synComment&quot;&gt;#edit&lt;/span&gt;
             post &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)                        posts&lt;span class=&quot;synComment&quot;&gt;#show&lt;/span&gt;
                  &lt;span class=&quot;synType&quot;&gt;PATCH&lt;/span&gt;  &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)                        posts&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                  &lt;span class=&quot;synType&quot;&gt;PUT&lt;/span&gt;    &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)                        posts&lt;span class=&quot;synComment&quot;&gt;#update&lt;/span&gt;
                  &lt;span class=&quot;synType&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;(.&lt;span class=&quot;synConstant&quot;&gt;:format&lt;/span&gt;)                        posts&lt;span class=&quot;synComment&quot;&gt;#destroy&lt;/span&gt;
             root &lt;span class=&quot;synType&quot;&gt;GET&lt;/span&gt;    /                                           welcome&lt;span class=&quot;synComment&quot;&gt;#index&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;上の方のルートは&lt;code&gt;comments&lt;/code&gt;と入っているURLがあります。&lt;br /&gt;
しかし、&lt;code&gt;posts/:post_id/comments ...&lt;/code&gt;となっています。&lt;br /&gt;
これは今まさに説明した通り、「コメント」にアクセスするためには「投稿」がないと作成や更新、表示などができないことを表しています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;のルーティング」についてより詳細に知りたい場合は、&lt;br /&gt;
「&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140716/1405451238&quot; target=&quot;_blank&quot;&gt;Railsのルーティングメモ&lt;/a&gt;」や「&lt;a href=&quot;http://guides.rubyonrails.org/routing.html&quot; target=&quot;_blank&quot;&gt;Rails Guides - Rails Routing&lt;/a&gt;」を参照して下さい。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;5.4. コントローラーを生成する&lt;/h4&gt;
    &lt;p&gt;モデルを作成したので、次はコントローラーを作成していきましょう。毎度のことですが、コントローラーを生成するときも「ジェネレーター」を使います。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;$ rails generate controller &lt;span class=&quot;synType&quot;&gt;Comments&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このコマンドで、以下の6つのファイルと１つの空ディレクトリが作成されます。&lt;table class=&quot;table striped&quot;&gt;
  &lt;tr&gt;&lt;th&gt;ファイル&lt;/th&gt;&lt;th&gt;目的&lt;/th&gt;&lt;/tr&gt;

  &lt;tr&gt;&lt;td&gt;app/controllers/comments_controller.rb&lt;/td&gt;&lt;td&gt;CommentsControllerを実装するファイル&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;app/views/comments/&lt;/td&gt;&lt;td&gt;このディレクトリ内にCommentsのビューファイルを配置する&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;test/controllers/comments_controller_test.rb&lt;/td&gt;&lt;td&gt;CommentsConntrolerのテストを記述するファイル&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;app/helpers/comments_helper.rb&lt;/td&gt;&lt;td&gt;Commentsビューのヘルパーファイル&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;test/helpers/comments_helper_test.rb&lt;/td&gt;&lt;td&gt;Commentsビューのヘルパーのテスト用ファイル&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;app/assets/javascripts/comments.js.coffee&lt;/td&gt;&lt;td&gt;Commentsの&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CoffeeScript&quot;&gt;CoffeeScript&lt;/a&gt;を記述する&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;app/assets/stylesheets/comments.&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/css&quot;&gt;css&lt;/a&gt;.scss&lt;/td&gt;&lt;td&gt;CommentsのScss(&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%BF%A5%A4%A5%EB%A5%B7%A1%BC%A5%C8&quot;&gt;スタイルシート&lt;/a&gt;)を記述する&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;&lt;p&gt;一般的なブログでは、「投稿記事」を読んだ最後に「コメント」を記載します。そして、一度「コメント」が記載されると、「投稿記事」の詳細画面(&lt;code&gt;show.html.erb&lt;/code&gt;)でその「コメント」が一覧表示されます。&lt;/p&gt;&lt;p&gt;この挙動を実現するために、&lt;code&gt;CommentsController&lt;/code&gt;では、コメントを作成する&lt;code&gt;create&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;とスパムコメントを削除する&lt;code&gt;destroy&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を定義します。&lt;/p&gt;&lt;p&gt;最初に、投稿の詳細画面(&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;)にコメントを表示するように修正しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメントを追加&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; [@post, @post.comments.build] ) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメンター&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント投稿&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
| &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(@post) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;ここでは、コメントを記載できるフォームを追加しました。&lt;br /&gt;
ここでの&lt;code&gt;form_for&lt;/code&gt;では配列を使っています。これは、ネストされたルートを作成します。例えば、&lt;code&gt;/posts/1/comments&lt;/code&gt;のようなルートを作成します。&lt;code&gt;config/routes.rb&lt;/code&gt;でURLをネストしたため、&lt;code&gt;form_for&lt;/code&gt;でもルートをネストさせる必要があったのです。&lt;/p&gt;&lt;p&gt;&lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;に&lt;code&gt;create&lt;/code&gt;アクションを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;CommentsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;synComment&quot;&gt;# POST /posts/:post_id/comments&lt;/span&gt;
  &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;])
    &lt;span class=&quot;synIdentifier&quot;&gt;@comment&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.comments.create(comment_params)

    redirect_to post_path(&lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;)
  &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;synStatement&quot;&gt;private&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;comment_params&lt;/span&gt;
      params.require(&lt;span class=&quot;synConstant&quot;&gt;:comment&lt;/span&gt;).permit(&lt;span class=&quot;synConstant&quot;&gt;:commenter&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:body&lt;/span&gt;)
    &lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;今までのコントローラーより少しだけ複雑に見えるかもしれません。私たちが設定したネストの影響です。&lt;br /&gt;
「コメント」へのリクエストには、その「コメント」に関連している「投稿」の情報が必要になります。そのため、最初の行で&lt;code&gt;Post.find&lt;/code&gt;で「コメント」に関連する「投稿」を取得しています。&lt;/p&gt;&lt;p&gt;さらに、このコードではアソシエーションを定義したことによって利用可能になった&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使っています。&lt;br /&gt;
&lt;code&gt;@post.comments.create&lt;/code&gt;は「コメント」を作成し、データベースに保存しています。これは、自動的に「コメント」と「投稿」の間でアソシエーションを追加（外部キーの設定）してくれます。&lt;/p&gt;&lt;p&gt;新しい「コメント」を作成すると、ユーザーは&lt;code&gt;post_path(@post)&lt;/code&gt;ヘルパーによって投稿の詳細画面にリダイレクトされます。リダイレクトされたパスにより、&lt;code&gt;PostsController&lt;/code&gt;の&lt;code&gt;show&lt;/code&gt;アクションが呼び出されます。&lt;code&gt;show&lt;/code&gt;アクション内では、&lt;code&gt;show.html.erb&lt;/code&gt;テンプレートを&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;します。&lt;/p&gt;&lt;p&gt;では、「コメント」の表示を「投稿」の詳細画面(&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;)に追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; simple_format&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @post.&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメント&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% @post.comments.each do |comment| %&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメンター：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; comment.commenter&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
   
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメント：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; simple_format&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; comment.body %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメントを追加&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; [@post, @post.comments.build] ) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメンター&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit,&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント投稿&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
| &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(@post) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;simple_format&lt;/code&gt;ヘルパー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使っています。これは、改行などを認識して表示する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;です。&lt;/p&gt;&lt;p&gt;さて、ブラウザを開いて、投稿にコメントを追加しましょう。次のように表示されるでしょう。&lt;br /&gt;
 &lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813144316.png&quot; alt=&quot;f:id:nipe880324:20140813144316p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813144316p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;refactoring&quot;&gt;6. &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EA%A5%D5%A5%A1%A5%AF%A5%BF%A5%EA%A5%F3%A5%B0&quot;&gt;リファクタリング&lt;/a&gt;&lt;/h3&gt;さてさて、今のところ私たちは投稿とコメント機能が実装できました。しかし、ちらっと &lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;を見てください。&lt;br /&gt;
少し&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;が長く、汚くないでしょうか。綺麗にするために部分テンプレート（パーシャル）を使って&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EA%A5%D5%A5%A1%A5%AF%A5%BF%A5%EA%A5%F3%A5%B0&quot;&gt;リファクタリング&lt;/a&gt;しましょう。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;6.1. 部分テンプレートでコレクションを&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;する&lt;/h4&gt;
    &lt;p&gt;最初に、投稿の全てのコメントを表示するために部分テンプレートを作成します。&lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt;を新規に作成して、次の記述を追記して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメンター：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; comment.commenter&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメント：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; simple_format&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; comment.body %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次は、&lt;code&gt;app/views/posts/show.html.erb &lt;/code&gt;を修正して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメント&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @post.comments %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメントを追加&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; [@post, @post.comments.build] ) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメンター&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント投稿&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
| &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(@post) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;render @post.comments&lt;/code&gt;により、&lt;code&gt;@post.comments&lt;/code&gt;コレクションのそれぞれのコメントで部分テンプレートの&lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt;を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;します。&lt;br /&gt;
&lt;code&gt;render&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;はコレクションを１つ１つ処理し、そして、それぞれのコメントを「部分テンプレートと同じ名前のローカル変数」に割り当てます。&lt;br /&gt;
今回の場合で言うと、部分テンプレート内では、&lt;code&gt;comment&lt;/code&gt;という名のローカル変数が使えます。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;7.2. 部分テンプレートでフォームを&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;する&lt;/h4&gt;
    &lt;p&gt;コメントを追加する箇所の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;を部分テンプレートにしていきましょう。&lt;br /&gt;
&lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt;を新規作成します。&lt;br /&gt;
（&lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt;から&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9&quot;&gt;ソースコード&lt;/a&gt;から部分テンプレートに置き換える箇所をコピーすると簡単です。）&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; [@post, @post.comments.build] ) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメンター&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント投稿&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;そして、&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;を次のように修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメント&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @post.comments %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメントを追加&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;comments/form&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 修正箇所 終了 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
| &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(@post) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;二つ目の&lt;code&gt;render&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;では、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;したい部分テンプレート&lt;code&gt;comments/form&lt;/code&gt;として指定しました。&lt;code&gt;render&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;の引数が文字列で、その中にスラッシュ(/)が存在する場合、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;は&lt;code&gt;app/views/&lt;/code&gt;配下からのパスとして部分テンプレートを探します。&lt;br /&gt;
そのため、今回の場合は、&lt;code&gt;comments/form&lt;/code&gt;を指定することで、&lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt;が&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0&quot;&gt;レンダリング&lt;/a&gt;されました。&lt;/p&gt;&lt;p&gt;&lt;code&gt;@post&lt;/code&gt;という&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9&quot;&gt;インスタンス&lt;/a&gt;変数はどの部分テンプレートでも使うことが可能です。なぜならば、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9&quot;&gt;インスタンス&lt;/a&gt;変数として定義されているからです。&lt;/p&gt;&lt;p&gt;では、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EA%A5%D5%A5%A1%A5%AF%A5%BF%A5%EA%A5%F3%A5%B0&quot;&gt;リファクタリング&lt;/a&gt;後の投稿の詳細画面を表示してみましょう。表示は変わってないですね。&lt;br /&gt;
（&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%EA%A5%D5%A5%A1%A5%AF%A5%BF%A5%EA%A5%F3%A5%B0&quot;&gt;リファクタリング&lt;/a&gt;をしただけなので、いいことです :D）&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813144316.png&quot; alt=&quot;f:id:nipe880324:20140813144316p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813144316p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;deleting-comments&quot;&gt;7. コメントを削除する&lt;/h3&gt;ブログアプリケーションにおいて、スパムコメントを消せることは重要な機能でしょう。&lt;br /&gt;
それを実現するために、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;スパムコメントを削除する&lt;code&gt;CommentsController&lt;/code&gt;の&lt;code&gt;destroy&lt;/code&gt;アクション&lt;/li&gt;
&lt;li&gt;ビュー内にその&lt;code&gt;destroy&lt;/code&gt;アクションを呼び出すリンク&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;を追加していきます。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;7.1. コメント削除リンクとdestroyアクションを追加する&lt;/h4&gt;
    &lt;p&gt;まずは、&lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt;パーシャルに削除リンクを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメンター：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; comment.commenter&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメント：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; comment.body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 開始 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;コメント削除&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, [comment.post, comment],&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;              &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: :delete, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: { confirm: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;削除しますか？&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; } %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所 終了 --&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;このリンクをクリックすると、サーバーに&lt;code&gt;DELETE /posts/:post_id/comments/:id&lt;/code&gt;がリクエストされるので、&lt;code&gt;CommentsController&lt;/code&gt;の&lt;code&gt;destroy&lt;/code&gt;アクションが呼ばれます。&lt;/p&gt;&lt;p&gt;では、&lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;に&lt;code&gt;destroy&lt;/code&gt;アクションを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# DELETE /posts/:post_id/comments/:id&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;destroy&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt; = &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt;.find(params[&lt;span class=&quot;synConstant&quot;&gt;:post_id&lt;/span&gt;])
  &lt;span class=&quot;synIdentifier&quot;&gt;@comment&lt;/span&gt; = &lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;.comments.find(params[&lt;span class=&quot;synConstant&quot;&gt;:id&lt;/span&gt;])
  &lt;span class=&quot;synIdentifier&quot;&gt;@comment&lt;/span&gt;.destroy

  redirect_to post_path(&lt;span class=&quot;synIdentifier&quot;&gt;@post&lt;/span&gt;)
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;destory&lt;/code&gt;アクションは、&lt;code&gt;@post.comments&lt;/code&gt;コレクション内の「コメント」を探し出し、データベースから削除しています。そして、「投稿記事」の詳細画面にリダイレクトしています。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;7.2. アソシエーションで関連したオブジェクトを削除する&lt;/h4&gt;
    &lt;p&gt;もし「投稿記事(post)」を削除した場合、それに関連づいている「コメント(comment)」も削除されるべきです。そうしなければ、データベースにゴミデータが残ってしまうからです。&lt;br /&gt;
&lt;code&gt;dependent&lt;/code&gt;オプションを使うことでこれをとっても簡単に実現することができます。&lt;br /&gt;
&lt;code&gt;Post&lt;/code&gt;モデル(app/models/post.rb)に&lt;code&gt;dependent&lt;/code&gt;オプションを追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Post&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ActiveRecord&lt;/span&gt;::&lt;span class=&quot;synType&quot;&gt;Base&lt;/span&gt;
  has_many &lt;span class=&quot;synConstant&quot;&gt;:comments&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;dependent&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;

  validates &lt;span class=&quot;synConstant&quot;&gt;:title&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;presence&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;length&lt;/span&gt;: { &lt;span class=&quot;synConstant&quot;&gt;minimum&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt; }
&lt;span class=&quot;synPreProc&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;これで、&lt;code&gt;@post.destory&lt;/code&gt;で「投稿」を削除すると、その「投稿」に関連づいた「コメント」も&lt;code&gt;自動的&lt;/code&gt;に一緒に削除されます。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;security&quot;&gt;8. HTTP認証を追加する&lt;/h3&gt;もしこのブログをオンラインに公開したい場合、他の誰か知らない人が投稿を追加、編集、削除してしまうかもしれません。&lt;br /&gt;
このような場合のために、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;はとても簡単なHTTP認証システムを提供しています。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※本格的に認証する場合は&lt;code&gt;devise&lt;/code&gt;という認証用のgemを使うことをお勧めします。&lt;code&gt;devise&lt;/code&gt;は、ログイン画面やユーザ登録など一般的な認証システムを提供してくれます。&lt;code&gt;devise&lt;/code&gt;の導入方法やカスタマイズは、&lt;a href=&quot;http://ruby-rails.hatenadiary.com/entry/20140801/1406907000&quot; target=&quot;_blank&quot;&gt;deviseの導入&lt;/a&gt;を参照して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;http_basic_authenticate_with&lt;/code&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を使うことで、特定のコントローラーのアクションの実施に認証が必要となります。&lt;br /&gt;
PostsController(&lt;code&gt;app/controllers/posts_controller.rb&lt;/code&gt;)の上部に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9&quot;&gt;メソッド&lt;/a&gt;を追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;PostsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;

  http_basic_authenticate_with &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;password&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;except&lt;/span&gt;: [&lt;span class=&quot;synConstant&quot;&gt;:index&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;:show&lt;/span&gt;]

  ...
  ...
&lt;/pre&gt;&lt;p&gt;今回の場合は、&lt;code&gt;index&lt;/code&gt;と&lt;code&gt;show&lt;/code&gt;アクション以外のアクション(new, create, edit, update, destroy)にHTTP認証が必要になります。&lt;br /&gt;
認証時のユーザ名とパスワードは、&quot;user&quot; と &quot;password&quot; です。&lt;/p&gt;&lt;p&gt;また、認証されたユーザーがコメントを削除するようにしたいので、CommentsController(&lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;)にも同じように追加しましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-ruby&quot; data-lang=&quot;ruby&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;CommentsController&lt;/span&gt; &amp;lt; &lt;span class=&quot;synType&quot;&gt;ApplicationController&lt;/span&gt;

  http_basic_authenticate_with &lt;span class=&quot;synConstant&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;password&lt;/span&gt;: &lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;only&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;:destroy&lt;/span&gt;

  ...
  ...
&lt;/pre&gt;&lt;p&gt;上記を記載することで、&lt;code&gt;CommentsController&lt;/code&gt;の&lt;code&gt;destroy&lt;/code&gt;アクションだけ認証が必要になります。&lt;/p&gt;&lt;p&gt;さて、投稿の一覧画面(&lt;code&gt;http://localhost:3000/posts&lt;/code&gt;)で新規の投稿を作成するために「新しい投稿」リンクを押すと、HTTP認証のダイアログが表示されます。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813150152.png&quot; alt=&quot;f:id:nipe880324:20140813150152p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813150152p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;h3 id=&quot;styling&quot;&gt;9. 画面のスタイリングをする&lt;/h3&gt;ここまでブログの一通りの機能を実装することができました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;投稿の一覧表示、作成、更新、詳細表示、削除ができます。&lt;/li&gt;
&lt;li&gt;投稿に対してコメントの作成と削除ができます。&lt;/li&gt;
&lt;li&gt;さらに、認証に成功したユーザのみ上記の特定の操作ができます。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
ここからは、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt; Guidesには乗っていない、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;での画面のスタイリング方法や&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;の使い方を説明していきます。&lt;/p&gt;&lt;p&gt;まずは、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;でのスタイリングです。&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%BF%A5%A4%A5%EB%A5%B7%A1%BC%A5%C8&quot;&gt;スタイルシート&lt;/a&gt;は、&lt;code&gt;app/stylesheets/&lt;/code&gt;配下に配置します。&lt;br /&gt;
デフォルトでは、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2&quot;&gt;拡張子&lt;/a&gt;は&lt;code&gt;css.scss&lt;/code&gt;となっています。&lt;br /&gt;
&lt;code&gt;.scss&lt;/code&gt;は&lt;code&gt;Scss&lt;/code&gt;という「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB&quot;&gt;コンパイル&lt;/a&gt;により&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;を出力する&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BF%B8%C0%B8%EC&quot;&gt;メタ言語&lt;/a&gt;」を表しています。&lt;/p&gt;&lt;p&gt;&lt;i&gt; &lt;code&gt;Scss&lt;/code&gt;は見た目はほとんど&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;と同じです。実際に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;で記載しても動きます。しかし、主な機能としては、「変数が使える」「ネストが使える」「Mixinができる」「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BB%A5%EC%A5%AF%A5%BF&quot;&gt;セレクタ&lt;/a&gt;の継承ができる」などあります。そして、それらの機能により&lt;b&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;で書くよりもより生産性や保守性が向上する&lt;/b&gt;ことが期待できます。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;ここでは、&lt;code&gt;Scss&lt;/code&gt;の記載内容について細かく説明しません。&lt;br /&gt;
どちらかというと、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;ではどうやってスタイリングファイルが指定され、どのような流れで&lt;code&gt;Scss&lt;/code&gt;を記載していくかということを説明します。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;9.1. &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%BF%A5%A4%A5%EB%A5%B7%A1%BC%A5%C8&quot;&gt;スタイルシート&lt;/a&gt;の読み込み&lt;/h4&gt;
    &lt;p&gt;&lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt;というファイルを開いてみて下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; stylesheet_link_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;all&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; javascript_include_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; csrf_meta_tags&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; yield&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;HTMLのドキュメント定義や&lt;code&gt;head&lt;/code&gt;タグや&lt;code&gt;body&lt;/code&gt;タグが記載されていることがわかると思います。&lt;br /&gt;
このファイルは、今まで表示してきたテンプレートファイル(new.html.erbなど)の外側の枠組みとなるファイルです。テンプレートファイルの内容は、&lt;code&gt;&lt;%= yield %&gt;&lt;/code&gt;の箇所に表示されます。&lt;br /&gt;
そのため、このファイルを修正することにより、2段カラムなどのレイアウトをWebアプリケーション全ての画面に適用することができます。&lt;/p&gt;&lt;p&gt;さて、&lt;code&gt;head&lt;/code&gt;タグ内の&lt;code&gt;stylesheet_link_tag&lt;/code&gt;と記載されている行を確認して下さい。&lt;br /&gt;
これは、&lt;code&gt;app/assets/stylesheets/application.css&lt;/code&gt;をインクルードすることを意味しています。&lt;br /&gt;
そして、&lt;code&gt;application.css&lt;/code&gt;内では、&lt;code&gt;app/assets/stylesheets/&lt;/code&gt;配下の全てのファイルをインクルードするように指定されています。&lt;br /&gt;
そのため、この章の最初で述べたように、「&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%BF%A5%A4%A5%EB%A5%B7%A1%BC%A5%C8&quot;&gt;スタイルシート&lt;/a&gt;は、&lt;code&gt;app/stylesheets/&lt;/code&gt;配下に配置」する必要があります。&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;9.2. アプリケーション全体のスタイリングをする&lt;/h4&gt;
    &lt;p&gt;今回スタイリングした結果のイメージは次のようになります。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813153533.png&quot; alt=&quot;f:id:nipe880324:20140813153533p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813153533p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;まずアプリケーション全体のスタイリング（レイアウト作成）をしていきましょう。&lt;br /&gt;
アプリケーション全体なので&lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt;を修正します。&lt;code&gt;header&lt;/code&gt;タグで「ヘッダー部分」と&lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt;タグで「コンテンツ部分」に分けてみました。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; ja=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ja&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; stylesheet_link_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;all&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; javascript_include_tag&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;application&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;data-turbolinks-track&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; =&amp;gt;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt; true %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; csrf_meta_tags&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;&amp;lt;%= controller.controller_name %&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;wrap&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;inner&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;logo&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Sample My Blog&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, root_path %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;catchcopy&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;Description or something ....&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- /.inner --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- /#header --&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; yield&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- /#main --&amp;gt;&lt;/span&gt;
  
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- /#wrap --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;その後、&lt;code&gt;Scss&lt;/code&gt;で&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;を記述していきます。&lt;br /&gt;
&lt;code&gt;app/assets/stylesheets/&lt;/code&gt;配下を見て下さい。&lt;br /&gt;
&lt;code&gt;application.css&lt;/code&gt;、&lt;code&gt;comments.css.scss&lt;/code&gt;、&lt;code&gt;posts.css.scss&lt;/code&gt;などのファイルが存在すると思います。&lt;code&gt;application.css&lt;/code&gt;については上部で既に説明したのでその他のファイルについて説明します。&lt;br /&gt;
お気づきかもしれませんが、&lt;code&gt;posts.css.scss&lt;/code&gt;のファイル名の先頭が「ビューのフォルダ名」と同じです。これは、投稿関連のビュー(&lt;code&gt;app/assets/posts/&lt;/code&gt;配下のファイル)のスタイリングをする場合は、&lt;code&gt;posts.css.scss&lt;/code&gt;を使うと、スタイリングのコードがどこに書かれているか分かりやすいのでよいです。&lt;/p&gt;&lt;p&gt;&lt;i&gt;※上記の項目で説明しましたが、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;では&lt;code&gt;application.css&lt;/code&gt;により全ての画面で&lt;code&gt;app/assets/stylesheets/&lt;/code&gt;配下の全てのスタイリングシートを読み込むため、それぞれのファイルに分けて&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;を書いた方がよいだけであり、一つのファイルに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;を動いても動きます。&lt;br /&gt;
また、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;はビュー毎に読み込む&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;を変えているわけではないので、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CSS&quot;&gt;CSS&lt;/a&gt;ファイル間の&lt;code&gt;id&lt;/code&gt;や&lt;code&gt;class&lt;/code&gt;のスタイリングの競合に注意して下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;今回は、基本的な色やレイアウトを指定するファイルの&lt;code&gt;app/assets/stylesheets/common.css.scss&lt;/code&gt;を作成し、次の内容を記載して下さい。&lt;br /&gt;
（スタイリングの仕方の話になると本が書けてしまうので、コピーで大丈夫です）&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;// カラー変数
$baseBlack:     #333;
$baseGray:      &lt;span class=&quot;synIdentifier&quot;&gt;#aaa&lt;/span&gt;;
$baseLightGray: &lt;span class=&quot;synIdentifier&quot;&gt;#eee&lt;/span&gt;;
$baseBlue:      #428bca;
$baseLightBlue: #5bc0de;

&lt;span class=&quot;synComment&quot;&gt;/*-----------------------------&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;　リセットCSS + サイト共通設定&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;------------------------------*/&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;,
&lt;span class=&quot;synStatement&quot;&gt;h1&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;h3&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;h4&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;h5&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;h6&lt;/span&gt;,
&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;ol&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;dl&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;dt&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;dd&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;li&lt;/span&gt;,
&lt;span class=&quot;synStatement&quot;&gt;table&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;th&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;td&lt;/span&gt;,
&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;select&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;option&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;address&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;pre&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;em&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;iframe&lt;/span&gt;,&lt;span class=&quot;synStatement&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;100%&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;border&lt;/span&gt;:&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;/* デフォルト文字設定 */&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100%&lt;/span&gt;;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100%&lt;/span&gt;;

  &lt;span class=&quot;synType&quot;&gt;color&lt;/span&gt;: $baseBlack;
  &lt;span class=&quot;synType&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Gotham Narrow SSm&amp;quot;&lt;/span&gt;,Arial,&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ヒラギノ角ゴ Pro W3&amp;quot;&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Hiragino Kaku Gothic Pro&amp;quot;&lt;/span&gt;,Osaka,&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;メイリオ&amp;quot;&lt;/span&gt;,Meiryo,&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ＭＳ Ｐゴシック&amp;quot;&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;MS PGothic&amp;quot;&lt;/span&gt;,&lt;span class=&quot;synType&quot;&gt;sans-serif&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;14px&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1.4&lt;/span&gt;;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;/* リストのマーカーを非表示 */&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;ul&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;ol&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;list-style-type&lt;/span&gt;:&lt;span class=&quot;synType&quot;&gt;none&lt;/span&gt;;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;/* デフォルトリンク色の設定 */&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;,
&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;:-webkit-any-&lt;span class=&quot;synPreProc&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;text-decoration&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;none&lt;/span&gt;;

  &lt;span class=&quot;synType&quot;&gt;color&lt;/span&gt;: $baseGray;

  &amp;amp;:hover {
    &lt;span class=&quot;synType&quot;&gt;color&lt;/span&gt;: $baseLightBlue;
  &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;synError&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;/*--------------------------&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;　レイアウト&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;---------------------------*/&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;border-top&lt;/span&gt;: $baseGray &lt;span class=&quot;synConstant&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;solid&lt;/span&gt;;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;/* ページ全体のラッパー&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;---------------------------*/&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;#wrap&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;relative&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100%&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;!important&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100%&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100%&lt;/span&gt;;

  &lt;span class=&quot;synType&quot;&gt;background-color&lt;/span&gt;: $baseBlue;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;/* ヘッダー&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;---------------------------*/&lt;/span&gt;
header &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;border-bottom&lt;/span&gt;: $baseGray &lt;span class=&quot;synConstant&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;solid&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;white&lt;/span&gt;;

  .inner {
    &lt;span class=&quot;synType&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;800px&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;58px&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;auto&lt;/span&gt;;
   
    #logo {
      &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;250%&lt;/span&gt;;
      &lt;span class=&quot;synType&quot;&gt;text-decoration&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;none&lt;/span&gt;;
    &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;synIdentifier&quot;&gt;#catchcopy&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;synType&quot;&gt;color&lt;/span&gt;: $baseGray;
      &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;90%&lt;/span&gt;;
      &lt;span class=&quot;synType&quot;&gt;position&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;relative&lt;/span&gt;;
      &lt;span class=&quot;synType&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;-10px&lt;/span&gt;;
      &lt;span class=&quot;synType&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5px&lt;/span&gt;;
    &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;synError&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;synError&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;/* メインコンテンツ&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;---------------------------*/&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;800px&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;100%&lt;/span&gt;;

  &lt;span class=&quot;synType&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;10px&lt;/span&gt;;

  &lt;span class=&quot;synType&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;auto&lt;/span&gt;;

  &lt;span class=&quot;synType&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;white&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;border&lt;/span&gt;-radius: &lt;span class=&quot;synConstant&quot;&gt;5px&lt;/span&gt;;


  h&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; {
    &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;200%&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;20px&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;border-bottom&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;solid&lt;/span&gt; $baseBlue;
  &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;synError&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;synComment&quot;&gt;/*-----------------------------&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;　共通コンポーネント&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;------------------------------*/&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;[&lt;/span&gt;type&lt;span class=&quot;synSpecial&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;]&lt;/span&gt;,
&lt;span class=&quot;synStatement&quot;&gt;textarea&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;border&lt;/span&gt;-radius: &lt;span class=&quot;synConstant&quot;&gt;3px&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;solid&lt;/span&gt; $baseGray; 
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
では、画面を開き、スタイリングされていることを確認しましょう。&lt;br /&gt;
もっさりした感じがなくなりましたね。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813153533.png&quot; alt=&quot;f:id:nipe880324:20140813153533p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813153533p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
    &lt;h4&gt;9.2. 投稿詳細画面のスタイリングをする&lt;/h4&gt;
    &lt;p&gt;全体のスタイリングをしたので、ほとんど見た目はよくなりました。しかし、各メインコンテンツは各々スタイリングが必要です。&lt;br /&gt;
今回は特に最もスタイリングが必要そうな投稿詳細画面(&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;)をスタイリングしていきます。&lt;/p&gt;&lt;p&gt;まず、&lt;code&gt;table&lt;/code&gt;タグや&lt;code&gt;input&lt;/code&gt;要素はアプリケーション全体で使う「共通&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%DD%A1%BC%A5%CD%A5%F3%A5%C8&quot;&gt;コンポーネント&lt;/a&gt;」のためcommonの一番下に追記します。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;/*-----------------------------&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;　共通コンポーネント&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;------------------------------*/&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;[&lt;/span&gt;type&lt;span class=&quot;synSpecial&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;]&lt;/span&gt;,
&lt;span class=&quot;synStatement&quot;&gt;textarea&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;border&lt;/span&gt;-radius: &lt;span class=&quot;synConstant&quot;&gt;3px&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;solid&lt;/span&gt; $baseGray; 
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;次に、個別の画面の微調整はコントローラー毎にあるファイルを修正します。&lt;br /&gt;
今回は「投稿(post)」なので、&lt;code&gt;app/assets/stylesheets/posts.css.scss&lt;/code&gt;です。&lt;br /&gt;
しかし、先ほど言った通り、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;では全ての画面で全ての&lt;code&gt;Scss&lt;/code&gt;ファイルを読み込んでしまうので一工夫が必要です。&lt;br /&gt;
&lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt;の&lt;code&gt;body&lt;/code&gt;タグに&lt;code&gt;class&lt;/code&gt;属性を追加し、値は現在ビューを表示している&quot;コントローラー名&quot;にしましょう。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;&amp;lt;%= controller.controller_name %&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;HTMLソースをみれば分かりますが、これは、次のようにHTMLに変換されます。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  ルート画面(app/views/welcome/index.html.erb)のような&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  WelcomeControllerでレンダリングされた画面&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;welcome&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synComment&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  投稿一覧画面(app/views/posts/index.html.erb)のような&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;  PostsControllerでレンダリングされた画面&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;posts&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;投稿詳細画面(&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;)のスタイリングをするために、少し&lt;code&gt;app/views/posts/show.html.erb&lt;/code&gt;のHTML構造を修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;post_info&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;タイトル：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; @post.title&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
   
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;内容：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; simple_format&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @post.&lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメント&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; @post.comments %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;コメントを追加&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; render&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;comments/form&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;戻る&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, posts_path %&amp;gt;&lt;/span&gt;
| &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; link_to&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;編集&#39;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;, edit_post_path(@post) %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
それでは&lt;code&gt;app/assets/stylesheets/posts.css.scss&lt;/code&gt;を記載します。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;@import &amp;quot;common.css.scss&amp;quot;;&lt;/span&gt;

&lt;span class=&quot;synIdentifier&quot;&gt;.posts&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  h&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt; {
    &lt;span class=&quot;synType&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;20px&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5px&lt;/span&gt;;

    &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;110%&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;border-bottom&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;dotted&lt;/span&gt; $baseLightBlue;
  &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;.post_info&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;5px&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;30px&lt;/span&gt;;

    &lt;span class=&quot;synType&quot;&gt;background-color&lt;/span&gt;: $baseLightGray;
    &lt;span class=&quot;synType&quot;&gt;border&lt;/span&gt;-radius: &lt;span class=&quot;synConstant&quot;&gt;5px&lt;/span&gt;;

    strong {
      &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;110%&lt;/span&gt;;
    &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;synError&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;synError&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、投稿の詳細画面(&lt;code&gt;http://localhost:3000/posts/1&lt;/code&gt;)を確認しましょう。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813160348.png&quot; alt=&quot;f:id:nipe880324:20140813160348p:plain:w480&quot; title=&quot;f:id:nipe880324:20140813160348p:plain:w480&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:480px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
これで、スタイリングはおしまいです。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;coffee-script&quot;&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/CoffeeScript&quot;&gt;CoffeeScript&lt;/a&gt;で&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;を使う&lt;/h3&gt;今度は、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;で&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;の使い方を説明します。&lt;br /&gt;
その例として、「コメント入力時に文字数を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;で表示する」ようにします。&lt;br /&gt;
イメージ次のような形です。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813160712.png&quot; alt=&quot;f:id:nipe880324:20140813160712p:plain:w320&quot; title=&quot;f:id:nipe880324:20140813160712p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;スタイリングをするために&lt;code&gt;Scss&lt;/code&gt;が採用されているように、&lt;br /&gt;
&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Rails&quot;&gt;Rails&lt;/a&gt;では&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;を記載するために&lt;code&gt;CoffeeScript&lt;/code&gt;という&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BF%B8%C0%B8%EC&quot;&gt;メタ言語&lt;/a&gt;が採用されています。&lt;br /&gt;
簡易にかけますが、学習が必要なので&lt;a href=&quot;http://dotinstall.com/lessons/basic_coffeescript&quot; target=&quot;_blank&quot;&gt;ドットインストール - CoffeeScript入門&lt;/code&gt;などを実施してみて下さい。&lt;/p&gt;&lt;p&gt;まず、文字数の表示領域を追加するために、&lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt;を修正します。&lt;/p&gt;
&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; form_for(&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; [@post, @post.comments.build] ) do |f| %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメンター&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_field&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :commenter %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.text_area&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; :body, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 60, &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;: 8 %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所　開始 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;hint&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;入力文字数：&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;char_num&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synComment&quot;&gt;&amp;lt;!-- 追加箇所　終了 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; f.submit&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;コメント投稿&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;
文字数表示をスタイリングしておきます。&lt;br /&gt;
&lt;code&gt;app/assets/stylesheets/common.css.scss&lt;/code&gt;の一番下に下記を追加して下さい。&lt;/p&gt;
&lt;pre class=&quot;code lang-css&quot; data-lang=&quot;css&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;.hint&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synType&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;86%&lt;/span&gt;;
  &lt;span class=&quot;synType&quot;&gt;color&lt;/span&gt;: $baseGray;
  &lt;span class=&quot;synType&quot;&gt;font-style&lt;/span&gt;: &lt;span class=&quot;synType&quot;&gt;italic&lt;/span&gt;; 
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;では、JavaScriptを記載します。&lt;br /&gt;
&lt;code&gt;Scss&lt;/code&gt;と同じように、コメントに関するJavaScriptなので&lt;code&gt;comments.js.coffee&lt;/code&gt;に下記を記載します。（CoffeeScriptで記載しています）&lt;/p&gt;
&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;$ -&amp;gt;
  $(&lt;span class=&quot;synConstant&quot;&gt;&#39;#comment_body&#39;&lt;/span&gt;).keyup -&amp;gt;
    $(&lt;span class=&quot;synConstant&quot;&gt;&#39;#char_num&#39;&lt;/span&gt;).text($(&lt;span class=&quot;synIdentifier&quot;&gt;this&lt;/span&gt;).val().length)
&lt;/pre&gt;&lt;p&gt;&lt;i&gt;RailsではgemによりjQueryが標準でインクルードされているため使うことが可能です。しかし、jQueryをCoffeeScriptで記載するには少し癖ありますので、&lt;a href=&quot;http://www.webopixel.net/javascript/660.html&quot; target=&quot;_blank&quot;&gt;CoffeeScriptでjQueryを使うときのメモ&lt;/a&gt;などを読んでみて下さい。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;では、実際にコメントを入力し、動的に入力文字列の値が変わることを確認してみて下さい。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/n/nipe880324/20140813/20140813160712.png&quot; alt=&quot;f:id:nipe880324:20140813160712p:plain:w320&quot; title=&quot;f:id:nipe880324:20140813160712p:plain:w320&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:320px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;h3 id=&quot;what-is-next&quot;&gt;次は？&lt;/h3&gt;おつかれさまでした。そして、おめでとうございます。&lt;/p&gt;&lt;p&gt;あなたは、これでRailsの基本的な開発方法を学ぶことができるようになりました。&lt;br /&gt;
ルーティング、コントローラー、モデル、ビュー、スタイリング、JavaScriptなど数々のことについて知ることができました。&lt;/p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;さて、今後どうしていったらいいかのアドバイスを簡単に説明していきます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;このブログに追加の自力で機能を追加する。例えば、ユーザ認証機能、ファイルアップロード機能など。そのときに、このページのトップにある「有用なライブラリ」の&lt;code&gt;devise&lt;/code&gt;や&lt;code&gt;paperclip&lt;/code&gt;の記事がとても参考になると思います。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;「&lt;a href=&quot;http://railstutorial.jp/&quot; target=&quot;_blank&quot;&gt;Railsチュートリアル&lt;/a&gt;」というオンラインブックで「Twitter風アプリをテスト駆動開発かつAgileで開発」する&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;i&gt;GitやRSpecでテストを書いてからコードを書くなどさまざまなことが知れるのでとてもお勧め。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;「RailsによるアジャイルWebアプリケーション開発 第4版」という本で「ECサイトをAgileで開発」する。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;i&gt; Railsを開発した人が書いてあるのでとても内容が分かりやすくて実用的だた、Rails 3.2で説明しているのでRailsが少し古いことが欠点&lt;/i&gt;&lt;br /&gt;
&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4274068668/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/51Gibg-iYTL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;RailsによるアジャイルWebアプリケーション開発 第4版&quot; title=&quot;RailsによるアジャイルWebアプリケーション開発 第4版&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4274068668/hatena-blog-22/&quot;&gt;RailsによるアジャイルWebアプリケーション開発 第4版&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;作者:&lt;/span&gt; Sam Ruby,Dave Thomas,David Heinemeier Hansson,前田修吾&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; オーム社&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2011/12/01&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; 単行本（ソフトカバー）&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;購入&lt;/span&gt;: 12人 &lt;span class=&quot;hatena-asin-detail-label&quot;&gt;クリック&lt;/span&gt;: 206回&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/4274068668/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログ (40件) を見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;「&lt;a href=&quot;http://guides.rubyonrails.org/index.html&quot; target=&quot;_blank&quot;&gt;Rails Guides&lt;/a&gt;」を読んでより深く詳細にRailsの各機能について学ぶ。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;i&gt;英語で読むのに時間がかかるというのが欠点だが、内容の豊富さはダントツでお勧め。&lt;/i&gt;&lt;br /&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;「&lt;a href=&quot;http://railscasts.com/&quot; target=&quot;_blank&quot;&gt;RailsCast」というRails専用のスクリーンキャスト(※ドットインストールと同じ動画で説明してくれるサイト)で幅広い情報を学ぶ。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;i&gt;Rails界隈ではとても人気な（だった？）スクリーンキャストでRailsGuidsと違った種類の内容の多さはピカイチ。英語で説明しているので分かりづらいことと、2013年1月から更新が止まっていて内容が一部古いこと、一部有料の記事があることが欠点。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;「実際に独自で作って、つまりながらも完成させること」と「一部の機能を深く広く学ぶこと」を繰り返していくことにより、どんどんとRailsの知識やスキルが深まっていくのでまずは自分で何か機能を追加してみることをお勧めします。&lt;/p&gt;&lt;p&gt;では、以上です。&lt;br /&gt;
わかりづらい、間違っている箇所などありましたらコメントを下さい。&lt;br /&gt;
長くなりましたがここまで読んでいただきありがとうございました。&lt;br /&gt;
そして、おつかれさまです。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;</description>
          <pubDate>Wed, 13 Aug 2014 16:41:58 +0900</pubDate>
          <guid isPermalink="false">hatenablog://entry/12921228815729996513</guid>
          
            <category>Rails初級</category>
          
            <category>作ってみよう</category>
          
        </item>
      
    
  </channel>
</rss>
